

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Feb 01 15:52:35 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51  0000                     
    52                           	psect	idataCOMRAM
    53  000F96                     __pidataCOMRAM:
    54                           	opt stack 0
    55                           
    56                           ;initializer for _c_path
    57  000F96  000A               	dw	10
    58                           
    59                           ;initializer for _cm100
    60  000F98  5B1B               	dw	23323
    61                           
    62                           ;initializer for _cm120
    63  000F9A  6D53               	dw	27987
    64                           
    65                           ;initializer for _cm180
    66  000F9C  51FF               	dw	20991
    67                           
    68                           ;initializer for _cm220
    69  000F9E  6437               	dw	25655
    70                           
    71                           ;initializer for _cm50
    72  000FA0  2D8E               	dw	11662
    73                           
    74                           ;initializer for _cm80
    75  000FA2  48E3               	dw	18659
    76                           
    77                           ;initializer for _pin_out
    78  000FA4  41                 	db	65
    79  0000                     _ANSELA	set	3896
    80  0000                     _ANSELB	set	3897
    81  0000                     _ANSELC	set	3898
    82  0000                     _ANSELD	set	3899
    83  0000                     _ANSELE	set	3900
    84  0000                     _T5CONbits	set	3918
    85  0000                     _T5GCONbits	set	3917
    86  0000                     _TMR5H	set	3920
    87  0000                     _TMR5L	set	3919
    88  0000                     _CCP1CONbits	set	4029
    89  0000                     _CCPR1H	set	4031
    90  0000                     _CCPR1L	set	4030
    91  0000                     _OSCCON	set	4051
    92  0000                     _OSCCON2bits	set	4050
    93  0000                     _OSCTUNEbits	set	3995
    94  0000                     _PORTA	set	3968
    95  0000                     _PORTAbits	set	3968
    96  0000                     _PORTB	set	3969
    97  0000                     _PORTBbits	set	3969
    98  0000                     _PORTC	set	3970
    99  0000                     _PORTD	set	3971
   100  0000                     _PORTE	set	3972
   101  0000                     _SSP1BUF	set	4041
   102  0000                     _SSP1CON1	set	4038
   103  0000                     _SSP1STAT	set	4039
   104  0000                     _T1CONbits	set	4045
   105  0000                     _T3CONbits	set	4017
   106  0000                     _T3GCONbits	set	4020
   107  0000                     _TMR1H	set	4047
   108  0000                     _TMR1L	set	4046
   109  0000                     _TMR3H	set	4019
   110  0000                     _TMR3L	set	4018
   111  0000                     _TRISA	set	3986
   112  0000                     _TRISB	set	3987
   113  0000                     _TRISC	set	3988
   114  0000                     _TRISD	set	3989
   115  0000                     _TRISE	set	3990
   116  0000                     _CCP1IE	set	31978
   117  0000                     _CCP1IF	set	31986
   118  0000                     _GIE	set	32663
   119  0000                     _PEIE	set	32662
   120  0000                     _SSP1IF	set	31987
   121  0000                     _TMR3GIE	set	32025
   122  0000                     _TMR3GIF	set	32033
   123  0000                     _TMR3IF	set	32009
   124  0000                     _TMR5GIF	set	32034
   125                           
   126                           ; #config settings
   127  0000                     
   128                           	psect	cinit
   129  000CC8                     __pcinit:
   130                           	opt stack 0
   131  000CC8                     start_initialization:
   132                           	opt stack 0
   133  000CC8                     __initialization:
   134                           	opt stack 0
   135                           
   136                           ; Clear objects allocated to BANK1 (42 bytes)
   137  000CC8  EE01  F000         	lfsr	0,__pbssBANK1
   138  000CCC  0E2A               	movlw	42
   139  000CCE                     clear_0:
   140  000CCE  6AEE               	clrf	postinc0,c
   141  000CD0  06E8               	decf	wreg,f,c
   142  000CD2  E1FD               	bnz	clear_0
   143                           
   144                           ; Clear objects allocated to BANK0 (123 bytes)
   145  000CD4  EE00  F060         	lfsr	0,__pbssBANK0
   146  000CD8  0E7B               	movlw	123
   147  000CDA                     clear_1:
   148  000CDA  6AEE               	clrf	postinc0,c
   149  000CDC  06E8               	decf	wreg,f,c
   150  000CDE  E1FD               	bnz	clear_1
   151                           
   152                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   153  000CE0  6A4E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   154                           
   155                           ; Clear objects allocated to COMRAM (44 bytes)
   156  000CE2  EE00  F001         	lfsr	0,__pbssCOMRAM
   157  000CE6  0E2C               	movlw	44
   158  000CE8                     clear_2:
   159  000CE8  6AEE               	clrf	postinc0,c
   160  000CEA  06E8               	decf	wreg,f,c
   161  000CEC  E1FD               	bnz	clear_2
   162                           
   163                           ; Initialize objects allocated to COMRAM (15 bytes)
   164                           ; load TBLPTR registers with __pidataCOMRAM
   165  000CEE  0E96               	movlw	low __pidataCOMRAM
   166  000CF0  6EF6               	movwf	tblptrl,c
   167  000CF2  0E0F               	movlw	high __pidataCOMRAM
   168  000CF4  6EF7               	movwf	tblptrh,c
   169  000CF6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   170  000CF8  6EF8               	movwf	tblptru,c
   171  000CFA  EE00  F03F         	lfsr	0,__pdataCOMRAM
   172  000CFE  EE10 F00F          	lfsr	1,15
   173  000D02                     copy_data0:
   174  000D02  0009               	tblrd		*+
   175  000D04  CFF5 FFEE          	movff	tablat,postinc0
   176  000D08  50E5               	movf	postdec1,w,c
   177  000D0A  50E1               	movf	fsr1l,w,c
   178  000D0C  E1FA               	bnz	copy_data0
   179  000D0E                     end_of_initialization:
   180                           	opt stack 0
   181  000D0E                     __end_of__initialization:
   182                           	opt stack 0
   183  000D0E  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   184  000D10  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   185  000D12  0E00               	movlw	low (__Lmediumconst shr (0+16))
   186  000D14  6EF8               	movwf	tblptru,c
   187  000D16  0100               	movlb	0
   188  000D18  EFFA  F006         	goto	_main	;jump to C main() function
   189                           tblptru	equ	0xFF8
   190                           tblptrh	equ	0xFF7
   191                           tblptrl	equ	0xFF6
   192                           tablat	equ	0xFF5
   193                           postinc0	equ	0xFEE
   194                           wreg	equ	0xFE8
   195                           postdec1	equ	0xFE5
   196                           fsr1l	equ	0xFE1
   197                           
   198                           	psect	bitbssCOMRAM
   199  000270                     __pbitbssCOMRAM:
   200                           	opt stack 0
   201  000270                     _direction:
   202                           	opt stack 0
   203  000270                     	ds	1
   204  000271                     _frame:
   205                           	opt stack 0
   206  000271                     	ds	1
   207  000272                     _highpassallowed:
   208                           	opt stack 0
   209  000272                     	ds	1
   210  000273                     _obj_type:
   211                           	opt stack 0
   212  000273                     	ds	1
   213  000274                     _set_ret:
   214                           	opt stack 0
   215  000274                     	ds	1
   216  000275                     _storedif:
   217                           	opt stack 0
   218  000275                     	ds	1
   219  000276                     _table:
   220                           	opt stack 0
   221  000276                     	ds	1
   222                           tblptru	equ	0xFF8
   223                           tblptrh	equ	0xFF7
   224                           tblptrl	equ	0xFF6
   225                           tablat	equ	0xFF5
   226                           postinc0	equ	0xFEE
   227                           wreg	equ	0xFE8
   228                           postdec1	equ	0xFE5
   229                           fsr1l	equ	0xFE1
   230                           
   231                           	psect	bssCOMRAM
   232  000001                     __pbssCOMRAM:
   233                           	opt stack 0
   234  000001                     _a_frame:
   235                           	opt stack 0
   236  000001                     	ds	20
   237  000015                     _a_frame_dif:
   238                           	opt stack 0
   239  000015                     	ds	10
   240  00001F                     _outgoing:
   241                           	opt stack 0
   242  00001F                     	ds	3
   243  000022                     _id_current_cc:
   244                           	opt stack 0
   245  000022                     	ds	2
   246  000024                     _lw:
   247                           	opt stack 0
   248  000024                     	ds	2
   249  000026                     _time_gear:
   250                           	opt stack 0
   251  000026                     	ds	2
   252  000028                     _time_height:
   253                           	opt stack 0
   254  000028                     	ds	2
   255  00002A                     _w:
   256                           	opt stack 0
   257  00002A                     	ds	2
   258  00002C                     _pulsecounter:
   259                           	opt stack 0
   260  00002C                     	ds	1
   261                           tblptru	equ	0xFF8
   262                           tblptrh	equ	0xFF7
   263                           tblptrl	equ	0xFF6
   264                           tablat	equ	0xFF5
   265                           postinc0	equ	0xFEE
   266                           wreg	equ	0xFE8
   267                           postdec1	equ	0xFE5
   268                           fsr1l	equ	0xFE1
   269                           
   270                           	psect	dataCOMRAM
   271  00003F                     __pdataCOMRAM:
   272                           	opt stack 0
   273  00003F                     _c_path:
   274                           	opt stack 0
   275  00003F                     	ds	2
   276  000041                     _cm100:
   277                           	opt stack 0
   278  000041                     	ds	2
   279  000043                     _cm120:
   280                           	opt stack 0
   281  000043                     	ds	2
   282  000045                     _cm180:
   283                           	opt stack 0
   284  000045                     	ds	2
   285  000047                     _cm220:
   286                           	opt stack 0
   287  000047                     	ds	2
   288  000049                     _cm50:
   289                           	opt stack 0
   290  000049                     	ds	2
   291  00004B                     _cm80:
   292                           	opt stack 0
   293  00004B                     	ds	2
   294  00004D                     _pin_out:
   295                           	opt stack 0
   296  00004D                     	ds	1
   297                           tblptru	equ	0xFF8
   298                           tblptrh	equ	0xFF7
   299                           tblptrl	equ	0xFF6
   300                           tablat	equ	0xFF5
   301                           postinc0	equ	0xFEE
   302                           wreg	equ	0xFE8
   303                           postdec1	equ	0xFE5
   304                           fsr1l	equ	0xFE1
   305                           
   306                           	psect	bssBANK0
   307  000060                     __pbssBANK0:
   308                           	opt stack 0
   309  000060                     _a_color:
   310                           	opt stack 0
   311  000060                     	ds	70
   312  0000A6                     _a_path:
   313                           	opt stack 0
   314  0000A6                     	ds	42
   315  0000D0                     _a_actors:
   316                           	opt stack 0
   317  0000D0                     	ds	8
   318  0000D8                     _changerate:
   319                           	opt stack 0
   320  0000D8                     	ds	3
   321                           tblptru	equ	0xFF8
   322                           tblptrh	equ	0xFF7
   323                           tblptrl	equ	0xFF6
   324                           tablat	equ	0xFF5
   325                           postinc0	equ	0xFEE
   326                           wreg	equ	0xFE8
   327                           postdec1	equ	0xFE5
   328                           fsr1l	equ	0xFE1
   329                           
   330                           	psect	bssBANK1
   331  000100                     __pbssBANK1:
   332                           	opt stack 0
   333  000100                     _a_path_old:
   334                           	opt stack 0
   335  000100                     	ds	42
   336                           tblptru	equ	0xFF8
   337                           tblptrh	equ	0xFF7
   338                           tblptrl	equ	0xFF6
   339                           tablat	equ	0xFF5
   340                           postinc0	equ	0xFEE
   341                           wreg	equ	0xFE8
   342                           postdec1	equ	0xFE5
   343                           fsr1l	equ	0xFE1
   344                           
   345                           	psect	cstackBANK0
   346  0000DB                     __pcstackBANK0:
   347                           	opt stack 0
   348  0000DB                     ??_ReadHeight:
   349  0000DB                     ?_ExchangeSpiWord:
   350                           	opt stack 0
   351  0000DB                     ActAileron@change:
   352                           	opt stack 0
   353  0000DB                     ActElevator@change:
   354                           	opt stack 0
   355  0000DB                     ActThrottle@change:
   356                           	opt stack 0
   357  0000DB                     ActRudder@change:
   358                           	opt stack 0
   359  0000DB                     ExchangeSpiWord@byte2:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x0
   363  0000DB                     	ds	1
   364  0000DC                     ??_CheckThrottle:
   365  0000DC                     ??_CheckRudderAhead:
   366  0000DC                     ??_CheckRudderBack:
   367  0000DC                     
   368                           ; 0 bytes @ 0x1
   369  0000DC                     	ds	1
   370  0000DD                     ??_CompareFrames:
   371  0000DD                     ExchangeSpiWord@byte1:
   372                           	opt stack 0
   373                           
   374                           ; 1 bytes @ 0x2
   375  0000DD                     	ds	1
   376  0000DE                     ExchangeSpiWord@SPI_word:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x3
   380  0000DE                     	ds	2
   381  0000E0                     ReadObject@des_obj:
   382                           	opt stack 0
   383                           
   384                           ; 2 bytes @ 0x5
   385  0000E0                     	ds	1
   386  0000E1                     CheckThrottle@i_1742:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0x6
   390  0000E1                     	ds	1
   391  0000E2                     ReadObject@max_obj:
   392                           	opt stack 0
   393                           
   394                           ; 1 bytes @ 0x7
   395  0000E2                     	ds	1
   396  0000E3                     CheckThrottle@tmp:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x8
   400  0000E3                     	ds	2
   401  0000E5                     ReadObject@checksum:
   402                           	opt stack 0
   403  0000E5                     CheckThrottle@i:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0xA
   407  0000E5                     	ds	2
   408  0000E7                     ReadObject@c:
   409                           	opt stack 0
   410  0000E7                     CheckThrottle@i_1741:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0xC
   414  0000E7                     	ds	1
   415  0000E8                     ReadObject@c_obj:
   416                           	opt stack 0
   417                           
   418                           ; 1 bytes @ 0xD
   419  0000E8                     	ds	1
   420  0000E9                     tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           tblptrl	equ	0xFF6
   423                           tablat	equ	0xFF5
   424                           postinc0	equ	0xFEE
   425                           wreg	equ	0xFE8
   426                           postdec1	equ	0xFE5
   427                           fsr1l	equ	0xFE1
   428                           
   429                           ; 0 bytes @ 0xE
   430                           
   431                           	psect	cstackCOMRAM
   432  00002D                     __pcstackCOMRAM:
   433                           	opt stack 0
   434  00002D                     ?_CalcTime:
   435                           	opt stack 0
   436  00002D                     Delay@del:
   437                           	opt stack 0
   438                           
   439                           ; 2 bytes @ 0x0
   440  00002D                     	ds	2
   441  00002F                     CalcTime@time_gear_meas:
   442                           	opt stack 0
   443                           
   444                           ; 2 bytes @ 0x2
   445  00002F                     	ds	2
   446  000031                     ??_Isr:
   447                           
   448                           ; 0 bytes @ 0x4
   449  000031                     	ds	14
   450                           tblptru	equ	0xFF8
   451                           tblptrh	equ	0xFF7
   452                           tblptrl	equ	0xFF6
   453                           tablat	equ	0xFF5
   454                           postinc0	equ	0xFEE
   455                           wreg	equ	0xFE8
   456                           postdec1	equ	0xFE5
   457                           fsr1l	equ	0xFE1
   458                           
   459 ;;
   460 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   461 ;;
   462 ;; *************** function _main *****************
   463 ;; Defined at:
   464 ;;		line 85 in file "main.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;		None
   469 ;; Return value:  Size  Location     Type
   470 ;;		None               void
   471 ;; Registers used:
   472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   473 ;; Tracked objects:
   474 ;;		On entry : 0/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   482 ;;Total ram usage:        0 bytes
   483 ;; Hardware stack levels required when called:    6
   484 ;; This function calls:
   485 ;;		_CheckThrottle
   486 ;;		_CompareFrames
   487 ;;		_Init
   488 ;;		_ReadHeight
   489 ;;		_ReadObject
   490 ;;		_StartHeightMeasure
   491 ;;		_StoreAsOld
   492 ;; This function is called by:
   493 ;;		Startup code after reset
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           	psect	text0
   498  000DF4                     __ptext0:
   499                           	opt stack 0
   500  000DF4                     _main:
   501                           	opt stack 25
   502                           
   503                           ;main.c: 86: Init();
   504                           
   505                           ;incstack = 0
   506  000DF4  EC3D  F007         	call	_Init	;wreg free
   507  000DF8                     l559:
   508                           
   509                           ;main.c: 88: StartHeightMeasure();
   510  000DF8  ECC3  F007         	call	_StartHeightMeasure	;wreg free
   511                           
   512                           ;main.c: 89: ReadObject(1, 10, 5);
   513  000DFC  0E00               	movlw	0
   514  000DFE  0100               	movlb	0	; () banked
   515  000E00  6FE1               	movwf	(ReadObject@des_obj+1)& (0+255),b
   516  000E02  0E0A               	movlw	10
   517  000E04  6FE0               	movwf	ReadObject@des_obj& (0+255),b
   518  000E06  0E05               	movlw	5
   519  000E08  0100               	movlb	0	; () banked
   520  000E0A  6FE2               	movwf	ReadObject@max_obj& (0+255),b
   521  000E0C  0E01               	movlw	1
   522  000E0E  ECFD  F001         	call	_ReadObject
   523                           
   524                           ;main.c: 90: CompareFrames();
   525  000E12  EC39  F005         	call	_CompareFrames	;wreg free
   526                           
   527                           ;main.c: 91: ReadHeight();
   528  000E16  ECDA  F005         	call	_ReadHeight	;wreg free
   529                           
   530                           ;main.c: 92: CheckThrottle();
   531  000E1A  EC50  F000         	call	_CheckThrottle	;wreg free
   532                           
   533                           ;main.c: 93: StoreAsOld();
   534  000E1E  EC28  F007         	call	_StoreAsOld	;wreg free
   535  000E22  D7EA               	goto	l559
   536  000E24                     __end_of_main:
   537                           	opt stack 0
   538                           tblptru	equ	0xFF8
   539                           tblptrh	equ	0xFF7
   540                           tblptrl	equ	0xFF6
   541                           tablat	equ	0xFF5
   542                           postinc0	equ	0xFEE
   543                           wreg	equ	0xFE8
   544                           postdec1	equ	0xFE5
   545                           fsr1l	equ	0xFE1
   546                           
   547 ;; *************** function _StoreAsOld *****************
   548 ;; Defined at:
   549 ;;		line 447 in file "position.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;		None
   552 ;; Auto vars:     Size  Location     Type
   553 ;;		None
   554 ;; Return value:  Size  Location     Type
   555 ;;		None               void
   556 ;; Registers used:
   557 ;;		None
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;Total ram usage:        0 bytes
   568 ;; Hardware stack levels used:    1
   569 ;; Hardware stack levels required when called:    3
   570 ;; This function calls:
   571 ;;		Nothing
   572 ;; This function is called by:
   573 ;;		_main
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           	psect	text1
   578  000E50                     __ptext1:
   579                           	opt stack 0
   580  000E50                     _StoreAsOld:
   581                           	opt stack 27
   582                           
   583                           ;position.c: 448: a_frame[1].num = a_frame[0].num;
   584                           
   585                           ;incstack = 0
   586  000E50  C001  F00B         	movff	_a_frame,_a_frame+10
   587  000E54  C002  F00C         	movff	_a_frame+1,_a_frame+11
   588                           
   589                           ;position.c: 449: a_frame[1].pos_x = a_frame[0].pos_x;
   590  000E58  C003  F00D         	movff	_a_frame+2,_a_frame+12
   591  000E5C  C004  F00E         	movff	_a_frame+3,_a_frame+13
   592                           
   593                           ;position.c: 450: a_frame[1].pos_y = a_frame[0].pos_y;
   594  000E60  C005  F00F         	movff	_a_frame+4,_a_frame+14
   595  000E64  C006  F010         	movff	_a_frame+5,_a_frame+15
   596                           
   597                           ;position.c: 451: a_frame[1].height = a_frame[0].height;
   598  000E68  C007  F011         	movff	_a_frame+6,_a_frame+16
   599  000E6C  C008  F012         	movff	_a_frame+7,_a_frame+17
   600                           
   601                           ;position.c: 452: a_frame[1].angle = a_frame[0].angle;
   602  000E70  C009  F013         	movff	_a_frame+8,_a_frame+18
   603  000E74  C00A  F014         	movff	_a_frame+9,_a_frame+19
   604  000E78  0012               	return		;funcret
   605  000E7A                     __end_of_StoreAsOld:
   606                           	opt stack 0
   607                           tblptru	equ	0xFF8
   608                           tblptrh	equ	0xFF7
   609                           tblptrl	equ	0xFF6
   610                           tablat	equ	0xFF5
   611                           postinc0	equ	0xFEE
   612                           wreg	equ	0xFE8
   613                           postdec1	equ	0xFE5
   614                           fsr1l	equ	0xFE1
   615                           
   616 ;; *************** function _StartHeightMeasure *****************
   617 ;; Defined at:
   618 ;;		line 21 in file "ultrasonic.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;		None               void
   625 ;; Registers used:
   626 ;;		wreg, status,2
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   636 ;;Total ram usage:        0 bytes
   637 ;; Hardware stack levels used:    1
   638 ;; Hardware stack levels required when called:    3
   639 ;; This function calls:
   640 ;;		Nothing
   641 ;; This function is called by:
   642 ;;		_main
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text2
   647  000F86                     __ptext2:
   648                           	opt stack 0
   649  000F86                     _StartHeightMeasure:
   650                           	opt stack 27
   651                           
   652                           ;ultrasonic.c: 22: TMR5L = 0;
   653                           
   654                           ;incstack = 0
   655  000F86  0E00               	movlw	0
   656  000F88  010F               	movlb	15	; () banked
   657  000F8A  6F4F               	movwf	79,b	;volatile
   658                           
   659                           ;ultrasonic.c: 23: TMR5H = 0;
   660  000F8C  0E00               	movlw	0
   661  000F8E  010F               	movlb	15	; () banked
   662  000F90  6F50               	movwf	80,b	;volatile
   663                           
   664                           ; BSR set to: 15
   665                           ;ultrasonic.c: 24: PORTBbits.RB3 = 0;
   666  000F92  9681               	bcf	3969,3,c	;volatile
   667                           
   668                           ; BSR set to: 15
   669  000F94  0012               	return		;funcret
   670  000F96                     __end_of_StartHeightMeasure:
   671                           	opt stack 0
   672                           tblptru	equ	0xFF8
   673                           tblptrh	equ	0xFF7
   674                           tblptrl	equ	0xFF6
   675                           tablat	equ	0xFF5
   676                           postinc0	equ	0xFEE
   677                           wreg	equ	0xFE8
   678                           postdec1	equ	0xFE5
   679                           fsr1l	equ	0xFE1
   680                           
   681 ;; *************** function _ReadObject *****************
   682 ;; Defined at:
   683 ;;		line 27 in file "pixy.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;  des_obj_type    1    wreg     unsigned char 
   686 ;;  des_obj         2    5[BANK0 ] unsigned int 
   687 ;;  max_obj         1    7[BANK0 ] unsigned char 
   688 ;; Auto vars:     Size  Location     Type
   689 ;;  des_obj_type    1    0[COMRAM] unsigned char 
   690 ;;  checksum        2   10[BANK0 ] unsigned int 
   691 ;;  c_obj           1   13[BANK0 ] unsigned char 
   692 ;;  c               1   12[BANK0 ] unsigned char 
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      unsigned char 
   695 ;; Registers used:
   696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   702 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   703 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   704 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   706 ;;Total ram usage:        9 bytes
   707 ;; Hardware stack levels used:    1
   708 ;; Hardware stack levels required when called:    4
   709 ;; This function calls:
   710 ;;		_ExchangeSpiWord
   711 ;; This function is called by:
   712 ;;		_main
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           	psect	text3
   717  0003FA                     __ptext3:
   718                           	opt stack 0
   719  0003FA                     _ReadObject:
   720                           	opt stack 26
   721                           
   722                           ;pixy.c: 28: frame = 0;
   723                           
   724                           ; BSR set to: 15
   725                           ;incstack = 0
   726  0003FA  924E               	bcf	_frame/(0+8),_frame& (0+7),c
   727                           
   728                           ;pixy.c: 29: unsigned char c = 0;
   729  0003FC  0E00               	movlw	0
   730  0003FE  0100               	movlb	0	; () banked
   731  000400  6FE7               	movwf	ReadObject@c& (0+255),b
   732                           
   733                           ;pixy.c: 30: for(unsigned char c_obj = 0; c_obj < max_obj; c_obj++) {
   734  000402  0E00               	movlw	0
   735  000404  0100               	movlb	0	; () banked
   736  000406  6FE8               	movwf	ReadObject@c_obj& (0+255),b
   737  000408  D187               	goto	l3312
   738  00040A                     l626:
   739                           
   740                           ; BSR set to: 0
   741                           ;pixy.c: 34: if(frame == 1) {
   742  00040A  A24E               	btfss	_frame/(0+8),_frame& (0+7),c
   743  00040C  D086               	goto	l631
   744                           
   745                           ; BSR set to: 0
   746                           ;pixy.c: 35: w = ExchangeSpiWord(0x5a, 0);
   747  00040E  0E00               	movlw	0
   748  000410  0100               	movlb	0	; () banked
   749  000412  6FDB               	movwf	ExchangeSpiWord@byte2& (0+255),b
   750  000414  0E5A               	movlw	90
   751  000416  EC37  F006         	call	_ExchangeSpiWord
   752  00041A  C0DB  F02A         	movff	?_ExchangeSpiWord,_w
   753  00041E  C0DC  F02B         	movff	?_ExchangeSpiWord+1,_w+1
   754                           
   755                           ;pixy.c: 36: if(w == 0xaa55) {
   756  000422  0E55               	movlw	85
   757  000424  182A               	xorwf	_w,w,c
   758  000426  E10F               	bnz	l3256
   759  000428  0EAA               	movlw	170
   760  00042A  182B               	xorwf	_w+1,w,c
   761  00042C  A4D8               	btfss	status,2,c
   762  00042E  D00B               	goto	l3256
   763                           
   764                           ;pixy.c: 37: a_color[c_obj].type = 0xaa55;
   765  000430  0100               	movlb	0	; () banked
   766  000432  51E8               	movf	ReadObject@c_obj& (0+255),w,b
   767  000434  0D0E               	mullw	14
   768  000436  0E60               	movlw	low _a_color
   769  000438  24F3               	addwf	prodl,w,c
   770  00043A  6ED9               	movwf	fsr2l,c
   771  00043C  0E00               	movlw	high _a_color
   772  00043E  20F4               	addwfc	prodh,w,c
   773  000440  6EDA               	movwf	fsr2h,c
   774  000442  0E55               	movlw	85
   775  000444  D011               	goto	L1
   776  000446                     l3256:
   777  000446  0E56               	movlw	86
   778  000448  182A               	xorwf	_w,w,c
   779  00044A  E167               	bnz	l631
   780  00044C  0EAA               	movlw	170
   781  00044E  182B               	xorwf	_w+1,w,c
   782  000450  A4D8               	btfss	status,2,c
   783  000452  D063               	goto	l631
   784                           
   785                           ;pixy.c: 39: a_color[c_obj].type = 0xaa56;
   786  000454  0100               	movlb	0	; () banked
   787  000456  51E8               	movf	ReadObject@c_obj& (0+255),w,b
   788  000458  0D0E               	mullw	14
   789  00045A  0E60               	movlw	low _a_color
   790  00045C  24F3               	addwf	prodl,w,c
   791  00045E  6ED9               	movwf	fsr2l,c
   792  000460  0E00               	movlw	high _a_color
   793  000462  20F4               	addwfc	prodh,w,c
   794  000464  6EDA               	movwf	fsr2h,c
   795  000466  0E56               	movlw	86
   796  000468                     L1:
   797  000468  6EDE               	movwf	postinc2,c
   798  00046A  0EAA               	movlw	170
   799  00046C  6EDD               	movwf	postdec2,c
   800                           
   801                           ; BSR set to: 0
   802                           ;pixy.c: 40: }
   803                           ;pixy.c: 41: }
   804                           ;pixy.c: 42: while(frame == 0) {
   805                           
   806                           ; BSR set to: 0
   807                           
   808                           ; BSR set to: 0
   809  00046E  D055               	goto	l631
   810  000470                     l3260:
   811                           
   812                           ;pixy.c: 43: w = ExchangeSpiWord(0x5a, 0);
   813  000470  0E00               	movlw	0
   814  000472  0100               	movlb	0	; () banked
   815  000474  6FDB               	movwf	ExchangeSpiWord@byte2& (0+255),b
   816  000476  0E5A               	movlw	90
   817  000478  EC37  F006         	call	_ExchangeSpiWord
   818  00047C  C0DB  F02A         	movff	?_ExchangeSpiWord,_w
   819  000480  C0DC  F02B         	movff	?_ExchangeSpiWord+1,_w+1
   820                           
   821                           ;pixy.c: 44: if(lw == 0xaa55 && w == 0xaa55) {
   822  000484  0E55               	movlw	85
   823  000486  1824               	xorwf	_lw,w,c
   824  000488  E118               	bnz	l3270
   825  00048A  0EAA               	movlw	170
   826  00048C  1825               	xorwf	_lw+1,w,c
   827  00048E  A4D8               	btfss	status,2,c
   828  000490  D014               	goto	l3270
   829  000492  0E55               	movlw	85
   830  000494  182A               	xorwf	_w,w,c
   831  000496  E111               	bnz	l3270
   832  000498  0EAA               	movlw	170
   833  00049A  182B               	xorwf	_w+1,w,c
   834  00049C  A4D8               	btfss	status,2,c
   835  00049E  D00D               	goto	l3270
   836                           
   837                           ;pixy.c: 45: frame = 1;
   838  0004A0  824E               	bsf	_frame/(0+8),_frame& (0+7),c
   839                           
   840                           ;pixy.c: 46: obj_type = 0;
   841  0004A2  964E               	bcf	_obj_type/(0+8),_obj_type& (0+7),c
   842                           
   843                           ;pixy.c: 47: a_color[c_obj].type = 0xaa55;
   844  0004A4  0100               	movlb	0	; () banked
   845  0004A6  51E8               	movf	ReadObject@c_obj& (0+255),w,b
   846  0004A8  0D0E               	mullw	14
   847  0004AA  0E60               	movlw	low _a_color
   848  0004AC  24F3               	addwf	prodl,w,c
   849  0004AE  6ED9               	movwf	fsr2l,c
   850  0004B0  0E00               	movlw	high _a_color
   851  0004B2  20F4               	addwfc	prodh,w,c
   852  0004B4  6EDA               	movwf	fsr2h,c
   853  0004B6  0E55               	movlw	85
   854  0004B8  D01A               	goto	L2
   855  0004BA                     l3270:
   856  0004BA  0E55               	movlw	85
   857  0004BC  1824               	xorwf	_lw,w,c
   858  0004BE  E11B               	bnz	l3278
   859  0004C0  0EAA               	movlw	170
   860  0004C2  1825               	xorwf	_lw+1,w,c
   861  0004C4  A4D8               	btfss	status,2,c
   862  0004C6  D017               	goto	l3278
   863  0004C8  0E56               	movlw	86
   864  0004CA  182A               	xorwf	_w,w,c
   865  0004CC  E114               	bnz	l3278
   866  0004CE  0EAA               	movlw	170
   867  0004D0  182B               	xorwf	_w+1,w,c
   868  0004D2  A4D8               	btfss	status,2,c
   869  0004D4  D010               	goto	l3278
   870                           
   871                           ;pixy.c: 49: frame = 1;
   872  0004D6  824E               	bsf	_frame/(0+8),_frame& (0+7),c
   873                           
   874                           ;pixy.c: 50: obj_type = 1;
   875  0004D8  864E               	bsf	_obj_type/(0+8),_obj_type& (0+7),c
   876                           
   877                           ;pixy.c: 51: a_color[c_obj].type = 0xaa56;
   878  0004DA  0100               	movlb	0	; () banked
   879  0004DC  51E8               	movf	ReadObject@c_obj& (0+255),w,b
   880  0004DE  0D0E               	mullw	14
   881  0004E0  0E60               	movlw	low _a_color
   882  0004E2  24F3               	addwf	prodl,w,c
   883  0004E4  6ED9               	movwf	fsr2l,c
   884  0004E6  0E00               	movlw	high _a_color
   885  0004E8  20F4               	addwfc	prodh,w,c
   886  0004EA  6EDA               	movwf	fsr2h,c
   887  0004EC  0E56               	movlw	86
   888  0004EE                     L2:
   889  0004EE  6EDE               	movwf	postinc2,c
   890  0004F0  0EAA               	movlw	170
   891  0004F2  6EDD               	movwf	postdec2,c
   892                           
   893                           ;pixy.c: 52: } else if(w == 0 && lw == 0){
   894  0004F4  D008               	goto	l634
   895  0004F6                     l3278:
   896  0004F6  502A               	movf	_w,w,c
   897  0004F8  102B               	iorwf	_w+1,w,c
   898  0004FA  A4D8               	btfss	status,2,c
   899  0004FC  D004               	goto	l634
   900  0004FE  5024               	movf	_lw,w,c
   901  000500  1025               	iorwf	_lw+1,w,c
   902  000502  B4D8               	btfsc	status,2,c
   903                           
   904                           ;pixy.c: 53: frame = 0;
   905  000504  924E               	bcf	_frame/(0+8),_frame& (0+7),c
   906  000506                     l634:
   907                           
   908                           ;pixy.c: 54: }
   909                           ;pixy.c: 55: lw = w;
   910  000506  C02A  F024         	movff	_w,_lw
   911  00050A  C02B  F025         	movff	_w+1,_lw+1
   912                           
   913                           ;pixy.c: 56: c++;
   914  00050E  0100               	movlb	0	; () banked
   915  000510  2BE7               	incf	ReadObject@c& (0+255),f,b
   916                           
   917                           ; BSR set to: 0
   918                           ;pixy.c: 57: if(c > 254) {
   919  000512  0100               	movlb	0	; () banked
   920  000514  29E7               	incf	ReadObject@c& (0+255),w,b
   921  000516  B4D8               	btfsc	status,2,c
   922  000518  0012               	return	
   923  00051A                     l631:
   924  00051A  A24E               	btfss	_frame/(0+8),_frame& (0+7),c
   925  00051C  D7A9               	goto	l3260
   926                           
   927                           ;pixy.c: 59: }
   928                           ;pixy.c: 60: }
   929                           ;pixy.c: 62: unsigned int checksum = ExchangeSpiWord(0x5a, 0);
   930  00051E  0E00               	movlw	0
   931  000520  0100               	movlb	0	; () banked
   932  000522  6FDB               	movwf	ExchangeSpiWord@byte2& (0+255),b
   933  000524  0E5A               	movlw	90
   934  000526  EC37  F006         	call	_ExchangeSpiWord
   935  00052A  C0DB  F0E5         	movff	?_ExchangeSpiWord,ReadObject@checksum
   936  00052E  C0DC  F0E6         	movff	?_ExchangeSpiWord+1,ReadObject@checksum+1
   937                           
   938                           ;pixy.c: 64: a_color[c_obj].num = ExchangeSpiWord(0x5a, 0);
   939  000532  0E00               	movlw	0
   940  000534  0100               	movlb	0	; () banked
   941  000536  6FDB               	movwf	ExchangeSpiWord@byte2& (0+255),b
   942  000538  0E5A               	movlw	90
   943  00053A  EC37  F006         	call	_ExchangeSpiWord
   944  00053E  0100               	movlb	0	; () banked
   945  000540  51E8               	movf	ReadObject@c_obj& (0+255),w,b
   946  000542  0D0E               	mullw	14
   947  000544  0E02               	movlw	2
   948  000546  26F3               	addwf	prodl,f,c
   949  000548  0E00               	movlw	0
   950  00054A  22F4               	addwfc	prodh,f,c
   951  00054C  0E60               	movlw	low _a_color
   952  00054E  24F3               	addwf	prodl,w,c
   953  000550  6ED9               	movwf	fsr2l,c
   954  000552  0E00               	movlw	high _a_color
   955  000554  20F4               	addwfc	prodh,w,c
   956  000556  6EDA               	movwf	fsr2h,c
   957  000558  0100               	movlb	0	; () banked
   958  00055A  C0DB  FFDE         	movff	?_ExchangeSpiWord,postinc2
   959  00055E  0100               	movlb	0	; () banked
   960  000560  C0DC  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
   961                           
   962                           ; BSR set to: 0
   963                           ;pixy.c: 65: a_color[c_obj].pos_x = ExchangeSpiWord(0x5a, 0);
   964  000564  0E00               	movlw	0
   965  000566  0100               	movlb	0	; () banked
   966  000568  6FDB               	movwf	ExchangeSpiWord@byte2& (0+255),b
   967  00056A  0E5A               	movlw	90
   968  00056C  EC37  F006         	call	_ExchangeSpiWord
   969  000570  0100               	movlb	0	; () banked
   970  000572  51E8               	movf	ReadObject@c_obj& (0+255),w,b
   971  000574  0D0E               	mullw	14
   972  000576  0E04               	movlw	4
   973  000578  26F3               	addwf	prodl,f,c
   974  00057A  0E00               	movlw	0
   975  00057C  22F4               	addwfc	prodh,f,c
   976  00057E  0E60               	movlw	low _a_color
   977  000580  24F3               	addwf	prodl,w,c
   978  000582  6ED9               	movwf	fsr2l,c
   979  000584  0E00               	movlw	high _a_color
   980  000586  20F4               	addwfc	prodh,w,c
   981  000588  6EDA               	movwf	fsr2h,c
   982  00058A  0100               	movlb	0	; () banked
   983  00058C  C0DB  FFDE         	movff	?_ExchangeSpiWord,postinc2
   984  000590  0100               	movlb	0	; () banked
   985  000592  C0DC  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
   986                           
   987                           ; BSR set to: 0
   988                           ;pixy.c: 66: a_color[c_obj].pos_y = ExchangeSpiWord(0x5a, 0);
   989  000596  0E00               	movlw	0
   990  000598  0100               	movlb	0	; () banked
   991  00059A  6FDB               	movwf	ExchangeSpiWord@byte2& (0+255),b
   992  00059C  0E5A               	movlw	90
   993  00059E  EC37  F006         	call	_ExchangeSpiWord
   994  0005A2  0100               	movlb	0	; () banked
   995  0005A4  51E8               	movf	ReadObject@c_obj& (0+255),w,b
   996  0005A6  0D0E               	mullw	14
   997  0005A8  0E06               	movlw	6
   998  0005AA  26F3               	addwf	prodl,f,c
   999  0005AC  0E00               	movlw	0
  1000  0005AE  22F4               	addwfc	prodh,f,c
  1001  0005B0  0E60               	movlw	low _a_color
  1002  0005B2  24F3               	addwf	prodl,w,c
  1003  0005B4  6ED9               	movwf	fsr2l,c
  1004  0005B6  0E00               	movlw	high _a_color
  1005  0005B8  20F4               	addwfc	prodh,w,c
  1006  0005BA  6EDA               	movwf	fsr2h,c
  1007  0005BC  0100               	movlb	0	; () banked
  1008  0005BE  C0DB  FFDE         	movff	?_ExchangeSpiWord,postinc2
  1009  0005C2  0100               	movlb	0	; () banked
  1010  0005C4  C0DC  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
  1011                           
  1012                           ; BSR set to: 0
  1013                           ;pixy.c: 67: a_color[c_obj].obj_width = ExchangeSpiWord(0x5a, 0);
  1014  0005C8  0E00               	movlw	0
  1015  0005CA  0100               	movlb	0	; () banked
  1016  0005CC  6FDB               	movwf	ExchangeSpiWord@byte2& (0+255),b
  1017  0005CE  0E5A               	movlw	90
  1018  0005D0  EC37  F006         	call	_ExchangeSpiWord
  1019  0005D4  0100               	movlb	0	; () banked
  1020  0005D6  51E8               	movf	ReadObject@c_obj& (0+255),w,b
  1021  0005D8  0D0E               	mullw	14
  1022  0005DA  0E08               	movlw	8
  1023  0005DC  26F3               	addwf	prodl,f,c
  1024  0005DE  0E00               	movlw	0
  1025  0005E0  22F4               	addwfc	prodh,f,c
  1026  0005E2  0E60               	movlw	low _a_color
  1027  0005E4  24F3               	addwf	prodl,w,c
  1028  0005E6  6ED9               	movwf	fsr2l,c
  1029  0005E8  0E00               	movlw	high _a_color
  1030  0005EA  20F4               	addwfc	prodh,w,c
  1031  0005EC  6EDA               	movwf	fsr2h,c
  1032  0005EE  0100               	movlb	0	; () banked
  1033  0005F0  C0DB  FFDE         	movff	?_ExchangeSpiWord,postinc2
  1034  0005F4  0100               	movlb	0	; () banked
  1035  0005F6  C0DC  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
  1036                           
  1037                           ; BSR set to: 0
  1038                           ;pixy.c: 68: a_color[c_obj].obj_height = ExchangeSpiWord(0x5a, 0);
  1039  0005FA  0E00               	movlw	0
  1040  0005FC  0100               	movlb	0	; () banked
  1041  0005FE  6FDB               	movwf	ExchangeSpiWord@byte2& (0+255),b
  1042  000600  0E5A               	movlw	90
  1043  000602  EC37  F006         	call	_ExchangeSpiWord
  1044  000606  0100               	movlb	0	; () banked
  1045  000608  51E8               	movf	ReadObject@c_obj& (0+255),w,b
  1046  00060A  0D0E               	mullw	14
  1047  00060C  0E0A               	movlw	10
  1048  00060E  26F3               	addwf	prodl,f,c
  1049  000610  0E00               	movlw	0
  1050  000612  22F4               	addwfc	prodh,f,c
  1051  000614  0E60               	movlw	low _a_color
  1052  000616  24F3               	addwf	prodl,w,c
  1053  000618  6ED9               	movwf	fsr2l,c
  1054  00061A  0E00               	movlw	high _a_color
  1055  00061C  20F4               	addwfc	prodh,w,c
  1056  00061E  6EDA               	movwf	fsr2h,c
  1057  000620  0100               	movlb	0	; () banked
  1058  000622  C0DB  FFDE         	movff	?_ExchangeSpiWord,postinc2
  1059  000626  0100               	movlb	0	; () banked
  1060  000628  C0DC  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
  1061                           
  1062                           ; BSR set to: 0
  1063                           ;pixy.c: 69: a_color[c_obj].angle = ExchangeSpiWord(0x5a, 0);
  1064  00062C  0E00               	movlw	0
  1065  00062E  0100               	movlb	0	; () banked
  1066  000630  6FDB               	movwf	ExchangeSpiWord@byte2& (0+255),b
  1067  000632  0E5A               	movlw	90
  1068  000634  EC37  F006         	call	_ExchangeSpiWord
  1069  000638  0100               	movlb	0	; () banked
  1070  00063A  51E8               	movf	ReadObject@c_obj& (0+255),w,b
  1071  00063C  0D0E               	mullw	14
  1072  00063E  0E0C               	movlw	12
  1073  000640  26F3               	addwf	prodl,f,c
  1074  000642  0E00               	movlw	0
  1075  000644  22F4               	addwfc	prodh,f,c
  1076  000646  0E60               	movlw	low _a_color
  1077  000648  24F3               	addwf	prodl,w,c
  1078  00064A  6ED9               	movwf	fsr2l,c
  1079  00064C  0E00               	movlw	high _a_color
  1080  00064E  20F4               	addwfc	prodh,w,c
  1081  000650  6EDA               	movwf	fsr2h,c
  1082  000652  0100               	movlb	0	; () banked
  1083  000654  C0DB  FFDE         	movff	?_ExchangeSpiWord,postinc2
  1084  000658  0100               	movlb	0	; () banked
  1085  00065A  C0DC  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
  1086                           
  1087                           ; BSR set to: 0
  1088                           ;pixy.c: 71: if(a_color[c_obj].num == des_obj) {
  1089  00065E  0100               	movlb	0	; () banked
  1090  000660  51E8               	movf	ReadObject@c_obj& (0+255),w,b
  1091  000662  0D0E               	mullw	14
  1092  000664  0E02               	movlw	2
  1093  000666  26F3               	addwf	prodl,f,c
  1094  000668  0E00               	movlw	0
  1095  00066A  22F4               	addwfc	prodh,f,c
  1096  00066C  0E60               	movlw	low _a_color
  1097  00066E  24F3               	addwf	prodl,w,c
  1098  000670  6ED9               	movwf	fsr2l,c
  1099  000672  0E00               	movlw	high _a_color
  1100  000674  20F4               	addwfc	prodh,w,c
  1101  000676  6EDA               	movwf	fsr2h,c
  1102  000678  0100               	movlb	0	; () banked
  1103  00067A  51E0               	movf	ReadObject@des_obj& (0+255),w,b
  1104  00067C  18DE               	xorwf	postinc2,w,c
  1105  00067E  E14A               	bnz	l3310
  1106  000680  0100               	movlb	0	; () banked
  1107  000682  51E1               	movf	(ReadObject@des_obj+1)& (0+255),w,b
  1108  000684  18DE               	xorwf	postinc2,w,c
  1109  000686  A4D8               	btfss	status,2,c
  1110  000688  D045               	goto	l3310
  1111                           
  1112                           ; BSR set to: 0
  1113                           ;pixy.c: 72: a_frame[0].num = a_color[c_obj].num;
  1114  00068A  0100               	movlb	0	; () banked
  1115  00068C  51E8               	movf	ReadObject@c_obj& (0+255),w,b
  1116  00068E  0D0E               	mullw	14
  1117  000690  0E02               	movlw	2
  1118  000692  26F3               	addwf	prodl,f,c
  1119  000694  0E00               	movlw	0
  1120  000696  22F4               	addwfc	prodh,f,c
  1121  000698  0E60               	movlw	low _a_color
  1122  00069A  24F3               	addwf	prodl,w,c
  1123  00069C  6ED9               	movwf	fsr2l,c
  1124  00069E  0E00               	movlw	high _a_color
  1125  0006A0  20F4               	addwfc	prodh,w,c
  1126  0006A2  6EDA               	movwf	fsr2h,c
  1127  0006A4  CFDE F001          	movff	postinc2,_a_frame
  1128  0006A8  CFDD F002          	movff	postdec2,_a_frame+1
  1129                           
  1130                           ;pixy.c: 73: a_frame[0].pos_x = a_color[c_obj].pos_x;
  1131  0006AC  0100               	movlb	0	; () banked
  1132  0006AE  51E8               	movf	ReadObject@c_obj& (0+255),w,b
  1133  0006B0  0D0E               	mullw	14
  1134  0006B2  0E04               	movlw	4
  1135  0006B4  26F3               	addwf	prodl,f,c
  1136  0006B6  0E00               	movlw	0
  1137  0006B8  22F4               	addwfc	prodh,f,c
  1138  0006BA  0E60               	movlw	low _a_color
  1139  0006BC  24F3               	addwf	prodl,w,c
  1140  0006BE  6ED9               	movwf	fsr2l,c
  1141  0006C0  0E00               	movlw	high _a_color
  1142  0006C2  20F4               	addwfc	prodh,w,c
  1143  0006C4  6EDA               	movwf	fsr2h,c
  1144  0006C6  CFDE F003          	movff	postinc2,_a_frame+2
  1145  0006CA  CFDD F004          	movff	postdec2,_a_frame+3
  1146                           
  1147                           ;pixy.c: 74: a_frame[0].pos_y = a_color[c_obj].pos_y;
  1148  0006CE  0100               	movlb	0	; () banked
  1149  0006D0  51E8               	movf	ReadObject@c_obj& (0+255),w,b
  1150  0006D2  0D0E               	mullw	14
  1151  0006D4  0E06               	movlw	6
  1152  0006D6  26F3               	addwf	prodl,f,c
  1153  0006D8  0E00               	movlw	0
  1154  0006DA  22F4               	addwfc	prodh,f,c
  1155  0006DC  0E60               	movlw	low _a_color
  1156  0006DE  24F3               	addwf	prodl,w,c
  1157  0006E0  6ED9               	movwf	fsr2l,c
  1158  0006E2  0E00               	movlw	high _a_color
  1159  0006E4  20F4               	addwfc	prodh,w,c
  1160  0006E6  6EDA               	movwf	fsr2h,c
  1161  0006E8  CFDE F005          	movff	postinc2,_a_frame+4
  1162  0006EC  CFDD F006          	movff	postdec2,_a_frame+5
  1163                           
  1164                           ;pixy.c: 75: a_frame[0].angle = a_color[c_obj].angle;
  1165  0006F0  0100               	movlb	0	; () banked
  1166  0006F2  51E8               	movf	ReadObject@c_obj& (0+255),w,b
  1167  0006F4  0D0E               	mullw	14
  1168  0006F6  0E0C               	movlw	12
  1169  0006F8  26F3               	addwf	prodl,f,c
  1170  0006FA  0E00               	movlw	0
  1171  0006FC  22F4               	addwfc	prodh,f,c
  1172  0006FE  0E60               	movlw	low _a_color
  1173  000700  24F3               	addwf	prodl,w,c
  1174  000702  6ED9               	movwf	fsr2l,c
  1175  000704  0E00               	movlw	high _a_color
  1176  000706  20F4               	addwfc	prodh,w,c
  1177  000708  6EDA               	movwf	fsr2h,c
  1178  00070A  CFDE F009          	movff	postinc2,_a_frame+8
  1179  00070E  CFDD F00A          	movff	postdec2,_a_frame+9
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;pixy.c: 76: return 1;
  1183                           ;	Return value of _ReadObject is never used
  1184  000712  0012               	return	
  1185  000714                     l3310:
  1186                           
  1187                           ; BSR set to: 0
  1188  000714  0100               	movlb	0	; () banked
  1189  000716  2BE8               	incf	ReadObject@c_obj& (0+255),f,b
  1190  000718                     l3312:
  1191                           
  1192                           ; BSR set to: 0
  1193  000718  0100               	movlb	0	; () banked
  1194  00071A  51E2               	movf	ReadObject@max_obj& (0+255),w,b
  1195  00071C  0100               	movlb	0	; () banked
  1196  00071E  5DE8               	subwf	ReadObject@c_obj& (0+255),w,b
  1197  000720  B0D8               	btfsc	status,0,c
  1198  000722  0012               	return	
  1199  000724  D672               	goto	l626
  1200  000726                     __end_of_ReadObject:
  1201                           	opt stack 0
  1202                           tblptru	equ	0xFF8
  1203                           tblptrh	equ	0xFF7
  1204                           tblptrl	equ	0xFF6
  1205                           tablat	equ	0xFF5
  1206                           prodh	equ	0xFF4
  1207                           prodl	equ	0xFF3
  1208                           postinc0	equ	0xFEE
  1209                           wreg	equ	0xFE8
  1210                           postdec1	equ	0xFE5
  1211                           fsr1l	equ	0xFE1
  1212                           postinc2	equ	0xFDE
  1213                           postdec2	equ	0xFDD
  1214                           fsr2h	equ	0xFDA
  1215                           fsr2l	equ	0xFD9
  1216                           status	equ	0xFD8
  1217                           
  1218 ;; *************** function _ExchangeSpiWord *****************
  1219 ;; Defined at:
  1220 ;;		line 27 in file "communication.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;  byte1           1    wreg     unsigned char 
  1223 ;;  byte2           1    0[BANK0 ] unsigned char 
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;  byte1           1    2[BANK0 ] unsigned char 
  1226 ;;  SPI_word        2    3[BANK0 ] unsigned int 
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  2    0[BANK0 ] unsigned int 
  1229 ;; Registers used:
  1230 ;;		wreg, status,2, status,0, cstack
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1236 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1237 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;Total ram usage:        5 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; Hardware stack levels required when called:    3
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_ReadObject
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text4
  1251  000C6E                     __ptext4:
  1252                           	opt stack 0
  1253  000C6E                     _ExchangeSpiWord:
  1254                           	opt stack 26
  1255                           
  1256                           ; BSR set to: 0
  1257                           ;incstack = 0
  1258                           ;ExchangeSpiWord@byte1 stored from wreg
  1259  000C6E  0100               	movlb	0	; () banked
  1260  000C70  6FDD               	movwf	ExchangeSpiWord@byte1& (0+255),b
  1261                           
  1262                           ;communication.c: 28: __nop();
  1263  000C72  F000               	nop	
  1264                           
  1265                           ;communication.c: 29: unsigned int SPI_word = 0;
  1266  000C74  0E00               	movlw	0
  1267  000C76  0100               	movlb	0	; () banked
  1268  000C78  6FDF               	movwf	(ExchangeSpiWord@SPI_word+1)& (0+255),b
  1269  000C7A  0E00               	movlw	0
  1270  000C7C  6FDE               	movwf	ExchangeSpiWord@SPI_word& (0+255),b
  1271                           
  1272                           ; BSR set to: 0
  1273                           ;communication.c: 30: if(SSP1IF == 1) {
  1274  000C7E  A69E               	btfss	3998,3,c	;volatile
  1275  000C80  D008               	goto	l3038
  1276                           
  1277                           ; BSR set to: 0
  1278                           ;communication.c: 31: _delay((unsigned long)((100)*(64000000/4000000.0)));
  1279  000C82  0EE4               	movlw	228
  1280  000C84                     u3027:
  1281  000C84  D000               	nop2	
  1282  000C86  D000               	nop2	
  1283  000C88  2EE8               	decfsz	wreg,f,c
  1284  000C8A  D7FC               	goto	u3027
  1285  000C8C  D000               	nop2		;nop
  1286  000C8E  D000               	nop2		;nop
  1287                           
  1288                           ;communication.c: 32: SSP1IF = 0;
  1289  000C90  969E               	bcf	3998,3,c	;volatile
  1290  000C92                     l3038:
  1291                           
  1292                           ;communication.c: 33: }
  1293                           ;communication.c: 34: SSP1BUF = byte1;
  1294  000C92  C0DD  FFC9         	movff	ExchangeSpiWord@byte1,4041	;volatile
  1295  000C96                     l857:
  1296  000C96  A69E               	btfss	3998,3,c	;volatile
  1297  000C98  D7FE               	goto	l857
  1298                           
  1299                           ;communication.c: 36: SSP1IF = 0;
  1300  000C9A  969E               	bcf	3998,3,c	;volatile
  1301                           
  1302                           ;communication.c: 37: SPI_word = SSP1BUF;
  1303  000C9C  CFC9 F0DE          	movff	4041,ExchangeSpiWord@SPI_word	;volatile
  1304  000CA0  0100               	movlb	0	; () banked
  1305  000CA2  6BDF               	clrf	(ExchangeSpiWord@SPI_word+1)& (0+255),b
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;communication.c: 38: SPI_word <<= 8;
  1309  000CA4  0100               	movlb	0	; () banked
  1310  000CA6  51DE               	movf	ExchangeSpiWord@SPI_word& (0+255),w,b
  1311  000CA8  6FDF               	movwf	(ExchangeSpiWord@SPI_word+1)& (0+255),b
  1312  000CAA  6BDE               	clrf	ExchangeSpiWord@SPI_word& (0+255),b
  1313                           
  1314                           ; BSR set to: 0
  1315                           ;communication.c: 39: SSP1BUF = byte2;
  1316  000CAC  C0DB  FFC9         	movff	ExchangeSpiWord@byte2,4041	;volatile
  1317  000CB0                     l860:
  1318  000CB0  A69E               	btfss	3998,3,c	;volatile
  1319  000CB2  D7FE               	goto	l860
  1320                           
  1321                           ;communication.c: 41: SSP1IF = 0;
  1322  000CB4  969E               	bcf	3998,3,c	;volatile
  1323                           
  1324                           ;communication.c: 42: SPI_word |= SSP1BUF;
  1325  000CB6  50C9               	movf	4041,w,c	;volatile
  1326  000CB8  0100               	movlb	0	; () banked
  1327  000CBA  13DE               	iorwf	ExchangeSpiWord@SPI_word& (0+255),f,b
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;communication.c: 43: __nop();
  1331  000CBC  F000               	nop	
  1332                           
  1333                           ;communication.c: 44: return (SPI_word);
  1334  000CBE  C0DE  F0DB         	movff	ExchangeSpiWord@SPI_word,?_ExchangeSpiWord
  1335  000CC2  C0DF  F0DC         	movff	ExchangeSpiWord@SPI_word+1,?_ExchangeSpiWord+1
  1336  000CC6  0012               	return	
  1337  000CC8                     __end_of_ExchangeSpiWord:
  1338                           	opt stack 0
  1339                           tblptru	equ	0xFF8
  1340                           tblptrh	equ	0xFF7
  1341                           tblptrl	equ	0xFF6
  1342                           tablat	equ	0xFF5
  1343                           prodh	equ	0xFF4
  1344                           prodl	equ	0xFF3
  1345                           postinc0	equ	0xFEE
  1346                           wreg	equ	0xFE8
  1347                           postdec1	equ	0xFE5
  1348                           fsr1l	equ	0xFE1
  1349                           postinc2	equ	0xFDE
  1350                           postdec2	equ	0xFDD
  1351                           fsr2h	equ	0xFDA
  1352                           fsr2l	equ	0xFD9
  1353                           status	equ	0xFD8
  1354                           
  1355 ;; *************** function _ReadHeight *****************
  1356 ;; Defined at:
  1357 ;;		line 27 in file "ultrasonic.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;		None               void
  1364 ;; Registers used:
  1365 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;Total ram usage:        2 bytes
  1376 ;; Hardware stack levels used:    1
  1377 ;; Hardware stack levels required when called:    3
  1378 ;; This function calls:
  1379 ;;		Nothing
  1380 ;; This function is called by:
  1381 ;;		_main
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text5
  1386  000BB4                     __ptext5:
  1387                           	opt stack 0
  1388  000BB4                     _ReadHeight:
  1389                           	opt stack 27
  1390  000BB4                     l772:
  1391  000BB4  A4A4               	btfss	4004,2,c	;volatile
  1392  000BB6  D7FE               	goto	l772
  1393                           
  1394                           ;ultrasonic.c: 29: TMR5GIF = 0;
  1395  000BB8  94A4               	bcf	4004,2,c	;volatile
  1396                           
  1397                           ;ultrasonic.c: 30: time_height = 0;
  1398  000BBA  0E00               	movlw	0
  1399  000BBC  6E29               	movwf	_time_height+1,c
  1400  000BBE  0E00               	movlw	0
  1401  000BC0  6E28               	movwf	_time_height,c
  1402                           
  1403                           ;ultrasonic.c: 31: time_height = TMR5H;
  1404  000BC2  CF50 F028          	movff	3920,_time_height	;volatile
  1405  000BC6  6A29               	clrf	_time_height+1,c
  1406                           
  1407                           ;ultrasonic.c: 32: time_height <<= 8;
  1408  000BC8  5028               	movf	_time_height,w,c
  1409  000BCA  6E29               	movwf	_time_height+1,c
  1410  000BCC  6A28               	clrf	_time_height,c
  1411                           
  1412                           ;ultrasonic.c: 33: time_height |= TMR5L;
  1413  000BCE  010F               	movlb	15	; () banked
  1414  000BD0  514F               	movf	79,w,b	;volatile
  1415  000BD2  1228               	iorwf	_time_height,f,c
  1416                           
  1417                           ; BSR set to: 15
  1418                           ;ultrasonic.c: 34: TMR5L = 0;
  1419  000BD4  0E00               	movlw	0
  1420  000BD6  010F               	movlb	15	; () banked
  1421  000BD8  6F4F               	movwf	79,b	;volatile
  1422                           
  1423                           ; BSR set to: 15
  1424                           ;ultrasonic.c: 35: TMR5H = 0;
  1425  000BDA  0E00               	movlw	0
  1426  000BDC  010F               	movlb	15	; () banked
  1427  000BDE  6F50               	movwf	80,b	;volatile
  1428                           
  1429                           ; BSR set to: 15
  1430                           ;ultrasonic.c: 36: a_frame[0].height = time_height;
  1431  000BE0  C028  F007         	movff	_time_height,_a_frame+6
  1432  000BE4  C029  F008         	movff	_time_height+1,_a_frame+7
  1433                           
  1434                           ; BSR set to: 15
  1435                           ;ultrasonic.c: 37: a_frame_dif[0].dif_height = a_frame[1].height - a_frame[0].height;
  1436  000BE8  EE20  F007         	lfsr	2,_a_frame+6
  1437  000BEC  CFDE F0DB          	movff	postinc2,??_ReadHeight
  1438  000BF0  CFDD F0DC          	movff	postdec2,??_ReadHeight+1
  1439  000BF4  0100               	movlb	0	; () banked
  1440  000BF6  1FDB               	comf	??_ReadHeight& (0+255),f,b
  1441  000BF8  1FDC               	comf	(??_ReadHeight+1)& (0+255),f,b
  1442  000BFA  4BDB               	infsnz	??_ReadHeight& (0+255),f,b
  1443  000BFC  2BDC               	incf	(??_ReadHeight+1)& (0+255),f,b
  1444  000BFE  5011               	movf	_a_frame+16,w,c
  1445  000C00  0100               	movlb	0	; () banked
  1446  000C02  25DB               	addwf	??_ReadHeight& (0+255),w,b
  1447  000C04  6E1B               	movwf	_a_frame_dif+6,c
  1448  000C06  5012               	movf	_a_frame+17,w,c
  1449  000C08  0100               	movlb	0	; () banked
  1450  000C0A  21DC               	addwfc	(??_ReadHeight+1)& (0+255),w,b
  1451  000C0C  6E1C               	movwf	_a_frame_dif+7,c
  1452                           
  1453                           ; BSR set to: 0
  1454                           ;ultrasonic.c: 38: PORTBbits.RB3 = 1;
  1455  000C0E  8681               	bsf	3969,3,c	;volatile
  1456                           
  1457                           ; BSR set to: 0
  1458  000C10  0012               	return		;funcret
  1459  000C12                     __end_of_ReadHeight:
  1460                           	opt stack 0
  1461                           tblptru	equ	0xFF8
  1462                           tblptrh	equ	0xFF7
  1463                           tblptrl	equ	0xFF6
  1464                           tablat	equ	0xFF5
  1465                           prodh	equ	0xFF4
  1466                           prodl	equ	0xFF3
  1467                           postinc0	equ	0xFEE
  1468                           wreg	equ	0xFE8
  1469                           postdec1	equ	0xFE5
  1470                           fsr1l	equ	0xFE1
  1471                           postinc2	equ	0xFDE
  1472                           postdec2	equ	0xFDD
  1473                           fsr2h	equ	0xFDA
  1474                           fsr2l	equ	0xFD9
  1475                           status	equ	0xFD8
  1476                           
  1477 ;; *************** function _Init *****************
  1478 ;; Defined at:
  1479 ;;		line 30 in file "init.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;		None
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;		None
  1484 ;; Return value:  Size  Location     Type
  1485 ;;		None               void
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;Total ram usage:        0 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; Hardware stack levels required when called:    4
  1500 ;; This function calls:
  1501 ;;		_InitActors
  1502 ;;		_InitAnsel
  1503 ;;		_InitComp
  1504 ;;		_InitInterrupt
  1505 ;;		_InitOsc
  1506 ;;		_InitPort
  1507 ;;		_InitSpi
  1508 ;;		_InitTimer
  1509 ;;		_InitTris
  1510 ;;		_InitUart
  1511 ;; This function is called by:
  1512 ;;		_main
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text6
  1517  000E7A                     __ptext6:
  1518                           	opt stack 0
  1519  000E7A                     _Init:
  1520                           	opt stack 26
  1521                           
  1522                           ;init.c: 31: InitPort();
  1523                           
  1524                           ; BSR set to: 0
  1525                           ;incstack = 0
  1526  000E7A  EC94  F007         	call	_InitPort	;wreg free
  1527                           
  1528                           ;init.c: 32: InitTris();
  1529  000E7E  EC89  F007         	call	_InitTris	;wreg free
  1530                           
  1531                           ;init.c: 33: InitAnsel();
  1532  000E82  EC79  F007         	call	_InitAnsel	;wreg free
  1533                           
  1534                           ;init.c: 34: InitOsc();
  1535  000E86  ECDF  F007         	call	_InitOsc	;wreg free
  1536                           
  1537                           ;init.c: 35: InitUart();
  1538  000E8A  ECE9  F007         	call	_InitUart	;wreg free
  1539                           
  1540                           ;init.c: 36: InitSpi();
  1541  000E8E  ECDA  F007         	call	_InitSpi	;wreg free
  1542                           
  1543                           ;init.c: 37: InitTimer();
  1544  000E92  EC09  F006         	call	_InitTimer	;wreg free
  1545                           
  1546                           ;init.c: 38: InitComp();
  1547  000E96  ECE4  F007         	call	_InitComp	;wreg free
  1548                           
  1549                           ;init.c: 39: InitInterrupt();
  1550  000E9A  ECD3  F007         	call	_InitInterrupt	;wreg free
  1551                           
  1552                           ;init.c: 40: InitActors();
  1553  000E9E  EC52  F007         	call	_InitActors	;wreg free
  1554  000EA2  0012               	return		;funcret
  1555  000EA4                     __end_of_Init:
  1556                           	opt stack 0
  1557                           tblptru	equ	0xFF8
  1558                           tblptrh	equ	0xFF7
  1559                           tblptrl	equ	0xFF6
  1560                           tablat	equ	0xFF5
  1561                           prodh	equ	0xFF4
  1562                           prodl	equ	0xFF3
  1563                           postinc0	equ	0xFEE
  1564                           wreg	equ	0xFE8
  1565                           postdec1	equ	0xFE5
  1566                           fsr1l	equ	0xFE1
  1567                           postinc2	equ	0xFDE
  1568                           postdec2	equ	0xFDD
  1569                           fsr2h	equ	0xFDA
  1570                           fsr2l	equ	0xFD9
  1571                           status	equ	0xFD8
  1572                           
  1573 ;; *************** function _InitUart *****************
  1574 ;; Defined at:
  1575 ;;		line 84 in file "init.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;		None
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;		None
  1580 ;; Return value:  Size  Location     Type
  1581 ;;		None               void
  1582 ;; Registers used:
  1583 ;;		None
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;Total ram usage:        0 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; Hardware stack levels required when called:    3
  1596 ;; This function calls:
  1597 ;;		Nothing
  1598 ;; This function is called by:
  1599 ;;		_Init
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           	psect	text7
  1604  000FD2                     __ptext7:
  1605                           	opt stack 0
  1606  000FD2                     _InitUart:
  1607                           	opt stack 26
  1608                           
  1609                           ;incstack = 0
  1610  000FD2  0012               	return		;funcret
  1611  000FD4                     __end_of_InitUart:
  1612                           	opt stack 0
  1613                           tblptru	equ	0xFF8
  1614                           tblptrh	equ	0xFF7
  1615                           tblptrl	equ	0xFF6
  1616                           tablat	equ	0xFF5
  1617                           prodh	equ	0xFF4
  1618                           prodl	equ	0xFF3
  1619                           postinc0	equ	0xFEE
  1620                           wreg	equ	0xFE8
  1621                           postdec1	equ	0xFE5
  1622                           fsr1l	equ	0xFE1
  1623                           postinc2	equ	0xFDE
  1624                           postdec2	equ	0xFDD
  1625                           fsr2h	equ	0xFDA
  1626                           fsr2l	equ	0xFD9
  1627                           status	equ	0xFD8
  1628                           
  1629 ;; *************** function _InitTris *****************
  1630 ;; Defined at:
  1631 ;;		line 55 in file "init.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;		None
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;		None
  1636 ;; Return value:  Size  Location     Type
  1637 ;;		None               void
  1638 ;; Registers used:
  1639 ;;		wreg, status,2
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1649 ;;Total ram usage:        0 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; Hardware stack levels required when called:    3
  1652 ;; This function calls:
  1653 ;;		Nothing
  1654 ;; This function is called by:
  1655 ;;		_Init
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           	psect	text8
  1660  000F12                     __ptext8:
  1661                           	opt stack 0
  1662  000F12                     _InitTris:
  1663                           	opt stack 26
  1664                           
  1665                           ;init.c: 56: TRISA = 0b00000000;
  1666                           
  1667                           ;incstack = 0
  1668  000F12  0E00               	movlw	0
  1669  000F14  6E92               	movwf	3986,c	;volatile
  1670                           
  1671                           ;init.c: 57: TRISB = 0b00010000;
  1672  000F16  0E10               	movlw	16
  1673  000F18  6E93               	movwf	3987,c	;volatile
  1674                           
  1675                           ;init.c: 58: TRISC = 0b10010001;
  1676  000F1A  0E91               	movlw	145
  1677  000F1C  6E94               	movwf	3988,c	;volatile
  1678                           
  1679                           ;init.c: 59: TRISD = 0b01010000;
  1680  000F1E  0E50               	movlw	80
  1681  000F20  6E95               	movwf	3989,c	;volatile
  1682                           
  1683                           ;init.c: 60: TRISE = 0b00000000;
  1684  000F22  0E00               	movlw	0
  1685  000F24  6E96               	movwf	3990,c	;volatile
  1686  000F26  0012               	return		;funcret
  1687  000F28                     __end_of_InitTris:
  1688                           	opt stack 0
  1689                           tblptru	equ	0xFF8
  1690                           tblptrh	equ	0xFF7
  1691                           tblptrl	equ	0xFF6
  1692                           tablat	equ	0xFF5
  1693                           prodh	equ	0xFF4
  1694                           prodl	equ	0xFF3
  1695                           postinc0	equ	0xFEE
  1696                           wreg	equ	0xFE8
  1697                           postdec1	equ	0xFE5
  1698                           fsr1l	equ	0xFE1
  1699                           postinc2	equ	0xFDE
  1700                           postdec2	equ	0xFDD
  1701                           fsr2h	equ	0xFDA
  1702                           fsr2l	equ	0xFD9
  1703                           status	equ	0xFD8
  1704                           
  1705 ;; *************** function _InitTimer *****************
  1706 ;; Defined at:
  1707 ;;		line 123 in file "init.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;		None
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;		None
  1712 ;; Return value:  Size  Location     Type
  1713 ;;		None               void
  1714 ;; Registers used:
  1715 ;;		wreg, status,2
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1725 ;;Total ram usage:        0 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    3
  1728 ;; This function calls:
  1729 ;;		Nothing
  1730 ;; This function is called by:
  1731 ;;		_Init
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           	psect	text9
  1736  000C12                     __ptext9:
  1737                           	opt stack 0
  1738  000C12                     _InitTimer:
  1739                           	opt stack 26
  1740                           
  1741                           ;init.c: 125: T1CONbits.TMR1CS = 0b00;
  1742                           
  1743                           ;incstack = 0
  1744  000C12  0E3F               	movlw	-193
  1745  000C14  16CD               	andwf	4045,f,c	;volatile
  1746                           
  1747                           ;init.c: 126: T1CONbits.T1CKPS = 0b01;
  1748  000C16  50CD               	movf	4045,w,c	;volatile
  1749  000C18  0BCF               	andlw	-49
  1750  000C1A  0910               	iorlw	16
  1751  000C1C  6ECD               	movwf	4045,c	;volatile
  1752                           
  1753                           ;init.c: 127: T1CONbits.nT1SYNC = 1;
  1754  000C1E  84CD               	bsf	4045,2,c	;volatile
  1755                           
  1756                           ;init.c: 128: T1CONbits.TMR1ON = 0;
  1757  000C20  90CD               	bcf	4045,0,c	;volatile
  1758                           
  1759                           ;init.c: 129: TMR1H = 0;
  1760  000C22  0E00               	movlw	0
  1761  000C24  6ECF               	movwf	4047,c	;volatile
  1762                           
  1763                           ;init.c: 130: TMR1L = 0;
  1764  000C26  0E00               	movlw	0
  1765  000C28  6ECE               	movwf	4046,c	;volatile
  1766                           
  1767                           ;init.c: 134: T3GCONbits.TMR3GE = 1;
  1768  000C2A  8EB4               	bsf	4020,7,c	;volatile
  1769                           
  1770                           ;init.c: 135: T3GCONbits.T3GSPM = 0;
  1771  000C2C  98B4               	bcf	4020,4,c	;volatile
  1772                           
  1773                           ;init.c: 136: T3GCONbits.T3GTM = 0;
  1774  000C2E  9AB4               	bcf	4020,5,c	;volatile
  1775                           
  1776                           ;init.c: 137: T3GCONbits.T3GPOL = 1;
  1777  000C30  8CB4               	bsf	4020,6,c	;volatile
  1778                           
  1779                           ;init.c: 138: T3GCONbits.T3GSS = 0b00;
  1780  000C32  0EFC               	movlw	-4
  1781  000C34  16B4               	andwf	4020,f,c	;volatile
  1782                           
  1783                           ;init.c: 140: T3CONbits.TMR3CS = 0b00;
  1784  000C36  0E3F               	movlw	-193
  1785  000C38  16B1               	andwf	4017,f,c	;volatile
  1786                           
  1787                           ;init.c: 141: T3CONbits.T3CKPS = 0b00;
  1788  000C3A  0ECF               	movlw	-49
  1789  000C3C  16B1               	andwf	4017,f,c	;volatile
  1790                           
  1791                           ;init.c: 142: T3CONbits.nT3SYNC = 1;
  1792  000C3E  84B1               	bsf	4017,2,c	;volatile
  1793                           
  1794                           ;init.c: 143: T3CONbits.TMR3ON = 1;
  1795  000C40  80B1               	bsf	4017,0,c	;volatile
  1796                           
  1797                           ;init.c: 147: T5GCONbits.TMR5GE = 1;
  1798  000C42  010F               	movlb	15	; () banked
  1799  000C44  8F4D               	bsf	77,7,b	;volatile
  1800                           
  1801                           ; BSR set to: 15
  1802                           ;init.c: 148: T5GCONbits.T5GSPM = 0;
  1803  000C46  010F               	movlb	15	; () banked
  1804  000C48  994D               	bcf	77,4,b	;volatile
  1805                           
  1806                           ; BSR set to: 15
  1807                           ;init.c: 149: T5GCONbits.T5GTM = 0;
  1808  000C4A  010F               	movlb	15	; () banked
  1809  000C4C  9B4D               	bcf	77,5,b	;volatile
  1810                           
  1811                           ; BSR set to: 15
  1812                           ;init.c: 150: T5GCONbits.T5GPOL = 1;
  1813  000C4E  010F               	movlb	15	; () banked
  1814  000C50  8D4D               	bsf	77,6,b	;volatile
  1815                           
  1816                           ;init.c: 151: T5GCONbits.T5GSS = 0b00;
  1817  000C52  0EFC               	movlw	-4
  1818  000C54  010F               	movlb	15	; () banked
  1819  000C56  174D               	andwf	77,f,b	;volatile
  1820                           
  1821                           ;init.c: 153: T5CONbits.TMR5CS = 0b00;
  1822  000C58  0E3F               	movlw	-193
  1823  000C5A  010F               	movlb	15	; () banked
  1824  000C5C  174E               	andwf	78,f,b	;volatile
  1825                           
  1826                           ;init.c: 154: T5CONbits.T5CKPS = 0b00;
  1827  000C5E  0ECF               	movlw	-49
  1828  000C60  010F               	movlb	15	; () banked
  1829  000C62  174E               	andwf	78,f,b	;volatile
  1830                           
  1831                           ; BSR set to: 15
  1832                           ;init.c: 155: T5CONbits.nT5SYNC = 1;
  1833  000C64  010F               	movlb	15	; () banked
  1834  000C66  854E               	bsf	78,2,b	;volatile
  1835                           
  1836                           ; BSR set to: 15
  1837                           ;init.c: 156: T5CONbits.TMR5ON = 1;
  1838  000C68  010F               	movlb	15	; () banked
  1839  000C6A  814E               	bsf	78,0,b	;volatile
  1840                           
  1841                           ; BSR set to: 15
  1842  000C6C  0012               	return		;funcret
  1843  000C6E                     __end_of_InitTimer:
  1844                           	opt stack 0
  1845                           tblptru	equ	0xFF8
  1846                           tblptrh	equ	0xFF7
  1847                           tblptrl	equ	0xFF6
  1848                           tablat	equ	0xFF5
  1849                           prodh	equ	0xFF4
  1850                           prodl	equ	0xFF3
  1851                           postinc0	equ	0xFEE
  1852                           wreg	equ	0xFE8
  1853                           postdec1	equ	0xFE5
  1854                           fsr1l	equ	0xFE1
  1855                           postinc2	equ	0xFDE
  1856                           postdec2	equ	0xFDD
  1857                           fsr2h	equ	0xFDA
  1858                           fsr2l	equ	0xFD9
  1859                           status	equ	0xFD8
  1860                           
  1861 ;; *************** function _InitSpi *****************
  1862 ;; Defined at:
  1863 ;;		line 97 in file "init.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;		None
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;		None
  1868 ;; Return value:  Size  Location     Type
  1869 ;;		None               void
  1870 ;; Registers used:
  1871 ;;		wreg, status,2
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1881 ;;Total ram usage:        0 bytes
  1882 ;; Hardware stack levels used:    1
  1883 ;; Hardware stack levels required when called:    3
  1884 ;; This function calls:
  1885 ;;		Nothing
  1886 ;; This function is called by:
  1887 ;;		_Init
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           	psect	text10
  1892  000FB4                     __ptext10:
  1893                           	opt stack 0
  1894  000FB4                     _InitSpi:
  1895                           	opt stack 26
  1896                           
  1897                           ;init.c: 98: SSP1STAT = 0b00000000;
  1898                           
  1899                           ; BSR set to: 15
  1900                           ;incstack = 0
  1901  000FB4  0E00               	movlw	0
  1902  000FB6  6EC7               	movwf	4039,c	;volatile
  1903                           
  1904                           ;init.c: 99: SSP1CON1 = 0b00100001;
  1905  000FB8  0E21               	movlw	33
  1906  000FBA  6EC6               	movwf	4038,c	;volatile
  1907  000FBC  0012               	return		;funcret
  1908  000FBE                     __end_of_InitSpi:
  1909                           	opt stack 0
  1910                           tblptru	equ	0xFF8
  1911                           tblptrh	equ	0xFF7
  1912                           tblptrl	equ	0xFF6
  1913                           tablat	equ	0xFF5
  1914                           prodh	equ	0xFF4
  1915                           prodl	equ	0xFF3
  1916                           postinc0	equ	0xFEE
  1917                           wreg	equ	0xFE8
  1918                           postdec1	equ	0xFE5
  1919                           fsr1l	equ	0xFE1
  1920                           postinc2	equ	0xFDE
  1921                           postdec2	equ	0xFDD
  1922                           fsr2h	equ	0xFDA
  1923                           fsr2l	equ	0xFD9
  1924                           status	equ	0xFD8
  1925                           
  1926 ;; *************** function _InitPort *****************
  1927 ;; Defined at:
  1928 ;;		line 45 in file "init.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;		None
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;		None
  1933 ;; Return value:  Size  Location     Type
  1934 ;;		None               void
  1935 ;; Registers used:
  1936 ;;		wreg, status,2
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1946 ;;Total ram usage:        0 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; Hardware stack levels required when called:    3
  1949 ;; This function calls:
  1950 ;;		Nothing
  1951 ;; This function is called by:
  1952 ;;		_Init
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           	psect	text11
  1957  000F28                     __ptext11:
  1958                           	opt stack 0
  1959  000F28                     _InitPort:
  1960                           	opt stack 26
  1961                           
  1962                           ;init.c: 46: PORTA = 0b00000000;
  1963                           
  1964                           ;incstack = 0
  1965  000F28  0E00               	movlw	0
  1966  000F2A  6E80               	movwf	3968,c	;volatile
  1967                           
  1968                           ;init.c: 47: PORTB = 0b00001000;
  1969  000F2C  0E08               	movlw	8
  1970  000F2E  6E81               	movwf	3969,c	;volatile
  1971                           
  1972                           ;init.c: 48: PORTC = 0b00000000;
  1973  000F30  0E00               	movlw	0
  1974  000F32  6E82               	movwf	3970,c	;volatile
  1975                           
  1976                           ;init.c: 49: PORTD = 0b00001000;
  1977  000F34  0E08               	movlw	8
  1978  000F36  6E83               	movwf	3971,c	;volatile
  1979                           
  1980                           ;init.c: 50: PORTE = 0b00000000;
  1981  000F38  0E00               	movlw	0
  1982  000F3A  6E84               	movwf	3972,c	;volatile
  1983  000F3C  0012               	return		;funcret
  1984  000F3E                     __end_of_InitPort:
  1985                           	opt stack 0
  1986                           tblptru	equ	0xFF8
  1987                           tblptrh	equ	0xFF7
  1988                           tblptrl	equ	0xFF6
  1989                           tablat	equ	0xFF5
  1990                           prodh	equ	0xFF4
  1991                           prodl	equ	0xFF3
  1992                           postinc0	equ	0xFEE
  1993                           wreg	equ	0xFE8
  1994                           postdec1	equ	0xFE5
  1995                           fsr1l	equ	0xFE1
  1996                           postinc2	equ	0xFDE
  1997                           postdec2	equ	0xFDD
  1998                           fsr2h	equ	0xFDA
  1999                           fsr2l	equ	0xFD9
  2000                           status	equ	0xFD8
  2001                           
  2002 ;; *************** function _InitOsc *****************
  2003 ;; Defined at:
  2004 ;;		line 75 in file "init.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;		None
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;		None
  2009 ;; Return value:  Size  Location     Type
  2010 ;;		None               void
  2011 ;; Registers used:
  2012 ;;		wreg, status,2
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;Total ram usage:        0 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; Hardware stack levels required when called:    3
  2025 ;; This function calls:
  2026 ;;		Nothing
  2027 ;; This function is called by:
  2028 ;;		_Init
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	text12
  2033  000FBE                     __ptext12:
  2034                           	opt stack 0
  2035  000FBE                     _InitOsc:
  2036                           	opt stack 26
  2037                           
  2038                           ;init.c: 76: OSCCON = 0b01110111;
  2039                           
  2040                           ;incstack = 0
  2041  000FBE  0E77               	movlw	119
  2042  000FC0  6ED3               	movwf	4051,c	;volatile
  2043                           
  2044                           ;init.c: 78: OSCCON2bits.PLLRDY = 1;
  2045  000FC2  8ED2               	bsf	4050,7,c	;volatile
  2046                           
  2047                           ;init.c: 79: OSCTUNEbits.PLLEN = 1;
  2048  000FC4  8C9B               	bsf	3995,6,c	;volatile
  2049  000FC6  0012               	return		;funcret
  2050  000FC8                     __end_of_InitOsc:
  2051                           	opt stack 0
  2052                           tblptru	equ	0xFF8
  2053                           tblptrh	equ	0xFF7
  2054                           tblptrl	equ	0xFF6
  2055                           tablat	equ	0xFF5
  2056                           prodh	equ	0xFF4
  2057                           prodl	equ	0xFF3
  2058                           postinc0	equ	0xFEE
  2059                           wreg	equ	0xFE8
  2060                           postdec1	equ	0xFE5
  2061                           fsr1l	equ	0xFE1
  2062                           postinc2	equ	0xFDE
  2063                           postdec2	equ	0xFDD
  2064                           fsr2h	equ	0xFDA
  2065                           fsr2l	equ	0xFD9
  2066                           status	equ	0xFD8
  2067                           
  2068 ;; *************** function _InitInterrupt *****************
  2069 ;; Defined at:
  2070 ;;		line 176 in file "init.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;		None
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;		None
  2075 ;; Return value:  Size  Location     Type
  2076 ;;		None               void
  2077 ;; Registers used:
  2078 ;;		None
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;Total ram usage:        0 bytes
  2089 ;; Hardware stack levels used:    1
  2090 ;; Hardware stack levels required when called:    3
  2091 ;; This function calls:
  2092 ;;		Nothing
  2093 ;; This function is called by:
  2094 ;;		_Init
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           	psect	text13
  2099  000FA6                     __ptext13:
  2100                           	opt stack 0
  2101  000FA6                     _InitInterrupt:
  2102                           	opt stack 26
  2103                           
  2104                           ;init.c: 178: TMR3GIE = 1;
  2105                           
  2106                           ;incstack = 0
  2107  000FA6  82A3               	bsf	4003,1,c	;volatile
  2108                           
  2109                           ;init.c: 179: TMR3IF = 0;
  2110  000FA8  92A1               	bcf	4001,1,c	;volatile
  2111                           
  2112                           ;init.c: 181: CCP1IE = 1;
  2113  000FAA  849D               	bsf	3997,2,c	;volatile
  2114                           
  2115                           ;init.c: 182: CCP1IF = 0;
  2116  000FAC  949E               	bcf	3998,2,c	;volatile
  2117                           
  2118                           ;init.c: 184: PEIE = 1;
  2119  000FAE  8CF2               	bsf	intcon,6,c	;volatile
  2120                           
  2121                           ;init.c: 185: GIE = 1;
  2122  000FB0  8EF2               	bsf	intcon,7,c	;volatile
  2123  000FB2  0012               	return		;funcret
  2124  000FB4                     __end_of_InitInterrupt:
  2125                           	opt stack 0
  2126                           tblptru	equ	0xFF8
  2127                           tblptrh	equ	0xFF7
  2128                           tblptrl	equ	0xFF6
  2129                           tablat	equ	0xFF5
  2130                           prodh	equ	0xFF4
  2131                           prodl	equ	0xFF3
  2132                           intcon	equ	0xFF2
  2133                           postinc0	equ	0xFEE
  2134                           wreg	equ	0xFE8
  2135                           postdec1	equ	0xFE5
  2136                           fsr1l	equ	0xFE1
  2137                           postinc2	equ	0xFDE
  2138                           postdec2	equ	0xFDD
  2139                           fsr2h	equ	0xFDA
  2140                           fsr2l	equ	0xFD9
  2141                           status	equ	0xFD8
  2142                           
  2143 ;; *************** function _InitComp *****************
  2144 ;; Defined at:
  2145 ;;		line 166 in file "init.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;		None
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;		None
  2150 ;; Return value:  Size  Location     Type
  2151 ;;		None               void
  2152 ;; Registers used:
  2153 ;;		wreg, status,2
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;Total ram usage:        0 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    3
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_Init
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text14
  2174  000FC8                     __ptext14:
  2175                           	opt stack 0
  2176  000FC8                     _InitComp:
  2177                           	opt stack 26
  2178                           
  2179                           ;init.c: 167: CCP1CONbits.CCP1M = 0b1010;
  2180                           
  2181                           ;incstack = 0
  2182  000FC8  50BD               	movf	4029,w,c	;volatile
  2183  000FCA  0BF0               	andlw	-16
  2184  000FCC  090A               	iorlw	10
  2185  000FCE  6EBD               	movwf	4029,c	;volatile
  2186  000FD0  0012               	return		;funcret
  2187  000FD2                     __end_of_InitComp:
  2188                           	opt stack 0
  2189                           tblptru	equ	0xFF8
  2190                           tblptrh	equ	0xFF7
  2191                           tblptrl	equ	0xFF6
  2192                           tablat	equ	0xFF5
  2193                           prodh	equ	0xFF4
  2194                           prodl	equ	0xFF3
  2195                           intcon	equ	0xFF2
  2196                           postinc0	equ	0xFEE
  2197                           wreg	equ	0xFE8
  2198                           postdec1	equ	0xFE5
  2199                           fsr1l	equ	0xFE1
  2200                           postinc2	equ	0xFDE
  2201                           postdec2	equ	0xFDD
  2202                           fsr2h	equ	0xFDA
  2203                           fsr2l	equ	0xFD9
  2204                           status	equ	0xFD8
  2205                           
  2206 ;; *************** function _InitAnsel *****************
  2207 ;; Defined at:
  2208 ;;		line 65 in file "init.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;		None
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;		None
  2213 ;; Return value:  Size  Location     Type
  2214 ;;		None               void
  2215 ;; Registers used:
  2216 ;;		wreg, status,2
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2226 ;;Total ram usage:        0 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; Hardware stack levels required when called:    3
  2229 ;; This function calls:
  2230 ;;		Nothing
  2231 ;; This function is called by:
  2232 ;;		_Init
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           	psect	text15
  2237  000EF2                     __ptext15:
  2238                           	opt stack 0
  2239  000EF2                     _InitAnsel:
  2240                           	opt stack 26
  2241                           
  2242                           ;init.c: 66: ANSELA = 0b00000000;
  2243                           
  2244                           ;incstack = 0
  2245  000EF2  0E00               	movlw	0
  2246  000EF4  010F               	movlb	15	; () banked
  2247  000EF6  6F38               	movwf	56,b	;volatile
  2248                           
  2249                           ;init.c: 67: ANSELB = 0b00000000;
  2250  000EF8  0E00               	movlw	0
  2251  000EFA  010F               	movlb	15	; () banked
  2252  000EFC  6F39               	movwf	57,b	;volatile
  2253                           
  2254                           ;init.c: 68: ANSELC = 0b00000000;
  2255  000EFE  0E00               	movlw	0
  2256  000F00  010F               	movlb	15	; () banked
  2257  000F02  6F3A               	movwf	58,b	;volatile
  2258                           
  2259                           ;init.c: 69: ANSELD = 0b00000000;
  2260  000F04  0E00               	movlw	0
  2261  000F06  010F               	movlb	15	; () banked
  2262  000F08  6F3B               	movwf	59,b	;volatile
  2263                           
  2264                           ;init.c: 70: ANSELE = 0b00000000;
  2265  000F0A  0E00               	movlw	0
  2266  000F0C  010F               	movlb	15	; () banked
  2267  000F0E  6F3C               	movwf	60,b	;volatile
  2268                           
  2269                           ; BSR set to: 15
  2270  000F10  0012               	return		;funcret
  2271  000F12                     __end_of_InitAnsel:
  2272                           	opt stack 0
  2273                           tblptru	equ	0xFF8
  2274                           tblptrh	equ	0xFF7
  2275                           tblptrl	equ	0xFF6
  2276                           tablat	equ	0xFF5
  2277                           prodh	equ	0xFF4
  2278                           prodl	equ	0xFF3
  2279                           intcon	equ	0xFF2
  2280                           postinc0	equ	0xFEE
  2281                           wreg	equ	0xFE8
  2282                           postdec1	equ	0xFE5
  2283                           fsr1l	equ	0xFE1
  2284                           postinc2	equ	0xFDE
  2285                           postdec2	equ	0xFDD
  2286                           fsr2h	equ	0xFDA
  2287                           fsr2l	equ	0xFD9
  2288                           status	equ	0xFD8
  2289                           
  2290 ;; *************** function _InitActors *****************
  2291 ;; Defined at:
  2292 ;;		line 192 in file "init.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;		None
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;		None
  2297 ;; Return value:  Size  Location     Type
  2298 ;;		None               void
  2299 ;; Registers used:
  2300 ;;		wreg, status,2
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2310 ;;Total ram usage:        0 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; Hardware stack levels required when called:    3
  2313 ;; This function calls:
  2314 ;;		Nothing
  2315 ;; This function is called by:
  2316 ;;		_Init
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           	psect	text16
  2321  000EA4                     __ptext16:
  2322                           	opt stack 0
  2323  000EA4                     _InitActors:
  2324                           	opt stack 26
  2325                           
  2326                           ;init.c: 193: a_actors[0].aile = 500;
  2327                           
  2328                           ; BSR set to: 15
  2329                           ;incstack = 0
  2330  000EA4  0E01               	movlw	1
  2331  000EA6  0100               	movlb	0	; () banked
  2332  000EA8  6FD1               	movwf	(_a_actors+1)& (0+255),b
  2333  000EAA  0EF4               	movlw	244
  2334  000EAC  6FD0               	movwf	_a_actors& (0+255),b
  2335                           
  2336                           ;init.c: 194: a_actors[0].elev = 500;
  2337  000EAE  0E01               	movlw	1
  2338  000EB0  0100               	movlb	0	; () banked
  2339  000EB2  6FD3               	movwf	(_a_actors+3)& (0+255),b
  2340  000EB4  0EF4               	movlw	244
  2341  000EB6  6FD2               	movwf	(_a_actors+2)& (0+255),b
  2342                           
  2343                           ;init.c: 195: a_actors[0].thro = 0;
  2344  000EB8  0E00               	movlw	0
  2345  000EBA  0100               	movlb	0	; () banked
  2346  000EBC  6FD5               	movwf	(_a_actors+5)& (0+255),b
  2347  000EBE  0E00               	movlw	0
  2348  000EC0  6FD4               	movwf	(_a_actors+4)& (0+255),b
  2349                           
  2350                           ;init.c: 196: a_actors[0].rudd = 500;
  2351  000EC2  0E01               	movlw	1
  2352  000EC4  0100               	movlb	0	; () banked
  2353  000EC6  6FD7               	movwf	(_a_actors+7)& (0+255),b
  2354  000EC8  0EF4               	movlw	244
  2355  000ECA  6FD6               	movwf	(_a_actors+6)& (0+255),b
  2356                           
  2357                           ; BSR set to: 0
  2358  000ECC  0012               	return		;funcret
  2359  000ECE                     __end_of_InitActors:
  2360                           	opt stack 0
  2361                           tblptru	equ	0xFF8
  2362                           tblptrh	equ	0xFF7
  2363                           tblptrl	equ	0xFF6
  2364                           tablat	equ	0xFF5
  2365                           prodh	equ	0xFF4
  2366                           prodl	equ	0xFF3
  2367                           intcon	equ	0xFF2
  2368                           postinc0	equ	0xFEE
  2369                           wreg	equ	0xFE8
  2370                           postdec1	equ	0xFE5
  2371                           fsr1l	equ	0xFE1
  2372                           postinc2	equ	0xFDE
  2373                           postdec2	equ	0xFDD
  2374                           fsr2h	equ	0xFDA
  2375                           fsr2l	equ	0xFD9
  2376                           status	equ	0xFD8
  2377                           
  2378 ;; *************** function _CompareFrames *****************
  2379 ;; Defined at:
  2380 ;;		line 32 in file "position.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;		None
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;		None
  2385 ;; Return value:  Size  Location     Type
  2386 ;;		None               void
  2387 ;; Registers used:
  2388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2396 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2397 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2398 ;;Total ram usage:        2 bytes
  2399 ;; Hardware stack levels used:    1
  2400 ;; Hardware stack levels required when called:    5
  2401 ;; This function calls:
  2402 ;;		_CheckAileron
  2403 ;;		_CheckElevator
  2404 ;;		_CheckRudderAhead
  2405 ;;		_CheckRudderBack
  2406 ;; This function is called by:
  2407 ;;		_main
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text17
  2412  000A72                     __ptext17:
  2413                           	opt stack 0
  2414  000A72                     _CompareFrames:
  2415                           	opt stack 25
  2416                           
  2417                           ;position.c: 34: a_frame_dif[0].dif_height = a_frame[1].height - a_frame[0].height;
  2418                           
  2419                           ; BSR set to: 0
  2420                           ;incstack = 0
  2421  000A72  EE20  F007         	lfsr	2,_a_frame+6
  2422  000A76  CFDE F0DD          	movff	postinc2,??_CompareFrames
  2423  000A7A  CFDD F0DE          	movff	postdec2,??_CompareFrames+1
  2424  000A7E  0100               	movlb	0	; () banked
  2425  000A80  1FDD               	comf	??_CompareFrames& (0+255),f,b
  2426  000A82  1FDE               	comf	(??_CompareFrames+1)& (0+255),f,b
  2427  000A84  4BDD               	infsnz	??_CompareFrames& (0+255),f,b
  2428  000A86  2BDE               	incf	(??_CompareFrames+1)& (0+255),f,b
  2429  000A88  5011               	movf	_a_frame+16,w,c
  2430  000A8A  0100               	movlb	0	; () banked
  2431  000A8C  25DD               	addwf	??_CompareFrames& (0+255),w,b
  2432  000A8E  6E1B               	movwf	_a_frame_dif+6,c
  2433  000A90  5012               	movf	_a_frame+17,w,c
  2434  000A92  0100               	movlb	0	; () banked
  2435  000A94  21DE               	addwfc	(??_CompareFrames+1)& (0+255),w,b
  2436  000A96  6E1C               	movwf	_a_frame_dif+7,c
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;position.c: 36: if (a_frame[1].num == a_frame[0].num) {
  2440  000A98  5001               	movf	_a_frame,w,c
  2441  000A9A  180B               	xorwf	_a_frame+10,w,c
  2442  000A9C  E149               	bnz	l946
  2443  000A9E  5002               	movf	_a_frame+1,w,c
  2444  000AA0  180C               	xorwf	_a_frame+11,w,c
  2445  000AA2  A4D8               	btfss	status,2,c
  2446  000AA4  0012               	return	
  2447                           
  2448                           ; BSR set to: 0
  2449                           ;position.c: 37: a_frame_dif[0].dif_pos_x = a_frame[1].pos_x - a_frame[0].pos_x;
  2450  000AA6  EE20  F003         	lfsr	2,_a_frame+2
  2451  000AAA  CFDE F0DD          	movff	postinc2,??_CompareFrames
  2452  000AAE  CFDD F0DE          	movff	postdec2,??_CompareFrames+1
  2453  000AB2  0100               	movlb	0	; () banked
  2454  000AB4  1FDD               	comf	??_CompareFrames& (0+255),f,b
  2455  000AB6  1FDE               	comf	(??_CompareFrames+1)& (0+255),f,b
  2456  000AB8  4BDD               	infsnz	??_CompareFrames& (0+255),f,b
  2457  000ABA  2BDE               	incf	(??_CompareFrames+1)& (0+255),f,b
  2458  000ABC  500D               	movf	_a_frame+12,w,c
  2459  000ABE  0100               	movlb	0	; () banked
  2460  000AC0  25DD               	addwf	??_CompareFrames& (0+255),w,b
  2461  000AC2  6E17               	movwf	_a_frame_dif+2,c
  2462  000AC4  500E               	movf	_a_frame+13,w,c
  2463  000AC6  0100               	movlb	0	; () banked
  2464  000AC8  21DE               	addwfc	(??_CompareFrames+1)& (0+255),w,b
  2465  000ACA  6E18               	movwf	_a_frame_dif+3,c
  2466                           
  2467                           ;position.c: 38: a_frame_dif[0].dif_pos_y = a_frame[1].pos_y - a_frame[0].pos_y;
  2468  000ACC  EE20  F005         	lfsr	2,_a_frame+4
  2469  000AD0  CFDE F0DD          	movff	postinc2,??_CompareFrames
  2470  000AD4  CFDD F0DE          	movff	postdec2,??_CompareFrames+1
  2471  000AD8  0100               	movlb	0	; () banked
  2472  000ADA  1FDD               	comf	??_CompareFrames& (0+255),f,b
  2473  000ADC  1FDE               	comf	(??_CompareFrames+1)& (0+255),f,b
  2474  000ADE  4BDD               	infsnz	??_CompareFrames& (0+255),f,b
  2475  000AE0  2BDE               	incf	(??_CompareFrames+1)& (0+255),f,b
  2476  000AE2  500F               	movf	_a_frame+14,w,c
  2477  000AE4  0100               	movlb	0	; () banked
  2478  000AE6  25DD               	addwf	??_CompareFrames& (0+255),w,b
  2479  000AE8  6E19               	movwf	_a_frame_dif+4,c
  2480  000AEA  5010               	movf	_a_frame+15,w,c
  2481  000AEC  0100               	movlb	0	; () banked
  2482  000AEE  21DE               	addwfc	(??_CompareFrames+1)& (0+255),w,b
  2483  000AF0  6E1A               	movwf	_a_frame_dif+5,c
  2484                           
  2485                           ;position.c: 39: a_frame_dif[0].dif_angle = a_frame[1].angle - a_frame[0].angle;
  2486  000AF2  EE20  F009         	lfsr	2,_a_frame+8
  2487  000AF6  CFDE F0DD          	movff	postinc2,??_CompareFrames
  2488  000AFA  CFDD F0DE          	movff	postdec2,??_CompareFrames+1
  2489  000AFE  0100               	movlb	0	; () banked
  2490  000B00  1FDD               	comf	??_CompareFrames& (0+255),f,b
  2491  000B02  1FDE               	comf	(??_CompareFrames+1)& (0+255),f,b
  2492  000B04  4BDD               	infsnz	??_CompareFrames& (0+255),f,b
  2493  000B06  2BDE               	incf	(??_CompareFrames+1)& (0+255),f,b
  2494  000B08  5013               	movf	_a_frame+18,w,c
  2495  000B0A  0100               	movlb	0	; () banked
  2496  000B0C  25DD               	addwf	??_CompareFrames& (0+255),w,b
  2497  000B0E  6E1D               	movwf	_a_frame_dif+8,c
  2498  000B10  5014               	movf	_a_frame+19,w,c
  2499  000B12  0100               	movlb	0	; () banked
  2500  000B14  21DE               	addwfc	(??_CompareFrames+1)& (0+255),w,b
  2501  000B16  6E1E               	movwf	_a_frame_dif+9,c
  2502                           
  2503                           ; BSR set to: 0
  2504                           ;position.c: 40: CheckAileron();
  2505  000B18  ECD8  F004         	call	_CheckAileron	;wreg free
  2506                           
  2507                           ;position.c: 41: CheckElevator();
  2508  000B1C  EC77  F004         	call	_CheckElevator	;wreg free
  2509                           
  2510                           ;position.c: 42: if (direction == 0) {
  2511  000B20  B04E               	btfsc	_direction/(0+8),_direction& (0+7),c
  2512  000B22  D003               	goto	l3328
  2513                           
  2514                           ;position.c: 43: CheckRudderAhead();
  2515  000B24  EC05  F004         	call	_CheckRudderAhead	;wreg free
  2516                           
  2517                           ;position.c: 44: } else {
  2518  000B28  0012               	return	
  2519  000B2A                     l3328:
  2520                           
  2521                           ;position.c: 45: CheckRudderBack();
  2522  000B2A  EC93  F003         	call	_CheckRudderBack	;wreg free
  2523                           
  2524                           ;position.c: 48: return;
  2525                           
  2526                           ;position.c: 46: }
  2527                           ;position.c: 47: } else {
  2528  000B2E  0012               	return	
  2529  000B30                     l946:
  2530  000B30  0012               	return		;funcret
  2531  000B32                     __end_of_CompareFrames:
  2532                           	opt stack 0
  2533                           tblptru	equ	0xFF8
  2534                           tblptrh	equ	0xFF7
  2535                           tblptrl	equ	0xFF6
  2536                           tablat	equ	0xFF5
  2537                           prodh	equ	0xFF4
  2538                           prodl	equ	0xFF3
  2539                           intcon	equ	0xFF2
  2540                           postinc0	equ	0xFEE
  2541                           wreg	equ	0xFE8
  2542                           postdec1	equ	0xFE5
  2543                           fsr1l	equ	0xFE1
  2544                           postinc2	equ	0xFDE
  2545                           postdec2	equ	0xFDD
  2546                           fsr2h	equ	0xFDA
  2547                           fsr2l	equ	0xFD9
  2548                           status	equ	0xFD8
  2549                           
  2550 ;; *************** function _CheckRudderBack *****************
  2551 ;; Defined at:
  2552 ;;		line 391 in file "position.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;		None
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;		None
  2557 ;; Return value:  Size  Location     Type
  2558 ;;		None               void
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2568 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2569 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2570 ;;Total ram usage:        1 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    4
  2573 ;; This function calls:
  2574 ;;		_ActRudder
  2575 ;; This function is called by:
  2576 ;;		_CompareFrames
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text18
  2581  000726                     __ptext18:
  2582                           	opt stack 0
  2583  000726                     _CheckRudderBack:
  2584                           	opt stack 25
  2585                           
  2586                           ;position.c: 394: if (a_frame[0].angle <= -175 || a_frame[0].angle >= 175) {
  2587                           
  2588                           ;incstack = 0
  2589  000726  AE0A               	btfss	_a_frame+9,7,c
  2590  000728  D006               	goto	l3164
  2591  00072A  0E52               	movlw	82
  2592  00072C  5C09               	subwf	_a_frame+8,w,c
  2593  00072E  0EFF               	movlw	255
  2594  000730  580A               	subwfb	_a_frame+9,w,c
  2595  000732  A0D8               	btfss	status,0,c
  2596  000734  D008               	goto	l3166
  2597  000736                     l3164:
  2598  000736  BE0A               	btfsc	_a_frame+9,7,c
  2599  000738  D00A               	goto	l3168
  2600  00073A  500A               	movf	_a_frame+9,w,c
  2601  00073C  E104               	bnz	l3166
  2602  00073E  0EAF               	movlw	175
  2603  000740  5C09               	subwf	_a_frame+8,w,c
  2604  000742  A0D8               	btfss	status,0,c
  2605  000744  D004               	goto	l3168
  2606  000746                     l3166:
  2607                           
  2608                           ;position.c: 395: ActRudder(0);
  2609  000746  0E00               	movlw	0
  2610  000748  EC9F  F007         	call	_ActRudder
  2611                           
  2612                           ;position.c: 396: }
  2613  00074C  0012               	return	
  2614  00074E                     l3168:
  2615                           
  2616                           ;position.c: 398: else if (a_frame[0].angle > -175) {
  2617  00074E  AE0A               	btfss	_a_frame+9,7,c
  2618  000750  D006               	goto	l3170
  2619  000752  0E52               	movlw	82
  2620  000754  5C09               	subwf	_a_frame+8,w,c
  2621  000756  0EFF               	movlw	255
  2622  000758  580A               	subwfb	_a_frame+9,w,c
  2623  00075A  A0D8               	btfss	status,0,c
  2624  00075C  D02C               	goto	l3184
  2625  00075E                     l3170:
  2626                           
  2627                           ;position.c: 400: if (a_frame[1].angle > a_frame[0].angle) {
  2628  00075E  5013               	movf	_a_frame+18,w,c
  2629  000760  5C09               	subwf	_a_frame+8,w,c
  2630  000762  500A               	movf	_a_frame+9,w,c
  2631  000764  0A80               	xorlw	128
  2632  000766  0100               	movlb	0	; () banked
  2633  000768  6FDC               	movwf	??_CheckRudderBack& (0+255),b
  2634  00076A  5014               	movf	_a_frame+19,w,c
  2635  00076C  0A80               	xorlw	128
  2636  00076E  0100               	movlb	0	; () banked
  2637  000770  59DC               	subwfb	??_CheckRudderBack& (0+255),w,b
  2638  000772  B0D8               	btfsc	status,0,c
  2639  000774  D01C               	goto	l3182
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;position.c: 402: if (a_frame_dif[0].dif_angle <= 2) {
  2643  000776  BE1E               	btfsc	_a_frame_dif+9,7,c
  2644  000778  D006               	goto	l3174
  2645  00077A  501E               	movf	_a_frame_dif+9,w,c
  2646  00077C  E114               	bnz	l3180
  2647  00077E  0E03               	movlw	3
  2648  000780  5C1D               	subwf	_a_frame_dif+8,w,c
  2649  000782  B0D8               	btfsc	status,0,c
  2650  000784  D010               	goto	l3180
  2651  000786                     l3174:
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;position.c: 403: if (a_frame_dif[0].dif_angle <= 1) {
  2655  000786  BE1E               	btfsc	_a_frame_dif+9,7,c
  2656  000788  D006               	goto	l3176
  2657  00078A  501E               	movf	_a_frame_dif+9,w,c
  2658  00078C  E108               	bnz	l3178
  2659  00078E  0E02               	movlw	2
  2660  000790  5C1D               	subwf	_a_frame_dif+8,w,c
  2661  000792  B0D8               	btfsc	status,0,c
  2662  000794  D004               	goto	l3178
  2663  000796                     l3176:
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;position.c: 404: ActRudder(-3);
  2667  000796  0EFD               	movlw	253
  2668  000798  EC9F  F007         	call	_ActRudder
  2669                           
  2670                           ;position.c: 405: } else {
  2671  00079C  0012               	return	
  2672  00079E                     l3178:
  2673                           
  2674                           ;position.c: 406: ActRudder(0);
  2675  00079E  0E00               	movlw	0
  2676  0007A0  EC9F  F007         	call	_ActRudder
  2677                           
  2678                           ;position.c: 407: }
  2679                           ;position.c: 408: } else {
  2680  0007A4  0012               	return	
  2681  0007A6                     l3180:
  2682                           
  2683                           ;position.c: 410: ActRudder(3);
  2684  0007A6  0E03               	movlw	3
  2685  0007A8  EC9F  F007         	call	_ActRudder
  2686                           
  2687                           ;position.c: 411: }
  2688                           ;position.c: 412: } else {
  2689  0007AC  0012               	return	
  2690  0007AE                     l3182:
  2691                           
  2692                           ;position.c: 414: ActRudder(-3);
  2693  0007AE  0EFD               	movlw	253
  2694  0007B0  EC9F  F007         	call	_ActRudder
  2695                           
  2696                           ;position.c: 415: }
  2697                           ;position.c: 416: }
  2698  0007B4  0012               	return	
  2699  0007B6                     l3184:
  2700                           
  2701                           ;position.c: 418: else {
  2702                           ;position.c: 420: if (a_frame[1].angle < a_frame[0].angle) {
  2703  0007B6  5009               	movf	_a_frame+8,w,c
  2704  0007B8  5C13               	subwf	_a_frame+18,w,c
  2705  0007BA  5014               	movf	_a_frame+19,w,c
  2706  0007BC  0A80               	xorlw	128
  2707  0007BE  0100               	movlb	0	; () banked
  2708  0007C0  6FDC               	movwf	??_CheckRudderBack& (0+255),b
  2709  0007C2  500A               	movf	_a_frame+9,w,c
  2710  0007C4  0A80               	xorlw	128
  2711  0007C6  0100               	movlb	0	; () banked
  2712  0007C8  59DC               	subwfb	??_CheckRudderBack& (0+255),w,b
  2713  0007CA  B0D8               	btfsc	status,0,c
  2714  0007CC  D01A               	goto	l3196
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;position.c: 422: if (a_frame_dif[0].dif_angle <= -2) {
  2718  0007CE  AE1E               	btfss	_a_frame_dif+9,7,c
  2719  0007D0  D014               	goto	l3194
  2720  0007D2  281D               	incf	_a_frame_dif+8,w,c
  2721  0007D4  0EFF               	movlw	255
  2722  0007D6  581E               	subwfb	_a_frame_dif+9,w,c
  2723  0007D8  B0D8               	btfsc	status,0,c
  2724  0007DA  D00F               	goto	l3194
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;position.c: 423: if (a_frame_dif[0].dif_angle <= -2) {
  2728  0007DC  AE1E               	btfss	_a_frame_dif+9,7,c
  2729  0007DE  D009               	goto	l3192
  2730  0007E0  281D               	incf	_a_frame_dif+8,w,c
  2731  0007E2  0EFF               	movlw	255
  2732  0007E4  581E               	subwfb	_a_frame_dif+9,w,c
  2733  0007E6  B0D8               	btfsc	status,0,c
  2734  0007E8  D004               	goto	l3192
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;position.c: 424: ActRudder(3);
  2738  0007EA  0E03               	movlw	3
  2739  0007EC  EC9F  F007         	call	_ActRudder
  2740                           
  2741                           ;position.c: 425: } else {
  2742  0007F0  0012               	return	
  2743  0007F2                     l3192:
  2744                           
  2745                           ;position.c: 426: ActRudder(0);
  2746  0007F2  0E00               	movlw	0
  2747  0007F4  EC9F  F007         	call	_ActRudder
  2748                           
  2749                           ;position.c: 427: }
  2750                           ;position.c: 428: } else {
  2751  0007F8  0012               	return	
  2752  0007FA                     l3194:
  2753                           
  2754                           ;position.c: 430: ActRudder(-3);
  2755  0007FA  0EFD               	movlw	253
  2756  0007FC  EC9F  F007         	call	_ActRudder
  2757                           
  2758                           ;position.c: 431: }
  2759                           ;position.c: 432: } else {
  2760  000800  0012               	return	
  2761  000802                     l3196:
  2762                           
  2763                           ;position.c: 434: ActRudder(3);
  2764  000802  0E03               	movlw	3
  2765  000804  EC9F  F007         	call	_ActRudder
  2766  000808  0012               	return	
  2767  00080A                     __end_of_CheckRudderBack:
  2768                           	opt stack 0
  2769                           tblptru	equ	0xFF8
  2770                           tblptrh	equ	0xFF7
  2771                           tblptrl	equ	0xFF6
  2772                           tablat	equ	0xFF5
  2773                           prodh	equ	0xFF4
  2774                           prodl	equ	0xFF3
  2775                           intcon	equ	0xFF2
  2776                           postinc0	equ	0xFEE
  2777                           wreg	equ	0xFE8
  2778                           postdec1	equ	0xFE5
  2779                           fsr1l	equ	0xFE1
  2780                           postinc2	equ	0xFDE
  2781                           postdec2	equ	0xFDD
  2782                           fsr2h	equ	0xFDA
  2783                           fsr2l	equ	0xFD9
  2784                           status	equ	0xFD8
  2785                           
  2786 ;; *************** function _CheckRudderAhead *****************
  2787 ;; Defined at:
  2788 ;;		line 333 in file "position.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;		None
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;		None
  2793 ;; Return value:  Size  Location     Type
  2794 ;;		None               void
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0, cstack
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2804 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2805 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2806 ;;Total ram usage:        1 bytes
  2807 ;; Hardware stack levels used:    1
  2808 ;; Hardware stack levels required when called:    4
  2809 ;; This function calls:
  2810 ;;		_ActRudder
  2811 ;; This function is called by:
  2812 ;;		_CompareFrames
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           	psect	text19
  2817  00080A                     __ptext19:
  2818                           	opt stack 0
  2819  00080A                     _CheckRudderAhead:
  2820                           	opt stack 25
  2821                           
  2822                           ;position.c: 335: if (a_frame[0].angle >= -5 && a_frame[0].angle <= 5) {
  2823                           
  2824                           ;incstack = 0
  2825  00080A  AE0A               	btfss	_a_frame+9,7,c
  2826  00080C  D006               	goto	l3128
  2827  00080E  0EFB               	movlw	251
  2828  000810  5C09               	subwf	_a_frame+8,w,c
  2829  000812  0EFF               	movlw	255
  2830  000814  580A               	subwfb	_a_frame+9,w,c
  2831  000816  A0D8               	btfss	status,0,c
  2832  000818  D00C               	goto	l3132
  2833  00081A                     l3128:
  2834  00081A  BE0A               	btfsc	_a_frame+9,7,c
  2835  00081C  D006               	goto	l3130
  2836  00081E  500A               	movf	_a_frame+9,w,c
  2837  000820  E108               	bnz	l3132
  2838  000822  0E06               	movlw	6
  2839  000824  5C09               	subwf	_a_frame+8,w,c
  2840  000826  B0D8               	btfsc	status,0,c
  2841  000828  D004               	goto	l3132
  2842  00082A                     l3130:
  2843                           
  2844                           ;position.c: 336: ActRudder(0);
  2845  00082A  0E00               	movlw	0
  2846  00082C  EC9F  F007         	call	_ActRudder
  2847                           
  2848                           ;position.c: 337: }
  2849  000830  0012               	return	
  2850  000832                     l3132:
  2851                           
  2852                           ;position.c: 339: else if (a_frame[0].angle > 5) {
  2853  000832  BE0A               	btfsc	_a_frame+9,7,c
  2854  000834  D032               	goto	l3148
  2855  000836  500A               	movf	_a_frame+9,w,c
  2856  000838  E104               	bnz	u2430
  2857  00083A  0E06               	movlw	6
  2858  00083C  5C09               	subwf	_a_frame+8,w,c
  2859  00083E  A0D8               	btfss	status,0,c
  2860  000840  D02C               	goto	l3148
  2861  000842                     u2430:
  2862                           
  2863                           ;position.c: 341: if (a_frame[1].angle > a_frame[0].angle) {
  2864  000842  5013               	movf	_a_frame+18,w,c
  2865  000844  5C09               	subwf	_a_frame+8,w,c
  2866  000846  500A               	movf	_a_frame+9,w,c
  2867  000848  0A80               	xorlw	128
  2868  00084A  0100               	movlb	0	; () banked
  2869  00084C  6FDC               	movwf	??_CheckRudderAhead& (0+255),b
  2870  00084E  5014               	movf	_a_frame+19,w,c
  2871  000850  0A80               	xorlw	128
  2872  000852  0100               	movlb	0	; () banked
  2873  000854  59DC               	subwfb	??_CheckRudderAhead& (0+255),w,b
  2874  000856  B0D8               	btfsc	status,0,c
  2875  000858  D01C               	goto	l3146
  2876                           
  2877                           ; BSR set to: 0
  2878                           ;position.c: 343: if (a_frame_dif[0].dif_angle <= 2) {
  2879  00085A  BE1E               	btfsc	_a_frame_dif+9,7,c
  2880  00085C  D006               	goto	l3138
  2881  00085E  501E               	movf	_a_frame_dif+9,w,c
  2882  000860  E114               	bnz	l3144
  2883  000862  0E03               	movlw	3
  2884  000864  5C1D               	subwf	_a_frame_dif+8,w,c
  2885  000866  B0D8               	btfsc	status,0,c
  2886  000868  D010               	goto	l3144
  2887  00086A                     l3138:
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;position.c: 344: if (a_frame_dif[0].dif_angle <= 1) {
  2891  00086A  BE1E               	btfsc	_a_frame_dif+9,7,c
  2892  00086C  D006               	goto	l3140
  2893  00086E  501E               	movf	_a_frame_dif+9,w,c
  2894  000870  E108               	bnz	l3142
  2895  000872  0E02               	movlw	2
  2896  000874  5C1D               	subwf	_a_frame_dif+8,w,c
  2897  000876  B0D8               	btfsc	status,0,c
  2898  000878  D004               	goto	l3142
  2899  00087A                     l3140:
  2900                           
  2901                           ; BSR set to: 0
  2902                           ;position.c: 345: ActRudder(-3);
  2903  00087A  0EFD               	movlw	253
  2904  00087C  EC9F  F007         	call	_ActRudder
  2905                           
  2906                           ;position.c: 346: } else {
  2907  000880  0012               	return	
  2908  000882                     l3142:
  2909                           
  2910                           ;position.c: 347: ActRudder(0);
  2911  000882  0E00               	movlw	0
  2912  000884  EC9F  F007         	call	_ActRudder
  2913                           
  2914                           ;position.c: 348: }
  2915                           ;position.c: 349: } else {
  2916  000888  0012               	return	
  2917  00088A                     l3144:
  2918                           
  2919                           ;position.c: 351: ActRudder(3);
  2920  00088A  0E03               	movlw	3
  2921  00088C  EC9F  F007         	call	_ActRudder
  2922                           
  2923                           ;position.c: 352: }
  2924                           ;position.c: 353: } else {
  2925  000890  0012               	return	
  2926  000892                     l3146:
  2927                           
  2928                           ;position.c: 355: ActRudder(-3);
  2929  000892  0EFD               	movlw	253
  2930  000894  EC9F  F007         	call	_ActRudder
  2931                           
  2932                           ;position.c: 356: }
  2933                           ;position.c: 357: }
  2934  000898  0012               	return	
  2935  00089A                     l3148:
  2936                           
  2937                           ;position.c: 359: else {
  2938                           ;position.c: 361: if (a_frame[1].angle < a_frame[0].angle) {
  2939  00089A  5009               	movf	_a_frame+8,w,c
  2940  00089C  5C13               	subwf	_a_frame+18,w,c
  2941  00089E  5014               	movf	_a_frame+19,w,c
  2942  0008A0  0A80               	xorlw	128
  2943  0008A2  0100               	movlb	0	; () banked
  2944  0008A4  6FDC               	movwf	??_CheckRudderAhead& (0+255),b
  2945  0008A6  500A               	movf	_a_frame+9,w,c
  2946  0008A8  0A80               	xorlw	128
  2947  0008AA  0100               	movlb	0	; () banked
  2948  0008AC  59DC               	subwfb	??_CheckRudderAhead& (0+255),w,b
  2949  0008AE  B0D8               	btfsc	status,0,c
  2950  0008B0  D01A               	goto	l3160
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;position.c: 363: if (a_frame_dif[0].dif_angle <= -2) {
  2954  0008B2  AE1E               	btfss	_a_frame_dif+9,7,c
  2955  0008B4  D014               	goto	l3158
  2956  0008B6  281D               	incf	_a_frame_dif+8,w,c
  2957  0008B8  0EFF               	movlw	255
  2958  0008BA  581E               	subwfb	_a_frame_dif+9,w,c
  2959  0008BC  B0D8               	btfsc	status,0,c
  2960  0008BE  D00F               	goto	l3158
  2961                           
  2962                           ; BSR set to: 0
  2963                           ;position.c: 364: if (a_frame_dif[0].dif_angle <= -2) {
  2964  0008C0  AE1E               	btfss	_a_frame_dif+9,7,c
  2965  0008C2  D009               	goto	l3156
  2966  0008C4  281D               	incf	_a_frame_dif+8,w,c
  2967  0008C6  0EFF               	movlw	255
  2968  0008C8  581E               	subwfb	_a_frame_dif+9,w,c
  2969  0008CA  B0D8               	btfsc	status,0,c
  2970  0008CC  D004               	goto	l3156
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;position.c: 365: ActRudder(3);
  2974  0008CE  0E03               	movlw	3
  2975  0008D0  EC9F  F007         	call	_ActRudder
  2976                           
  2977                           ;position.c: 366: } else {
  2978  0008D4  0012               	return	
  2979  0008D6                     l3156:
  2980                           
  2981                           ;position.c: 367: ActRudder(0);
  2982  0008D6  0E00               	movlw	0
  2983  0008D8  EC9F  F007         	call	_ActRudder
  2984                           
  2985                           ;position.c: 368: }
  2986                           ;position.c: 369: } else {
  2987  0008DC  0012               	return	
  2988  0008DE                     l3158:
  2989                           
  2990                           ;position.c: 371: ActRudder(-3);
  2991  0008DE  0EFD               	movlw	253
  2992  0008E0  EC9F  F007         	call	_ActRudder
  2993                           
  2994                           ;position.c: 372: }
  2995                           ;position.c: 373: } else {
  2996  0008E4  0012               	return	
  2997  0008E6                     l3160:
  2998                           
  2999                           ;position.c: 375: ActRudder(3);
  3000  0008E6  0E03               	movlw	3
  3001  0008E8  EC9F  F007         	call	_ActRudder
  3002  0008EC  0012               	return	
  3003  0008EE                     __end_of_CheckRudderAhead:
  3004                           	opt stack 0
  3005                           tblptru	equ	0xFF8
  3006                           tblptrh	equ	0xFF7
  3007                           tblptrl	equ	0xFF6
  3008                           tablat	equ	0xFF5
  3009                           prodh	equ	0xFF4
  3010                           prodl	equ	0xFF3
  3011                           intcon	equ	0xFF2
  3012                           postinc0	equ	0xFEE
  3013                           wreg	equ	0xFE8
  3014                           postdec1	equ	0xFE5
  3015                           fsr1l	equ	0xFE1
  3016                           postinc2	equ	0xFDE
  3017                           postdec2	equ	0xFDD
  3018                           fsr2h	equ	0xFDA
  3019                           fsr2l	equ	0xFD9
  3020                           status	equ	0xFD8
  3021                           
  3022 ;; *************** function _ActRudder *****************
  3023 ;; Defined at:
  3024 ;;		line 98 in file "actors.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;  change          1    wreg     unsigned char 
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;  change          1    0[BANK0 ] unsigned char 
  3029 ;; Return value:  Size  Location     Type
  3030 ;;		None               void
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3039 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3041 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;Total ram usage:        1 bytes
  3043 ;; Hardware stack levels used:    1
  3044 ;; Hardware stack levels required when called:    3
  3045 ;; This function calls:
  3046 ;;		Nothing
  3047 ;; This function is called by:
  3048 ;;		_CheckRudderAhead
  3049 ;;		_CheckRudderBack
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           	psect	text20
  3054  000F3E                     __ptext20:
  3055                           	opt stack 0
  3056  000F3E                     _ActRudder:
  3057                           	opt stack 25
  3058                           
  3059                           ;incstack = 0
  3060                           ;ActRudder@change stored from wreg
  3061  000F3E  0100               	movlb	0	; () banked
  3062  000F40  6FDB               	movwf	ActRudder@change& (0+255),b
  3063                           
  3064                           ;actors.c: 99: a_actors[0].rudd += change;
  3065  000F42  0100               	movlb	0	; () banked
  3066  000F44  51DB               	movf	ActRudder@change& (0+255),w,b
  3067  000F46  0100               	movlb	0	; () banked
  3068  000F48  27D6               	addwf	(_a_actors+6)& (0+255),f,b
  3069  000F4A  0E00               	movlw	0
  3070  000F4C  23D7               	addwfc	(_a_actors+7)& (0+255),f,b
  3071                           
  3072                           ; BSR set to: 0
  3073  000F4E  0012               	return		;funcret
  3074  000F50                     __end_of_ActRudder:
  3075                           	opt stack 0
  3076                           tblptru	equ	0xFF8
  3077                           tblptrh	equ	0xFF7
  3078                           tblptrl	equ	0xFF6
  3079                           tablat	equ	0xFF5
  3080                           prodh	equ	0xFF4
  3081                           prodl	equ	0xFF3
  3082                           intcon	equ	0xFF2
  3083                           postinc0	equ	0xFEE
  3084                           wreg	equ	0xFE8
  3085                           postdec1	equ	0xFE5
  3086                           fsr1l	equ	0xFE1
  3087                           postinc2	equ	0xFDE
  3088                           postdec2	equ	0xFDD
  3089                           fsr2h	equ	0xFDA
  3090                           fsr2l	equ	0xFD9
  3091                           status	equ	0xFD8
  3092                           
  3093 ;; *************** function _CheckElevator *****************
  3094 ;; Defined at:
  3095 ;;		line 129 in file "position.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;		None
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;		None
  3100 ;; Return value:  Size  Location     Type
  3101 ;;		None               void
  3102 ;; Registers used:
  3103 ;;		wreg, status,2, status,0, cstack
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3113 ;;Total ram usage:        0 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; Hardware stack levels required when called:    4
  3116 ;; This function calls:
  3117 ;;		_ActElevator
  3118 ;; This function is called by:
  3119 ;;		_CompareFrames
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text21
  3124  0008EE                     __ptext21:
  3125                           	opt stack 0
  3126  0008EE                     _CheckElevator:
  3127                           	opt stack 25
  3128                           
  3129                           ;position.c: 131: if (a_frame[0].pos_y >= 90 && a_frame[0].pos_y <= 110) {
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;incstack = 0
  3133  0008EE  5006               	movf	_a_frame+5,w,c
  3134  0008F0  E104               	bnz	u2320
  3135  0008F2  0E5A               	movlw	90
  3136  0008F4  5C05               	subwf	_a_frame+4,w,c
  3137  0008F6  A0D8               	btfss	status,0,c
  3138  0008F8  D00A               	goto	l3096
  3139  0008FA                     u2320:
  3140  0008FA  5006               	movf	_a_frame+5,w,c
  3141  0008FC  E108               	bnz	l3096
  3142  0008FE  0E6F               	movlw	111
  3143  000900  5C05               	subwf	_a_frame+4,w,c
  3144  000902  B0D8               	btfsc	status,0,c
  3145  000904  D004               	goto	l3096
  3146                           
  3147                           ;position.c: 133: ActElevator(0);
  3148  000906  0E00               	movlw	0
  3149  000908  ECA8  F007         	call	_ActElevator
  3150                           
  3151                           ;position.c: 134: }
  3152  00090C  0012               	return	
  3153  00090E                     l3096:
  3154                           
  3155                           ;position.c: 136: else if (a_frame[0].pos_y > 110) {
  3156  00090E  5006               	movf	_a_frame+5,w,c
  3157  000910  E104               	bnz	u2340
  3158  000912  0E6F               	movlw	111
  3159  000914  5C05               	subwf	_a_frame+4,w,c
  3160  000916  A0D8               	btfss	status,0,c
  3161  000918  D025               	goto	l3112
  3162  00091A                     u2340:
  3163                           
  3164                           ;position.c: 138: if (a_frame[1].pos_y < a_frame[0].pos_y) {
  3165  00091A  5005               	movf	_a_frame+4,w,c
  3166  00091C  5C0F               	subwf	_a_frame+14,w,c
  3167  00091E  5006               	movf	_a_frame+5,w,c
  3168  000920  5810               	subwfb	_a_frame+15,w,c
  3169  000922  B0D8               	btfsc	status,0,c
  3170  000924  D01B               	goto	l3110
  3171                           
  3172                           ;position.c: 140: if (a_frame_dif[0].dif_pos_y >= -8) {
  3173  000926  AE1A               	btfss	_a_frame_dif+5,7,c
  3174  000928  D006               	goto	l3102
  3175  00092A  0EF8               	movlw	248
  3176  00092C  5C19               	subwf	_a_frame_dif+4,w,c
  3177  00092E  0EFF               	movlw	255
  3178  000930  581A               	subwfb	_a_frame_dif+5,w,c
  3179  000932  A0D8               	btfss	status,0,c
  3180  000934  D00F               	goto	l3108
  3181  000936                     l3102:
  3182                           
  3183                           ;position.c: 141: if (a_frame_dif[0].dif_pos_y >= -1) {
  3184  000936  AE1A               	btfss	_a_frame_dif+5,7,c
  3185  000938  D005               	goto	l3104
  3186  00093A  2819               	incf	_a_frame_dif+4,w,c
  3187  00093C  0EFF               	movlw	255
  3188  00093E  581A               	subwfb	_a_frame_dif+5,w,c
  3189  000940  A0D8               	btfss	status,0,c
  3190  000942  D004               	goto	l3106
  3191  000944                     l3104:
  3192                           
  3193                           ;position.c: 143: ActElevator(3);
  3194  000944  0E03               	movlw	3
  3195  000946  ECA8  F007         	call	_ActElevator
  3196                           
  3197                           ;position.c: 144: } else {
  3198  00094A  0012               	return	
  3199  00094C                     l3106:
  3200                           
  3201                           ;position.c: 146: ActElevator(0);
  3202  00094C  0E00               	movlw	0
  3203  00094E  ECA8  F007         	call	_ActElevator
  3204                           
  3205                           ;position.c: 147: }
  3206                           ;position.c: 148: } else {
  3207  000952  0012               	return	
  3208  000954                     l3108:
  3209                           
  3210                           ;position.c: 150: ActElevator(-3);
  3211  000954  0EFD               	movlw	253
  3212  000956  ECA8  F007         	call	_ActElevator
  3213                           
  3214                           ;position.c: 151: }
  3215                           ;position.c: 152: } else {
  3216  00095A  0012               	return	
  3217  00095C                     l3110:
  3218                           
  3219                           ;position.c: 158: ActElevator(3);
  3220  00095C  0E03               	movlw	3
  3221  00095E  ECA8  F007         	call	_ActElevator
  3222                           
  3223                           ;position.c: 159: }
  3224                           ;position.c: 160: }
  3225  000962  0012               	return	
  3226  000964                     l3112:
  3227                           
  3228                           ;position.c: 162: else {
  3229                           ;position.c: 164: if (a_frame[1].pos_y > a_frame[0].pos_y) {
  3230  000964  500F               	movf	_a_frame+14,w,c
  3231  000966  5C05               	subwf	_a_frame+4,w,c
  3232  000968  5010               	movf	_a_frame+15,w,c
  3233  00096A  5806               	subwfb	_a_frame+5,w,c
  3234  00096C  B0D8               	btfsc	status,0,c
  3235  00096E  D01C               	goto	l3124
  3236                           
  3237                           ;position.c: 166: if (a_frame_dif[0].dif_pos_y <= 8) {
  3238  000970  BE1A               	btfsc	_a_frame_dif+5,7,c
  3239  000972  D006               	goto	l3116
  3240  000974  501A               	movf	_a_frame_dif+5,w,c
  3241  000976  E114               	bnz	l3122
  3242  000978  0E09               	movlw	9
  3243  00097A  5C19               	subwf	_a_frame_dif+4,w,c
  3244  00097C  B0D8               	btfsc	status,0,c
  3245  00097E  D010               	goto	l3122
  3246  000980                     l3116:
  3247                           
  3248                           ;position.c: 167: if (a_frame_dif[0].dif_pos_y <= 1) {
  3249  000980  BE1A               	btfsc	_a_frame_dif+5,7,c
  3250  000982  D006               	goto	l3118
  3251  000984  501A               	movf	_a_frame_dif+5,w,c
  3252  000986  E108               	bnz	l3120
  3253  000988  0E02               	movlw	2
  3254  00098A  5C19               	subwf	_a_frame_dif+4,w,c
  3255  00098C  B0D8               	btfsc	status,0,c
  3256  00098E  D004               	goto	l3120
  3257  000990                     l3118:
  3258                           
  3259                           ;position.c: 169: ActElevator(-3);
  3260  000990  0EFD               	movlw	253
  3261  000992  ECA8  F007         	call	_ActElevator
  3262                           
  3263                           ;position.c: 170: } else {
  3264  000996  0012               	return	
  3265  000998                     l3120:
  3266                           
  3267                           ;position.c: 172: ActElevator(0);
  3268  000998  0E00               	movlw	0
  3269  00099A  ECA8  F007         	call	_ActElevator
  3270                           
  3271                           ;position.c: 173: }
  3272                           ;position.c: 174: } else {
  3273  00099E  0012               	return	
  3274  0009A0                     l3122:
  3275                           
  3276                           ;position.c: 176: ActElevator(3);
  3277  0009A0  0E03               	movlw	3
  3278  0009A2  ECA8  F007         	call	_ActElevator
  3279                           
  3280                           ;position.c: 177: }
  3281                           ;position.c: 178: } else {
  3282  0009A6  0012               	return	
  3283  0009A8                     l3124:
  3284                           
  3285                           ;position.c: 184: ActElevator(-3);
  3286  0009A8  0EFD               	movlw	253
  3287  0009AA  ECA8  F007         	call	_ActElevator
  3288  0009AE  0012               	return	
  3289  0009B0                     __end_of_CheckElevator:
  3290                           	opt stack 0
  3291                           tblptru	equ	0xFF8
  3292                           tblptrh	equ	0xFF7
  3293                           tblptrl	equ	0xFF6
  3294                           tablat	equ	0xFF5
  3295                           prodh	equ	0xFF4
  3296                           prodl	equ	0xFF3
  3297                           intcon	equ	0xFF2
  3298                           postinc0	equ	0xFEE
  3299                           wreg	equ	0xFE8
  3300                           postdec1	equ	0xFE5
  3301                           fsr1l	equ	0xFE1
  3302                           postinc2	equ	0xFDE
  3303                           postdec2	equ	0xFDD
  3304                           fsr2h	equ	0xFDA
  3305                           fsr2l	equ	0xFD9
  3306                           status	equ	0xFD8
  3307                           
  3308 ;; *************** function _ActElevator *****************
  3309 ;; Defined at:
  3310 ;;		line 80 in file "actors.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;  change          1    wreg     unsigned char 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  change          1    0[BANK0 ] unsigned char 
  3315 ;; Return value:  Size  Location     Type
  3316 ;;		None               void
  3317 ;; Registers used:
  3318 ;;		wreg, status,2, status,0
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3327 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3328 ;;Total ram usage:        1 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:    3
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_CheckElevator
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text22
  3339  000F50                     __ptext22:
  3340                           	opt stack 0
  3341  000F50                     _ActElevator:
  3342                           	opt stack 25
  3343                           
  3344                           ;incstack = 0
  3345                           ;ActElevator@change stored from wreg
  3346  000F50  0100               	movlb	0	; () banked
  3347  000F52  6FDB               	movwf	ActElevator@change& (0+255),b
  3348                           
  3349                           ;actors.c: 81: a_actors[0].elev += change;
  3350  000F54  0100               	movlb	0	; () banked
  3351  000F56  51DB               	movf	ActElevator@change& (0+255),w,b
  3352  000F58  0100               	movlb	0	; () banked
  3353  000F5A  27D2               	addwf	(_a_actors+2)& (0+255),f,b
  3354  000F5C  0E00               	movlw	0
  3355  000F5E  23D3               	addwfc	(_a_actors+3)& (0+255),f,b
  3356                           
  3357                           ; BSR set to: 0
  3358  000F60  0012               	return		;funcret
  3359  000F62                     __end_of_ActElevator:
  3360                           	opt stack 0
  3361                           tblptru	equ	0xFF8
  3362                           tblptrh	equ	0xFF7
  3363                           tblptrl	equ	0xFF6
  3364                           tablat	equ	0xFF5
  3365                           prodh	equ	0xFF4
  3366                           prodl	equ	0xFF3
  3367                           intcon	equ	0xFF2
  3368                           postinc0	equ	0xFEE
  3369                           wreg	equ	0xFE8
  3370                           postdec1	equ	0xFE5
  3371                           fsr1l	equ	0xFE1
  3372                           postinc2	equ	0xFDE
  3373                           postdec2	equ	0xFDD
  3374                           fsr2h	equ	0xFDA
  3375                           fsr2l	equ	0xFD9
  3376                           status	equ	0xFD8
  3377                           
  3378 ;; *************** function _CheckAileron *****************
  3379 ;; Defined at:
  3380 ;;		line 59 in file "position.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;		None
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;		None               void
  3387 ;; Registers used:
  3388 ;;		wreg, status,2, status,0, cstack
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;Total ram usage:        0 bytes
  3399 ;; Hardware stack levels used:    1
  3400 ;; Hardware stack levels required when called:    4
  3401 ;; This function calls:
  3402 ;;		_ActAileron
  3403 ;; This function is called by:
  3404 ;;		_CompareFrames
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text23
  3409  0009B0                     __ptext23:
  3410                           	opt stack 0
  3411  0009B0                     _CheckAileron:
  3412                           	opt stack 25
  3413                           
  3414                           ;position.c: 62: if (a_frame[0].pos_x >= 150 && a_frame[0].pos_x <= 170) {
  3415                           
  3416                           ; BSR set to: 0
  3417                           ;incstack = 0
  3418  0009B0  5004               	movf	_a_frame+3,w,c
  3419  0009B2  E104               	bnz	u2230
  3420  0009B4  0E96               	movlw	150
  3421  0009B6  5C03               	subwf	_a_frame+2,w,c
  3422  0009B8  A0D8               	btfss	status,0,c
  3423  0009BA  D00A               	goto	l3058
  3424  0009BC                     u2230:
  3425  0009BC  5004               	movf	_a_frame+3,w,c
  3426  0009BE  E108               	bnz	l3058
  3427  0009C0  0EAB               	movlw	171
  3428  0009C2  5C03               	subwf	_a_frame+2,w,c
  3429  0009C4  B0D8               	btfsc	status,0,c
  3430  0009C6  D004               	goto	l3058
  3431                           
  3432                           ;position.c: 64: ActAileron(0);
  3433  0009C8  0E00               	movlw	0
  3434  0009CA  ECB1  F007         	call	_ActAileron
  3435                           
  3436                           ;position.c: 65: }
  3437  0009CE  0012               	return	
  3438  0009D0                     l3058:
  3439                           
  3440                           ;position.c: 67: else if (a_frame[0].pos_x > 170) {
  3441  0009D0  5004               	movf	_a_frame+3,w,c
  3442  0009D2  E104               	bnz	u2250
  3443  0009D4  0EAB               	movlw	171
  3444  0009D6  5C03               	subwf	_a_frame+2,w,c
  3445  0009D8  A0D8               	btfss	status,0,c
  3446  0009DA  D026               	goto	l3074
  3447  0009DC                     u2250:
  3448                           
  3449                           ;position.c: 69: if (a_frame[1].pos_x > a_frame[0].pos_x) {
  3450  0009DC  500D               	movf	_a_frame+12,w,c
  3451  0009DE  5C03               	subwf	_a_frame+2,w,c
  3452  0009E0  500E               	movf	_a_frame+13,w,c
  3453  0009E2  5804               	subwfb	_a_frame+3,w,c
  3454  0009E4  B0D8               	btfsc	status,0,c
  3455  0009E6  D01C               	goto	l3072
  3456                           
  3457                           ;position.c: 71: if (a_frame_dif[0].dif_pos_x <= 8) {
  3458  0009E8  BE18               	btfsc	_a_frame_dif+3,7,c
  3459  0009EA  D006               	goto	l3064
  3460  0009EC  5018               	movf	_a_frame_dif+3,w,c
  3461  0009EE  E114               	bnz	l3070
  3462  0009F0  0E09               	movlw	9
  3463  0009F2  5C17               	subwf	_a_frame_dif+2,w,c
  3464  0009F4  B0D8               	btfsc	status,0,c
  3465  0009F6  D010               	goto	l3070
  3466  0009F8                     l3064:
  3467                           
  3468                           ;position.c: 72: if (a_frame_dif[0].dif_pos_x <= 1) {
  3469  0009F8  BE18               	btfsc	_a_frame_dif+3,7,c
  3470  0009FA  D006               	goto	l3066
  3471  0009FC  5018               	movf	_a_frame_dif+3,w,c
  3472  0009FE  E108               	bnz	l3068
  3473  000A00  0E02               	movlw	2
  3474  000A02  5C17               	subwf	_a_frame_dif+2,w,c
  3475  000A04  B0D8               	btfsc	status,0,c
  3476  000A06  D004               	goto	l3068
  3477  000A08                     l3066:
  3478                           
  3479                           ;position.c: 74: ActAileron(-3);
  3480  000A08  0EFD               	movlw	253
  3481  000A0A  ECB1  F007         	call	_ActAileron
  3482                           
  3483                           ;position.c: 75: } else {
  3484  000A0E  0012               	return	
  3485  000A10                     l3068:
  3486                           
  3487                           ;position.c: 77: ActAileron(0);
  3488  000A10  0E00               	movlw	0
  3489  000A12  ECB1  F007         	call	_ActAileron
  3490                           
  3491                           ;position.c: 78: }
  3492                           ;position.c: 79: } else {
  3493  000A16  0012               	return	
  3494  000A18                     l3070:
  3495                           
  3496                           ;position.c: 81: ActAileron(3);
  3497  000A18  0E03               	movlw	3
  3498  000A1A  ECB1  F007         	call	_ActAileron
  3499                           
  3500                           ;position.c: 82: }
  3501                           ;position.c: 83: } else {
  3502  000A1E  0012               	return	
  3503  000A20                     l3072:
  3504                           
  3505                           ;position.c: 89: ActAileron(-3);
  3506  000A20  0EFD               	movlw	253
  3507  000A22  ECB1  F007         	call	_ActAileron
  3508                           
  3509                           ;position.c: 90: }
  3510                           ;position.c: 91: }
  3511  000A26  0012               	return	
  3512  000A28                     l3074:
  3513                           
  3514                           ;position.c: 93: else {
  3515                           ;position.c: 95: if (a_frame[1].pos_x < a_frame[0].pos_x) {
  3516  000A28  5003               	movf	_a_frame+2,w,c
  3517  000A2A  5C0D               	subwf	_a_frame+12,w,c
  3518  000A2C  5004               	movf	_a_frame+3,w,c
  3519  000A2E  580E               	subwfb	_a_frame+13,w,c
  3520  000A30  B0D8               	btfsc	status,0,c
  3521  000A32  D01B               	goto	l3086
  3522                           
  3523                           ;position.c: 97: if (a_frame_dif[0].dif_pos_x >= -8) {
  3524  000A34  AE18               	btfss	_a_frame_dif+3,7,c
  3525  000A36  D006               	goto	l3078
  3526  000A38  0EF8               	movlw	248
  3527  000A3A  5C17               	subwf	_a_frame_dif+2,w,c
  3528  000A3C  0EFF               	movlw	255
  3529  000A3E  5818               	subwfb	_a_frame_dif+3,w,c
  3530  000A40  A0D8               	btfss	status,0,c
  3531  000A42  D00F               	goto	l3084
  3532  000A44                     l3078:
  3533                           
  3534                           ;position.c: 98: if (a_frame_dif[0].dif_pos_x >= -1) {
  3535  000A44  AE18               	btfss	_a_frame_dif+3,7,c
  3536  000A46  D005               	goto	l3080
  3537  000A48  2817               	incf	_a_frame_dif+2,w,c
  3538  000A4A  0EFF               	movlw	255
  3539  000A4C  5818               	subwfb	_a_frame_dif+3,w,c
  3540  000A4E  A0D8               	btfss	status,0,c
  3541  000A50  D004               	goto	l3082
  3542  000A52                     l3080:
  3543                           
  3544                           ;position.c: 100: ActAileron(3);
  3545  000A52  0E03               	movlw	3
  3546  000A54  ECB1  F007         	call	_ActAileron
  3547                           
  3548                           ;position.c: 101: } else {
  3549  000A58  0012               	return	
  3550  000A5A                     l3082:
  3551                           
  3552                           ;position.c: 103: ActAileron(0);
  3553  000A5A  0E00               	movlw	0
  3554  000A5C  ECB1  F007         	call	_ActAileron
  3555                           
  3556                           ;position.c: 104: }
  3557                           ;position.c: 105: } else {
  3558  000A60  0012               	return	
  3559  000A62                     l3084:
  3560                           
  3561                           ;position.c: 107: ActAileron(-3);
  3562  000A62  0EFD               	movlw	253
  3563  000A64  ECB1  F007         	call	_ActAileron
  3564                           
  3565                           ;position.c: 108: }
  3566                           ;position.c: 109: } else {
  3567  000A68  0012               	return	
  3568  000A6A                     l3086:
  3569                           
  3570                           ;position.c: 115: ActAileron(3);
  3571  000A6A  0E03               	movlw	3
  3572  000A6C  ECB1  F007         	call	_ActAileron
  3573  000A70  0012               	return	
  3574  000A72                     __end_of_CheckAileron:
  3575                           	opt stack 0
  3576                           tblptru	equ	0xFF8
  3577                           tblptrh	equ	0xFF7
  3578                           tblptrl	equ	0xFF6
  3579                           tablat	equ	0xFF5
  3580                           prodh	equ	0xFF4
  3581                           prodl	equ	0xFF3
  3582                           intcon	equ	0xFF2
  3583                           postinc0	equ	0xFEE
  3584                           wreg	equ	0xFE8
  3585                           postdec1	equ	0xFE5
  3586                           fsr1l	equ	0xFE1
  3587                           postinc2	equ	0xFDE
  3588                           postdec2	equ	0xFDD
  3589                           fsr2h	equ	0xFDA
  3590                           fsr2l	equ	0xFD9
  3591                           status	equ	0xFD8
  3592                           
  3593 ;; *************** function _ActAileron *****************
  3594 ;; Defined at:
  3595 ;;		line 71 in file "actors.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  change          1    wreg     unsigned char 
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;  change          1    0[BANK0 ] unsigned char 
  3600 ;; Return value:  Size  Location     Type
  3601 ;;		None               void
  3602 ;; Registers used:
  3603 ;;		wreg, status,2, status,0
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3613 ;;Total ram usage:        1 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; Hardware stack levels required when called:    3
  3616 ;; This function calls:
  3617 ;;		Nothing
  3618 ;; This function is called by:
  3619 ;;		_CheckAileron
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           	psect	text24
  3624  000F62                     __ptext24:
  3625                           	opt stack 0
  3626  000F62                     _ActAileron:
  3627                           	opt stack 25
  3628                           
  3629                           ;incstack = 0
  3630                           ;ActAileron@change stored from wreg
  3631  000F62  0100               	movlb	0	; () banked
  3632  000F64  6FDB               	movwf	ActAileron@change& (0+255),b
  3633                           
  3634                           ;actors.c: 72: a_actors[0].aile += change;
  3635  000F66  0100               	movlb	0	; () banked
  3636  000F68  51DB               	movf	ActAileron@change& (0+255),w,b
  3637  000F6A  0100               	movlb	0	; () banked
  3638  000F6C  27D0               	addwf	_a_actors& (0+255),f,b
  3639  000F6E  0E00               	movlw	0
  3640  000F70  23D1               	addwfc	(_a_actors+1)& (0+255),f,b
  3641                           
  3642                           ; BSR set to: 0
  3643  000F72  0012               	return		;funcret
  3644  000F74                     __end_of_ActAileron:
  3645                           	opt stack 0
  3646                           tblptru	equ	0xFF8
  3647                           tblptrh	equ	0xFF7
  3648                           tblptrl	equ	0xFF6
  3649                           tablat	equ	0xFF5
  3650                           prodh	equ	0xFF4
  3651                           prodl	equ	0xFF3
  3652                           intcon	equ	0xFF2
  3653                           postinc0	equ	0xFEE
  3654                           wreg	equ	0xFE8
  3655                           postdec1	equ	0xFE5
  3656                           fsr1l	equ	0xFE1
  3657                           postinc2	equ	0xFDE
  3658                           postdec2	equ	0xFDD
  3659                           fsr2h	equ	0xFDA
  3660                           fsr2l	equ	0xFD9
  3661                           status	equ	0xFD8
  3662                           
  3663 ;; *************** function _CheckThrottle *****************
  3664 ;; Defined at:
  3665 ;;		line 237 in file "position.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;		None
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  i               2    6[BANK0 ] int 
  3670 ;;  i               2   12[BANK0 ] int 
  3671 ;;  i               2   10[BANK0 ] int 
  3672 ;;  tmp             2    8[BANK0 ] int 
  3673 ;; Return value:  Size  Location     Type
  3674 ;;		None               void
  3675 ;; Registers used:
  3676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3683 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3684 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3685 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;Total ram usage:       13 bytes
  3687 ;; Hardware stack levels used:    1
  3688 ;; Hardware stack levels required when called:    5
  3689 ;; This function calls:
  3690 ;;		_ActThrottle
  3691 ;;		_BeneathFloor
  3692 ;;		_BeneathTable
  3693 ;; This function is called by:
  3694 ;;		_main
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           	psect	text25
  3699  0000A0                     __ptext25:
  3700                           	opt stack 0
  3701  0000A0                     _CheckThrottle:
  3702                           	opt stack 25
  3703                           
  3704                           ;position.c: 239: if (id_current_cc == 0) {
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;incstack = 0
  3708  0000A0  5022               	movf	_id_current_cc,w,c
  3709  0000A2  1023               	iorwf	_id_current_cc+1,w,c
  3710  0000A4  A4D8               	btfss	status,2,c
  3711  0000A6  D020               	goto	l3360
  3712                           
  3713                           ;position.c: 241: if (a_frame_dif[0].dif_height < -cm50) {
  3714  0000A8  C049  F0DC         	movff	_cm50,??_CheckThrottle
  3715  0000AC  C04A  F0DD         	movff	_cm50+1,??_CheckThrottle+1
  3716  0000B0  0100               	movlb	0	; () banked
  3717  0000B2  1FDC               	comf	??_CheckThrottle& (0+255),f,b
  3718  0000B4  1FDD               	comf	(??_CheckThrottle+1)& (0+255),f,b
  3719  0000B6  4BDC               	infsnz	??_CheckThrottle& (0+255),f,b
  3720  0000B8  2BDD               	incf	(??_CheckThrottle+1)& (0+255),f,b
  3721  0000BA  0100               	movlb	0	; () banked
  3722  0000BC  51DC               	movf	??_CheckThrottle& (0+255),w,b
  3723  0000BE  5C1B               	subwf	_a_frame_dif+6,w,c
  3724  0000C0  0100               	movlb	0	; () banked
  3725  0000C2  51DD               	movf	(??_CheckThrottle+1)& (0+255),w,b
  3726  0000C4  581C               	subwfb	_a_frame_dif+7,w,c
  3727  0000C6  B0D8               	btfsc	status,0,c
  3728  0000C8  D006               	goto	l1006
  3729                           
  3730                           ; BSR set to: 0
  3731                           ;position.c: 242: if (storedif) {
  3732  0000CA  AA4E               	btfss	_storedif/(0+8),_storedif& (0+7),c
  3733  0000CC  D002               	goto	l1007
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;position.c: 243: table = 0;
  3737  0000CE  9C4E               	bcf	_table/(0+8),_table& (0+7),c
  3738                           
  3739                           ;position.c: 244: } else {
  3740  0000D0  D003               	goto	l1009
  3741  0000D2                     l1007:
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;position.c: 245: storedif = 1;
  3745  0000D2  8A4E               	bsf	_storedif/(0+8),_storedif& (0+7),c
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;position.c: 246: }
  3749                           ;position.c: 247: }else{
  3750  0000D4  D001               	goto	l1009
  3751  0000D6                     l1006:
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;position.c: 248: storedif = 0;
  3755  0000D6  9A4E               	bcf	_storedif/(0+8),_storedif& (0+7),c
  3756  0000D8                     l1009:
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;position.c: 249: }
  3760                           ;position.c: 250: if (table) {
  3761  0000D8  AC4E               	btfss	_table/(0+8),_table& (0+7),c
  3762  0000DA  D003               	goto	l3358
  3763                           
  3764                           ; BSR set to: 0
  3765                           ;position.c: 251: BeneathTable();
  3766  0000DC  EC8E  F006         	call	_BeneathTable	;wreg free
  3767                           
  3768                           ;position.c: 252: } else {
  3769  0000E0  0012               	return	
  3770  0000E2                     l3358:
  3771                           
  3772                           ;position.c: 253: BeneathFloor();
  3773  0000E2  ECB6  F006         	call	_BeneathFloor	;wreg free
  3774                           
  3775                           ;position.c: 254: }
  3776                           ;position.c: 255: } else if (id_current_cc > 0 && id_current_cc < (c_path - 1)) {
  3777  0000E6  0012               	return	
  3778  0000E8                     l3360:
  3779  0000E8  BE23               	btfsc	_id_current_cc+1,7,c
  3780  0000EA  D028               	goto	l3366
  3781  0000EC  5023               	movf	_id_current_cc+1,w,c
  3782  0000EE  E103               	bnz	u2870
  3783  0000F0  0422               	decf	_id_current_cc,w,c
  3784  0000F2  A0D8               	btfss	status,0,c
  3785  0000F4  D023               	goto	l3366
  3786  0000F6                     u2870:
  3787  0000F6  0EFF               	movlw	255
  3788  0000F8  0100               	movlb	0	; () banked
  3789  0000FA  6FDC               	movwf	??_CheckThrottle& (0+255),b
  3790  0000FC  0EFF               	movlw	255
  3791  0000FE  0100               	movlb	0	; () banked
  3792  000100  6FDD               	movwf	(??_CheckThrottle+1)& (0+255),b
  3793  000102  C03F  F0DE         	movff	_c_path,??_CheckThrottle+2
  3794  000106  C040  F0DF         	movff	_c_path+1,??_CheckThrottle+3
  3795  00010A  0100               	movlb	0	; () banked
  3796  00010C  51DC               	movf	??_CheckThrottle& (0+255),w,b
  3797  00010E  0100               	movlb	0	; () banked
  3798  000110  27DE               	addwf	(??_CheckThrottle+2)& (0+255),f,b
  3799  000112  0100               	movlb	0	; () banked
  3800  000114  51DD               	movf	(??_CheckThrottle+1)& (0+255),w,b
  3801  000116  0100               	movlb	0	; () banked
  3802  000118  23DF               	addwfc	(??_CheckThrottle+3)& (0+255),f,b
  3803  00011A  0100               	movlb	0	; () banked
  3804  00011C  51DE               	movf	(??_CheckThrottle+2)& (0+255),w,b
  3805  00011E  5C22               	subwf	_id_current_cc,w,c
  3806  000120  5023               	movf	_id_current_cc+1,w,c
  3807  000122  0A80               	xorlw	128
  3808  000124  0100               	movlb	0	; () banked
  3809  000126  6FE0               	movwf	(??_CheckThrottle+4)& (0+255),b
  3810  000128  0100               	movlb	0	; () banked
  3811  00012A  51DF               	movf	(??_CheckThrottle+3)& (0+255),w,b
  3812  00012C  0A80               	xorlw	128
  3813  00012E  0100               	movlb	0	; () banked
  3814  000130  59E0               	subwfb	(??_CheckThrottle+4)& (0+255),w,b
  3815  000132  B0D8               	btfsc	status,0,c
  3816  000134  D003               	goto	l3366
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;position.c: 256: BeneathFloor();
  3820  000136  ECB6  F006         	call	_BeneathFloor	;wreg free
  3821                           
  3822                           ;position.c: 257: } else if (id_current_cc == (c_path - 1)) {
  3823  00013A  0012               	return	
  3824  00013C                     l3366:
  3825  00013C  0EFF               	movlw	255
  3826  00013E  0100               	movlb	0	; () banked
  3827  000140  6FDC               	movwf	??_CheckThrottle& (0+255),b
  3828  000142  0EFF               	movlw	255
  3829  000144  0100               	movlb	0	; () banked
  3830  000146  6FDD               	movwf	(??_CheckThrottle+1)& (0+255),b
  3831  000148  C03F  F0DE         	movff	_c_path,??_CheckThrottle+2
  3832  00014C  C040  F0DF         	movff	_c_path+1,??_CheckThrottle+3
  3833  000150  0100               	movlb	0	; () banked
  3834  000152  51DC               	movf	??_CheckThrottle& (0+255),w,b
  3835  000154  0100               	movlb	0	; () banked
  3836  000156  27DE               	addwf	(??_CheckThrottle+2)& (0+255),f,b
  3837  000158  0100               	movlb	0	; () banked
  3838  00015A  51DD               	movf	(??_CheckThrottle+1)& (0+255),w,b
  3839  00015C  0100               	movlb	0	; () banked
  3840  00015E  23DF               	addwfc	(??_CheckThrottle+3)& (0+255),f,b
  3841  000160  5022               	movf	_id_current_cc,w,c
  3842  000162  0100               	movlb	0	; () banked
  3843  000164  19DE               	xorwf	(??_CheckThrottle+2)& (0+255),w,b
  3844  000166  E11A               	bnz	l3378
  3845  000168  5023               	movf	_id_current_cc+1,w,c
  3846  00016A  0100               	movlb	0	; () banked
  3847  00016C  19DF               	xorwf	(??_CheckThrottle+3)& (0+255),w,b
  3848  00016E  A4D8               	btfss	status,2,c
  3849  000170  D015               	goto	l3378
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;position.c: 259: if (a_frame_dif[0].dif_height > cm50) {
  3853  000172  501B               	movf	_a_frame_dif+6,w,c
  3854  000174  5C49               	subwf	_cm50,w,c
  3855  000176  501C               	movf	_a_frame_dif+7,w,c
  3856  000178  584A               	subwfb	_cm50+1,w,c
  3857  00017A  B0D8               	btfsc	status,0,c
  3858  00017C  D006               	goto	l1016
  3859                           
  3860                           ; BSR set to: 0
  3861                           ;position.c: 260: if (storedif) {
  3862  00017E  AA4E               	btfss	_storedif/(0+8),_storedif& (0+7),c
  3863  000180  D002               	goto	l1017
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;position.c: 261: table = 1;
  3867  000182  8C4E               	bsf	_table/(0+8),_table& (0+7),c
  3868                           
  3869                           ;position.c: 262: } else {
  3870  000184  D003               	goto	l1019
  3871  000186                     l1017:
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;position.c: 263: storedif = 1;
  3875  000186  8A4E               	bsf	_storedif/(0+8),_storedif& (0+7),c
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;position.c: 264: }
  3879                           ;position.c: 265: }else{
  3880  000188  D001               	goto	l1019
  3881  00018A                     l1016:
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;position.c: 266: storedif = 0;
  3885  00018A  9A4E               	bcf	_storedif/(0+8),_storedif& (0+7),c
  3886  00018C                     l1019:
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;position.c: 267: }
  3890                           ;position.c: 268: if (table) {
  3891  00018C  AC4E               	btfss	_table/(0+8),_table& (0+7),c
  3892  00018E  D003               	goto	l3376
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;position.c: 269: BeneathTable();
  3896  000190  EC8E  F006         	call	_BeneathTable	;wreg free
  3897                           
  3898                           ;position.c: 270: } else {
  3899  000194  0012               	return	
  3900  000196                     l3376:
  3901                           
  3902                           ;position.c: 271: BeneathFloor();
  3903  000196  ECB6  F006         	call	_BeneathFloor	;wreg free
  3904                           
  3905                           ;position.c: 272: }
  3906                           ;position.c: 273: } else {
  3907  00019A  0012               	return	
  3908  00019C                     l3378:
  3909                           
  3910                           ;position.c: 278: if (a_frame[0].height >= 30) {
  3911  00019C  5008               	movf	_a_frame+7,w,c
  3912  00019E  E104               	bnz	u2930
  3913  0001A0  0E1E               	movlw	30
  3914  0001A2  5C07               	subwf	_a_frame+6,w,c
  3915  0001A4  A0D8               	btfss	status,0,c
  3916  0001A6  D026               	goto	l1023
  3917  0001A8                     u2930:
  3918                           
  3919                           ;position.c: 279: if (a_frame[1].height > a_frame[0].height) {
  3920  0001A8  5011               	movf	_a_frame+16,w,c
  3921  0001AA  5C07               	subwf	_a_frame+6,w,c
  3922  0001AC  5012               	movf	_a_frame+17,w,c
  3923  0001AE  5808               	subwfb	_a_frame+7,w,c
  3924  0001B0  B0D8               	btfsc	status,0,c
  3925  0001B2  D01C               	goto	l3392
  3926                           
  3927                           ;position.c: 281: if (a_frame_dif[0].dif_height <= 46) {
  3928  0001B4  BE1C               	btfsc	_a_frame_dif+7,7,c
  3929  0001B6  D006               	goto	l3384
  3930  0001B8  501C               	movf	_a_frame_dif+7,w,c
  3931  0001BA  E114               	bnz	l3390
  3932  0001BC  0E2F               	movlw	47
  3933  0001BE  5C1B               	subwf	_a_frame_dif+6,w,c
  3934  0001C0  B0D8               	btfsc	status,0,c
  3935  0001C2  D010               	goto	l3390
  3936  0001C4                     l3384:
  3937                           
  3938                           ;position.c: 282: if (a_frame_dif[0].dif_pos_x <= 23) {
  3939  0001C4  BE18               	btfsc	_a_frame_dif+3,7,c
  3940  0001C6  D006               	goto	l3386
  3941  0001C8  5018               	movf	_a_frame_dif+3,w,c
  3942  0001CA  E108               	bnz	l3388
  3943  0001CC  0E18               	movlw	24
  3944  0001CE  5C17               	subwf	_a_frame_dif+2,w,c
  3945  0001D0  B0D8               	btfsc	status,0,c
  3946  0001D2  D004               	goto	l3388
  3947  0001D4                     l3386:
  3948                           
  3949                           ;position.c: 284: ActThrottle(-3);
  3950  0001D4  0EFD               	movlw	253
  3951  0001D6  ECBA  F007         	call	_ActThrottle
  3952                           
  3953                           ;position.c: 285: } else {
  3954  0001DA  0012               	return	
  3955  0001DC                     l3388:
  3956                           
  3957                           ;position.c: 286: ActThrottle(0);
  3958  0001DC  0E00               	movlw	0
  3959  0001DE  ECBA  F007         	call	_ActThrottle
  3960                           
  3961                           ;position.c: 287: }
  3962                           ;position.c: 288: } else {
  3963  0001E2  0012               	return	
  3964  0001E4                     l3390:
  3965                           
  3966                           ;position.c: 289: ActThrottle(3);
  3967  0001E4  0E03               	movlw	3
  3968  0001E6  ECBA  F007         	call	_ActThrottle
  3969                           
  3970                           ;position.c: 290: }
  3971                           ;position.c: 291: } else {
  3972  0001EA  0012               	return	
  3973  0001EC                     l3392:
  3974                           
  3975                           ;position.c: 293: ActThrottle(-3);
  3976  0001EC  0EFD               	movlw	253
  3977  0001EE  ECBA  F007         	call	_ActThrottle
  3978                           
  3979                           ;position.c: 294: }
  3980                           ;position.c: 295: } else {
  3981  0001F2  0012               	return	
  3982  0001F4                     l1023:
  3983                           
  3984                           ;position.c: 300: if(direction){
  3985  0001F4  A04E               	btfss	_direction/(0+8),_direction& (0+7),c
  3986  0001F6  D002               	goto	l1031
  3987                           
  3988                           ;position.c: 301: direction = 0;
  3989  0001F8  904E               	bcf	_direction/(0+8),_direction& (0+7),c
  3990                           
  3991                           ;position.c: 302: }else{
  3992  0001FA  D001               	goto	l3396
  3993  0001FC                     l1031:
  3994                           
  3995                           ;position.c: 303: direction = 1;
  3996  0001FC  804E               	bsf	_direction/(0+8),_direction& (0+7),c
  3997  0001FE                     l3396:
  3998                           
  3999                           ;position.c: 304: }
  4000                           ;position.c: 305: int tmp = c_path - 1;
  4001  0001FE  0EFF               	movlw	255
  4002  000200  243F               	addwf	_c_path,w,c
  4003  000202  0100               	movlb	0	; () banked
  4004  000204  6FE3               	movwf	CheckThrottle@tmp& (0+255),b
  4005  000206  0EFF               	movlw	255
  4006  000208  2040               	addwfc	_c_path+1,w,c
  4007  00020A  0100               	movlb	0	; () banked
  4008  00020C  6FE4               	movwf	(CheckThrottle@tmp+1)& (0+255),b
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;position.c: 306: for (int i = 0; i <= tmp; i++) {
  4012  00020E  0E00               	movlw	0
  4013  000210  0100               	movlb	0	; () banked
  4014  000212  6FE6               	movwf	(CheckThrottle@i+1)& (0+255),b
  4015  000214  0E00               	movlw	0
  4016  000216  6FE5               	movwf	CheckThrottle@i& (0+255),b
  4017  000218  D047               	goto	l1033
  4018  00021A                     l3400:
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;position.c: 307: a_path_old[i].higher_cc = a_path[i].higher_cc;
  4022  00021A  C0E5  F0DC         	movff	CheckThrottle@i,??_CheckThrottle
  4023  00021E  C0E6  F0DD         	movff	CheckThrottle@i+1,??_CheckThrottle+1
  4024  000222  90D8               	bcf	status,0,c
  4025  000224  0100               	movlb	0	; () banked
  4026  000226  37DC               	rlcf	??_CheckThrottle& (0+255),f,b
  4027  000228  37DD               	rlcf	(??_CheckThrottle+1)& (0+255),f,b
  4028  00022A  0E01               	movlw	1
  4029  00022C  0100               	movlb	0	; () banked
  4030  00022E  27DC               	addwf	??_CheckThrottle& (0+255),f,b
  4031  000230  0E00               	movlw	0
  4032  000232  23DD               	addwfc	(??_CheckThrottle+1)& (0+255),f,b
  4033  000234  0EA6               	movlw	low _a_path
  4034  000236  0100               	movlb	0	; () banked
  4035  000238  25DC               	addwf	??_CheckThrottle& (0+255),w,b
  4036  00023A  6ED9               	movwf	fsr2l,c
  4037  00023C  0E00               	movlw	high _a_path
  4038  00023E  0100               	movlb	0	; () banked
  4039  000240  21DD               	addwfc	(??_CheckThrottle+1)& (0+255),w,b
  4040  000242  6EDA               	movwf	fsr2h,c
  4041  000244  C0E5  F0DE         	movff	CheckThrottle@i,??_CheckThrottle+2
  4042  000248  C0E6  F0DF         	movff	CheckThrottle@i+1,??_CheckThrottle+3
  4043  00024C  90D8               	bcf	status,0,c
  4044  00024E  0100               	movlb	0	; () banked
  4045  000250  37DE               	rlcf	(??_CheckThrottle+2)& (0+255),f,b
  4046  000252  37DF               	rlcf	(??_CheckThrottle+3)& (0+255),f,b
  4047  000254  0E01               	movlw	1
  4048  000256  0100               	movlb	0	; () banked
  4049  000258  27DE               	addwf	(??_CheckThrottle+2)& (0+255),f,b
  4050  00025A  0E00               	movlw	0
  4051  00025C  23DF               	addwfc	(??_CheckThrottle+3)& (0+255),f,b
  4052  00025E  0E00               	movlw	low _a_path_old
  4053  000260  0100               	movlb	0	; () banked
  4054  000262  25DE               	addwf	(??_CheckThrottle+2)& (0+255),w,b
  4055  000264  6EE1               	movwf	fsr1l,c
  4056  000266  0E01               	movlw	high _a_path_old
  4057  000268  0100               	movlb	0	; () banked
  4058  00026A  21DF               	addwfc	(??_CheckThrottle+3)& (0+255),w,b
  4059  00026C  6EE2               	movwf	fsr1h,c
  4060  00026E  CFDF FFE7          	movff	indf2,indf1
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;position.c: 308: a_path_old[i].lower_cc = a_path[i].lower_cc;
  4064  000272  90D8               	bcf	status,0,c
  4065  000274  0100               	movlb	0	; () banked
  4066  000276  35E5               	rlcf	CheckThrottle@i& (0+255),w,b
  4067  000278  6ED9               	movwf	fsr2l,c
  4068  00027A  0100               	movlb	0	; () banked
  4069  00027C  35E6               	rlcf	(CheckThrottle@i+1)& (0+255),w,b
  4070  00027E  6EDA               	movwf	fsr2h,c
  4071  000280  0EA6               	movlw	low _a_path
  4072  000282  26D9               	addwf	fsr2l,f,c
  4073  000284  0E00               	movlw	high _a_path
  4074  000286  22DA               	addwfc	fsr2h,f,c
  4075  000288  90D8               	bcf	status,0,c
  4076  00028A  0100               	movlb	0	; () banked
  4077  00028C  35E5               	rlcf	CheckThrottle@i& (0+255),w,b
  4078  00028E  6EE1               	movwf	fsr1l,c
  4079  000290  0100               	movlb	0	; () banked
  4080  000292  35E6               	rlcf	(CheckThrottle@i+1)& (0+255),w,b
  4081  000294  6EE2               	movwf	fsr1h,c
  4082  000296  0E00               	movlw	low _a_path_old
  4083  000298  26E1               	addwf	fsr1l,f,c
  4084  00029A  0E01               	movlw	high _a_path_old
  4085  00029C  22E2               	addwfc	fsr1h,f,c
  4086  00029E  CFDF FFE7          	movff	indf2,indf1
  4087                           
  4088                           ; BSR set to: 0
  4089  0002A2  0100               	movlb	0	; () banked
  4090  0002A4  4BE5               	infsnz	CheckThrottle@i& (0+255),f,b
  4091  0002A6  2BE6               	incf	(CheckThrottle@i+1)& (0+255),f,b
  4092  0002A8                     l1033:
  4093                           
  4094                           ; BSR set to: 0
  4095  0002A8  0100               	movlb	0	; () banked
  4096  0002AA  51E5               	movf	CheckThrottle@i& (0+255),w,b
  4097  0002AC  0100               	movlb	0	; () banked
  4098  0002AE  5DE3               	subwf	CheckThrottle@tmp& (0+255),w,b
  4099  0002B0  0100               	movlb	0	; () banked
  4100  0002B2  51E4               	movf	(CheckThrottle@tmp+1)& (0+255),w,b
  4101  0002B4  0A80               	xorlw	128
  4102  0002B6  0100               	movlb	0	; () banked
  4103  0002B8  6FDC               	movwf	??_CheckThrottle& (0+255),b
  4104  0002BA  0100               	movlb	0	; () banked
  4105  0002BC  51E6               	movf	(CheckThrottle@i+1)& (0+255),w,b
  4106  0002BE  0A80               	xorlw	128
  4107  0002C0  0100               	movlb	0	; () banked
  4108  0002C2  59DC               	subwfb	??_CheckThrottle& (0+255),w,b
  4109  0002C4  B0D8               	btfsc	status,0,c
  4110  0002C6  D7A9               	goto	l3400
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;position.c: 309: }
  4114                           ;position.c: 310: for (int i = 0; i <= tmp; i++) {
  4115                           
  4116                           ; BSR set to: 0
  4117  0002C8  0E00               	movlw	0
  4118  0002CA  0100               	movlb	0	; () banked
  4119  0002CC  6FE8               	movwf	(CheckThrottle@i_1741+1)& (0+255),b
  4120  0002CE  0E00               	movlw	0
  4121  0002D0  6FE7               	movwf	CheckThrottle@i_1741& (0+255),b
  4122  0002D2  D066               	goto	l3412
  4123  0002D4                     l3408:
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;position.c: 311: a_path[(tmp - i)].higher_cc = a_path_old[i].higher_cc;
  4127  0002D4  C0E7  F0DC         	movff	CheckThrottle@i_1741,??_CheckThrottle
  4128  0002D8  C0E8  F0DD         	movff	CheckThrottle@i_1741+1,??_CheckThrottle+1
  4129  0002DC  90D8               	bcf	status,0,c
  4130  0002DE  0100               	movlb	0	; () banked
  4131  0002E0  37DC               	rlcf	??_CheckThrottle& (0+255),f,b
  4132  0002E2  37DD               	rlcf	(??_CheckThrottle+1)& (0+255),f,b
  4133  0002E4  0E01               	movlw	1
  4134  0002E6  0100               	movlb	0	; () banked
  4135  0002E8  27DC               	addwf	??_CheckThrottle& (0+255),f,b
  4136  0002EA  0E00               	movlw	0
  4137  0002EC  23DD               	addwfc	(??_CheckThrottle+1)& (0+255),f,b
  4138  0002EE  0E00               	movlw	low _a_path_old
  4139  0002F0  0100               	movlb	0	; () banked
  4140  0002F2  25DC               	addwf	??_CheckThrottle& (0+255),w,b
  4141  0002F4  6ED9               	movwf	fsr2l,c
  4142  0002F6  0E01               	movlw	high _a_path_old
  4143  0002F8  0100               	movlb	0	; () banked
  4144  0002FA  21DD               	addwfc	(??_CheckThrottle+1)& (0+255),w,b
  4145  0002FC  6EDA               	movwf	fsr2h,c
  4146  0002FE  C0E7  F0DE         	movff	CheckThrottle@i_1741,??_CheckThrottle+2
  4147  000302  C0E8  F0DF         	movff	CheckThrottle@i_1741+1,??_CheckThrottle+3
  4148  000306  0100               	movlb	0	; () banked
  4149  000308  1FDE               	comf	(??_CheckThrottle+2)& (0+255),f,b
  4150  00030A  1FDF               	comf	(??_CheckThrottle+3)& (0+255),f,b
  4151  00030C  4BDE               	infsnz	(??_CheckThrottle+2)& (0+255),f,b
  4152  00030E  2BDF               	incf	(??_CheckThrottle+3)& (0+255),f,b
  4153  000310  0100               	movlb	0	; () banked
  4154  000312  51E3               	movf	CheckThrottle@tmp& (0+255),w,b
  4155  000314  0100               	movlb	0	; () banked
  4156  000316  27DE               	addwf	(??_CheckThrottle+2)& (0+255),f,b
  4157  000318  0100               	movlb	0	; () banked
  4158  00031A  51E4               	movf	(CheckThrottle@tmp+1)& (0+255),w,b
  4159  00031C  0100               	movlb	0	; () banked
  4160  00031E  23DF               	addwfc	(??_CheckThrottle+3)& (0+255),f,b
  4161  000320  90D8               	bcf	status,0,c
  4162  000322  0100               	movlb	0	; () banked
  4163  000324  37DE               	rlcf	(??_CheckThrottle+2)& (0+255),f,b
  4164  000326  37DF               	rlcf	(??_CheckThrottle+3)& (0+255),f,b
  4165  000328  0E01               	movlw	1
  4166  00032A  0100               	movlb	0	; () banked
  4167  00032C  27DE               	addwf	(??_CheckThrottle+2)& (0+255),f,b
  4168  00032E  0E00               	movlw	0
  4169  000330  23DF               	addwfc	(??_CheckThrottle+3)& (0+255),f,b
  4170  000332  0EA6               	movlw	low _a_path
  4171  000334  0100               	movlb	0	; () banked
  4172  000336  25DE               	addwf	(??_CheckThrottle+2)& (0+255),w,b
  4173  000338  6EE1               	movwf	fsr1l,c
  4174  00033A  0E00               	movlw	high _a_path
  4175  00033C  0100               	movlb	0	; () banked
  4176  00033E  21DF               	addwfc	(??_CheckThrottle+3)& (0+255),w,b
  4177  000340  6EE2               	movwf	fsr1h,c
  4178  000342  CFDF FFE7          	movff	indf2,indf1
  4179                           
  4180                           ;position.c: 312: a_path[(tmp - i)].lower_cc = a_path_old[i].lower_cc;
  4181  000346  90D8               	bcf	status,0,c
  4182  000348  0100               	movlb	0	; () banked
  4183  00034A  35E7               	rlcf	CheckThrottle@i_1741& (0+255),w,b
  4184  00034C  6ED9               	movwf	fsr2l,c
  4185  00034E  0100               	movlb	0	; () banked
  4186  000350  35E8               	rlcf	(CheckThrottle@i_1741+1)& (0+255),w,b
  4187  000352  6EDA               	movwf	fsr2h,c
  4188  000354  0E00               	movlw	low _a_path_old
  4189  000356  26D9               	addwf	fsr2l,f,c
  4190  000358  0E01               	movlw	high _a_path_old
  4191  00035A  22DA               	addwfc	fsr2h,f,c
  4192  00035C  C0E7  F0DC         	movff	CheckThrottle@i_1741,??_CheckThrottle
  4193  000360  C0E8  F0DD         	movff	CheckThrottle@i_1741+1,??_CheckThrottle+1
  4194  000364  0100               	movlb	0	; () banked
  4195  000366  1FDC               	comf	??_CheckThrottle& (0+255),f,b
  4196  000368  1FDD               	comf	(??_CheckThrottle+1)& (0+255),f,b
  4197  00036A  4BDC               	infsnz	??_CheckThrottle& (0+255),f,b
  4198  00036C  2BDD               	incf	(??_CheckThrottle+1)& (0+255),f,b
  4199  00036E  0100               	movlb	0	; () banked
  4200  000370  51E3               	movf	CheckThrottle@tmp& (0+255),w,b
  4201  000372  0100               	movlb	0	; () banked
  4202  000374  27DC               	addwf	??_CheckThrottle& (0+255),f,b
  4203  000376  0100               	movlb	0	; () banked
  4204  000378  51E4               	movf	(CheckThrottle@tmp+1)& (0+255),w,b
  4205  00037A  0100               	movlb	0	; () banked
  4206  00037C  23DD               	addwfc	(??_CheckThrottle+1)& (0+255),f,b
  4207  00037E  90D8               	bcf	status,0,c
  4208  000380  0100               	movlb	0	; () banked
  4209  000382  37DC               	rlcf	??_CheckThrottle& (0+255),f,b
  4210  000384  37DD               	rlcf	(??_CheckThrottle+1)& (0+255),f,b
  4211  000386  0EA6               	movlw	low _a_path
  4212  000388  0100               	movlb	0	; () banked
  4213  00038A  25DC               	addwf	??_CheckThrottle& (0+255),w,b
  4214  00038C  6EE1               	movwf	fsr1l,c
  4215  00038E  0E00               	movlw	high _a_path
  4216  000390  0100               	movlb	0	; () banked
  4217  000392  21DD               	addwfc	(??_CheckThrottle+1)& (0+255),w,b
  4218  000394  6EE2               	movwf	fsr1h,c
  4219  000396  CFDF FFE7          	movff	indf2,indf1
  4220                           
  4221                           ; BSR set to: 0
  4222  00039A  0100               	movlb	0	; () banked
  4223  00039C  4BE7               	infsnz	CheckThrottle@i_1741& (0+255),f,b
  4224  00039E  2BE8               	incf	(CheckThrottle@i_1741+1)& (0+255),f,b
  4225  0003A0                     l3412:
  4226                           
  4227                           ; BSR set to: 0
  4228  0003A0  0100               	movlb	0	; () banked
  4229  0003A2  51E7               	movf	CheckThrottle@i_1741& (0+255),w,b
  4230  0003A4  0100               	movlb	0	; () banked
  4231  0003A6  5DE3               	subwf	CheckThrottle@tmp& (0+255),w,b
  4232  0003A8  0100               	movlb	0	; () banked
  4233  0003AA  51E4               	movf	(CheckThrottle@tmp+1)& (0+255),w,b
  4234  0003AC  0A80               	xorlw	128
  4235  0003AE  0100               	movlb	0	; () banked
  4236  0003B0  6FDC               	movwf	??_CheckThrottle& (0+255),b
  4237  0003B2  0100               	movlb	0	; () banked
  4238  0003B4  51E8               	movf	(CheckThrottle@i_1741+1)& (0+255),w,b
  4239  0003B6  0A80               	xorlw	128
  4240  0003B8  0100               	movlb	0	; () banked
  4241  0003BA  59DC               	subwfb	??_CheckThrottle& (0+255),w,b
  4242  0003BC  B0D8               	btfsc	status,0,c
  4243  0003BE  D78A               	goto	l3408
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;position.c: 313: }
  4247                           ;position.c: 315: for (int i = 0; i <= 10000; i++) {
  4248                           
  4249                           ; BSR set to: 0
  4250  0003C0  0E00               	movlw	0
  4251  0003C2  0100               	movlb	0	; () banked
  4252  0003C4  6FE2               	movwf	(CheckThrottle@i_1742+1)& (0+255),b
  4253  0003C6  0E00               	movlw	0
  4254  0003C8  6FE1               	movwf	CheckThrottle@i_1742& (0+255),b
  4255  0003CA                     l3416:
  4256                           
  4257                           ; BSR set to: 0
  4258  0003CA  0100               	movlb	0	; () banked
  4259  0003CC  BFE2               	btfsc	(CheckThrottle@i_1742+1)& (0+255),7,b
  4260  0003CE  D008               	goto	l3420
  4261  0003D0  0E11               	movlw	17
  4262  0003D2  0100               	movlb	0	; () banked
  4263  0003D4  5DE1               	subwf	CheckThrottle@i_1742& (0+255),w,b
  4264  0003D6  0E27               	movlw	39
  4265  0003D8  0100               	movlb	0	; () banked
  4266  0003DA  59E2               	subwfb	(CheckThrottle@i_1742+1)& (0+255),w,b
  4267  0003DC  B0D8               	btfsc	status,0,c
  4268  0003DE  0012               	return	
  4269  0003E0                     l3420:
  4270                           
  4271                           ; BSR set to: 0
  4272                           ;position.c: 316: _delay((unsigned long)((3)*(64000000/4000.0)));
  4273  0003E0  0E3F               	movlw	63
  4274  0003E2  0100               	movlb	0	; () banked
  4275  0003E4  6FDC               	movwf	??_CheckThrottle& (0+255),b
  4276  0003E6  0E55               	movlw	85
  4277  0003E8                     u3037:
  4278  0003E8  2EE8               	decfsz	wreg,f,c
  4279  0003EA  D7FE               	goto	u3037
  4280  0003EC  2FDC               	decfsz	??_CheckThrottle& (0+255),f,b
  4281  0003EE  D7FC               	goto	u3037
  4282  0003F0  F000               	nop	
  4283  0003F2  0100               	movlb	0	; () banked
  4284  0003F4  4BE1               	infsnz	CheckThrottle@i_1742& (0+255),f,b
  4285  0003F6  2BE2               	incf	(CheckThrottle@i_1742+1)& (0+255),f,b
  4286  0003F8  D7E8               	goto	l3416
  4287  0003FA                     __end_of_CheckThrottle:
  4288                           	opt stack 0
  4289                           tblptru	equ	0xFF8
  4290                           tblptrh	equ	0xFF7
  4291                           tblptrl	equ	0xFF6
  4292                           tablat	equ	0xFF5
  4293                           prodh	equ	0xFF4
  4294                           prodl	equ	0xFF3
  4295                           intcon	equ	0xFF2
  4296                           postinc0	equ	0xFEE
  4297                           wreg	equ	0xFE8
  4298                           indf1	equ	0xFE7
  4299                           postdec1	equ	0xFE5
  4300                           fsr1h	equ	0xFE2
  4301                           fsr1l	equ	0xFE1
  4302                           indf2	equ	0xFDF
  4303                           postinc2	equ	0xFDE
  4304                           postdec2	equ	0xFDD
  4305                           fsr2h	equ	0xFDA
  4306                           fsr2l	equ	0xFD9
  4307                           status	equ	0xFD8
  4308                           
  4309 ;; *************** function _BeneathTable *****************
  4310 ;; Defined at:
  4311 ;;		line 196 in file "position.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;		None
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;		None
  4316 ;; Return value:  Size  Location     Type
  4317 ;;		None               void
  4318 ;; Registers used:
  4319 ;;		wreg, status,2, status,0, cstack
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4329 ;;Total ram usage:        0 bytes
  4330 ;; Hardware stack levels used:    1
  4331 ;; Hardware stack levels required when called:    4
  4332 ;; This function calls:
  4333 ;;		_ActThrottle
  4334 ;; This function is called by:
  4335 ;;		_CheckThrottle
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           	psect	text26
  4340  000D1C                     __ptext26:
  4341                           	opt stack 0
  4342  000D1C                     _BeneathTable:
  4343                           	opt stack 25
  4344                           
  4345                           ;position.c: 197: if (a_frame[0].height <= cm120 && a_frame[0].height >= cm80) {
  4346                           
  4347                           ;incstack = 0
  4348  000D1C  5007               	movf	_a_frame+6,w,c
  4349  000D1E  5C43               	subwf	_cm120,w,c
  4350  000D20  5008               	movf	_a_frame+7,w,c
  4351  000D22  5844               	subwfb	_cm120+1,w,c
  4352  000D24  A0D8               	btfss	status,0,c
  4353  000D26  D00A               	goto	l3204
  4354  000D28  504B               	movf	_cm80,w,c
  4355  000D2A  5C07               	subwf	_a_frame+6,w,c
  4356  000D2C  504C               	movf	_cm80+1,w,c
  4357  000D2E  5808               	subwfb	_a_frame+7,w,c
  4358  000D30  A0D8               	btfss	status,0,c
  4359  000D32  D004               	goto	l3204
  4360                           
  4361                           ;position.c: 198: ActThrottle(0);
  4362  000D34  0E00               	movlw	0
  4363  000D36  ECBA  F007         	call	_ActThrottle
  4364                           
  4365                           ;position.c: 199: } else if (a_frame[0].height < cm80) {
  4366  000D3A  0012               	return	
  4367  000D3C                     l3204:
  4368  000D3C  504B               	movf	_cm80,w,c
  4369  000D3E  5C07               	subwf	_a_frame+6,w,c
  4370  000D40  504C               	movf	_cm80+1,w,c
  4371  000D42  5808               	subwfb	_a_frame+7,w,c
  4372  000D44  B0D8               	btfsc	status,0,c
  4373  000D46  D00E               	goto	l3212
  4374                           
  4375                           ;position.c: 200: if (a_frame[0].height < cm50) {
  4376  000D48  5049               	movf	_cm50,w,c
  4377  000D4A  5C07               	subwf	_a_frame+6,w,c
  4378  000D4C  504A               	movf	_cm50+1,w,c
  4379  000D4E  5808               	subwfb	_a_frame+7,w,c
  4380  000D50  B0D8               	btfsc	status,0,c
  4381  000D52  D004               	goto	l3210
  4382                           
  4383                           ;position.c: 201: ActThrottle(6);
  4384  000D54  0E06               	movlw	6
  4385  000D56  ECBA  F007         	call	_ActThrottle
  4386                           
  4387                           ;position.c: 202: } else {
  4388  000D5A  0012               	return	
  4389  000D5C                     l3210:
  4390                           
  4391                           ;position.c: 203: ActThrottle(3);
  4392  000D5C  0E03               	movlw	3
  4393  000D5E  ECBA  F007         	call	_ActThrottle
  4394                           
  4395                           ;position.c: 204: }
  4396                           ;position.c: 205: } else {
  4397  000D62  0012               	return	
  4398  000D64                     l3212:
  4399                           
  4400                           ;position.c: 206: ActThrottle(-3);
  4401  000D64  0EFD               	movlw	253
  4402  000D66  ECBA  F007         	call	_ActThrottle
  4403  000D6A  0012               	return	
  4404  000D6C                     __end_of_BeneathTable:
  4405                           	opt stack 0
  4406                           tblptru	equ	0xFF8
  4407                           tblptrh	equ	0xFF7
  4408                           tblptrl	equ	0xFF6
  4409                           tablat	equ	0xFF5
  4410                           prodh	equ	0xFF4
  4411                           prodl	equ	0xFF3
  4412                           intcon	equ	0xFF2
  4413                           postinc0	equ	0xFEE
  4414                           wreg	equ	0xFE8
  4415                           indf1	equ	0xFE7
  4416                           postdec1	equ	0xFE5
  4417                           fsr1h	equ	0xFE2
  4418                           fsr1l	equ	0xFE1
  4419                           indf2	equ	0xFDF
  4420                           postinc2	equ	0xFDE
  4421                           postdec2	equ	0xFDD
  4422                           fsr2h	equ	0xFDA
  4423                           fsr2l	equ	0xFD9
  4424                           status	equ	0xFD8
  4425                           
  4426 ;; *************** function _BeneathFloor *****************
  4427 ;; Defined at:
  4428 ;;		line 216 in file "position.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;		None
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;		None
  4433 ;; Return value:  Size  Location     Type
  4434 ;;		None               void
  4435 ;; Registers used:
  4436 ;;		wreg, status,2, status,0, cstack
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;Total ram usage:        0 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; Hardware stack levels required when called:    4
  4449 ;; This function calls:
  4450 ;;		_ActThrottle
  4451 ;; This function is called by:
  4452 ;;		_CheckThrottle
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           	psect	text27
  4457  000D6C                     __ptext27:
  4458                           	opt stack 0
  4459  000D6C                     _BeneathFloor:
  4460                           	opt stack 25
  4461                           
  4462                           ;position.c: 217: if (a_frame[0].height <= cm220 && a_frame[0].height >= cm180) {
  4463                           
  4464                           ;incstack = 0
  4465  000D6C  5007               	movf	_a_frame+6,w,c
  4466  000D6E  5C47               	subwf	_cm220,w,c
  4467  000D70  5008               	movf	_a_frame+7,w,c
  4468  000D72  5848               	subwfb	_cm220+1,w,c
  4469  000D74  A0D8               	btfss	status,0,c
  4470  000D76  D00A               	goto	l3220
  4471  000D78  5045               	movf	_cm180,w,c
  4472  000D7A  5C07               	subwf	_a_frame+6,w,c
  4473  000D7C  5046               	movf	_cm180+1,w,c
  4474  000D7E  5808               	subwfb	_a_frame+7,w,c
  4475  000D80  A0D8               	btfss	status,0,c
  4476  000D82  D004               	goto	l3220
  4477                           
  4478                           ;position.c: 218: ActThrottle(0);
  4479  000D84  0E00               	movlw	0
  4480  000D86  ECBA  F007         	call	_ActThrottle
  4481                           
  4482                           ;position.c: 219: } else if (a_frame[0].height < cm180) {
  4483  000D8A  0012               	return	
  4484  000D8C                     l3220:
  4485  000D8C  5045               	movf	_cm180,w,c
  4486  000D8E  5C07               	subwf	_a_frame+6,w,c
  4487  000D90  5046               	movf	_cm180+1,w,c
  4488  000D92  5808               	subwfb	_a_frame+7,w,c
  4489  000D94  B0D8               	btfsc	status,0,c
  4490  000D96  D00E               	goto	l3228
  4491                           
  4492                           ;position.c: 220: if (a_frame[0].height < cm100) {
  4493  000D98  5041               	movf	_cm100,w,c
  4494  000D9A  5C07               	subwf	_a_frame+6,w,c
  4495  000D9C  5042               	movf	_cm100+1,w,c
  4496  000D9E  5808               	subwfb	_a_frame+7,w,c
  4497  000DA0  B0D8               	btfsc	status,0,c
  4498  000DA2  D004               	goto	l3226
  4499                           
  4500                           ;position.c: 221: ActThrottle(6);
  4501  000DA4  0E06               	movlw	6
  4502  000DA6  ECBA  F007         	call	_ActThrottle
  4503                           
  4504                           ;position.c: 222: } else {
  4505  000DAA  0012               	return	
  4506  000DAC                     l3226:
  4507                           
  4508                           ;position.c: 223: ActThrottle(3);
  4509  000DAC  0E03               	movlw	3
  4510  000DAE  ECBA  F007         	call	_ActThrottle
  4511                           
  4512                           ;position.c: 224: }
  4513                           ;position.c: 225: } else {
  4514  000DB2  0012               	return	
  4515  000DB4                     l3228:
  4516                           
  4517                           ;position.c: 226: ActThrottle(-3);
  4518  000DB4  0EFD               	movlw	253
  4519  000DB6  ECBA  F007         	call	_ActThrottle
  4520  000DBA  0012               	return	
  4521  000DBC                     __end_of_BeneathFloor:
  4522                           	opt stack 0
  4523                           tblptru	equ	0xFF8
  4524                           tblptrh	equ	0xFF7
  4525                           tblptrl	equ	0xFF6
  4526                           tablat	equ	0xFF5
  4527                           prodh	equ	0xFF4
  4528                           prodl	equ	0xFF3
  4529                           intcon	equ	0xFF2
  4530                           postinc0	equ	0xFEE
  4531                           wreg	equ	0xFE8
  4532                           indf1	equ	0xFE7
  4533                           postdec1	equ	0xFE5
  4534                           fsr1h	equ	0xFE2
  4535                           fsr1l	equ	0xFE1
  4536                           indf2	equ	0xFDF
  4537                           postinc2	equ	0xFDE
  4538                           postdec2	equ	0xFDD
  4539                           fsr2h	equ	0xFDA
  4540                           fsr2l	equ	0xFD9
  4541                           status	equ	0xFD8
  4542                           
  4543 ;; *************** function _ActThrottle *****************
  4544 ;; Defined at:
  4545 ;;		line 89 in file "actors.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  change          1    wreg     unsigned char 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;  change          1    0[BANK0 ] unsigned char 
  4550 ;; Return value:  Size  Location     Type
  4551 ;;		None               void
  4552 ;; Registers used:
  4553 ;;		wreg, status,2, status,0
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4560 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4562 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4563 ;;Total ram usage:        1 bytes
  4564 ;; Hardware stack levels used:    1
  4565 ;; Hardware stack levels required when called:    3
  4566 ;; This function calls:
  4567 ;;		Nothing
  4568 ;; This function is called by:
  4569 ;;		_BeneathTable
  4570 ;;		_BeneathFloor
  4571 ;;		_CheckThrottle
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           	psect	text28
  4576  000F74                     __ptext28:
  4577                           	opt stack 0
  4578  000F74                     _ActThrottle:
  4579                           	opt stack 25
  4580                           
  4581                           ;incstack = 0
  4582                           ;ActThrottle@change stored from wreg
  4583  000F74  0100               	movlb	0	; () banked
  4584  000F76  6FDB               	movwf	ActThrottle@change& (0+255),b
  4585                           
  4586                           ;actors.c: 90: a_actors[0].thro += change;
  4587  000F78  0100               	movlb	0	; () banked
  4588  000F7A  51DB               	movf	ActThrottle@change& (0+255),w,b
  4589  000F7C  0100               	movlb	0	; () banked
  4590  000F7E  27D4               	addwf	(_a_actors+4)& (0+255),f,b
  4591  000F80  0E00               	movlw	0
  4592  000F82  23D5               	addwfc	(_a_actors+5)& (0+255),f,b
  4593                           
  4594                           ; BSR set to: 0
  4595  000F84  0012               	return		;funcret
  4596  000F86                     __end_of_ActThrottle:
  4597                           	opt stack 0
  4598                           tblptru	equ	0xFF8
  4599                           tblptrh	equ	0xFF7
  4600                           tblptrl	equ	0xFF6
  4601                           tablat	equ	0xFF5
  4602                           prodh	equ	0xFF4
  4603                           prodl	equ	0xFF3
  4604                           intcon	equ	0xFF2
  4605                           postinc0	equ	0xFEE
  4606                           wreg	equ	0xFE8
  4607                           indf1	equ	0xFE7
  4608                           postdec1	equ	0xFE5
  4609                           fsr1h	equ	0xFE2
  4610                           fsr1l	equ	0xFE1
  4611                           indf2	equ	0xFDF
  4612                           postinc2	equ	0xFDE
  4613                           postdec2	equ	0xFDD
  4614                           fsr2h	equ	0xFDA
  4615                           fsr2l	equ	0xFD9
  4616                           status	equ	0xFD8
  4617                           
  4618 ;; *************** function _Isr *****************
  4619 ;; Defined at:
  4620 ;;		line 30 in file "interrupt.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;		None
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;		None
  4625 ;; Return value:  Size  Location     Type
  4626 ;;		None               void
  4627 ;; Registers used:
  4628 ;;		wreg, status,2, status,0, cstack
  4629 ;; Tracked objects:
  4630 ;;		On entry : 0/0
  4631 ;;		On exit  : 0/0
  4632 ;;		Unchanged: 0/0
  4633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4636 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4637 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4638 ;;Total ram usage:       14 bytes
  4639 ;; Hardware stack levels used:    1
  4640 ;; Hardware stack levels required when called:    2
  4641 ;; This function calls:
  4642 ;;		_ModeCheck
  4643 ;;		_SignalOut
  4644 ;; This function is called by:
  4645 ;;		Interrupt level 2
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           	psect	intcode
  4650  000008                     __pintcode:
  4651                           	opt stack 0
  4652  000008                     _Isr:
  4653                           	opt stack 25
  4654                           
  4655                           ; BSR set to: 0
  4656                           ;incstack = 0
  4657  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4658  00000A  CFFA F031          	movff	pclath,??_Isr
  4659  00000E  CFFB F032          	movff	pclatu,??_Isr+1
  4660  000012  CFE9 F033          	movff	fsr0l,??_Isr+2
  4661  000016  CFEA F034          	movff	fsr0h,??_Isr+3
  4662  00001A  CFE1 F035          	movff	fsr1l,??_Isr+4
  4663  00001E  CFE2 F036          	movff	fsr1h,??_Isr+5
  4664  000022  CFD9 F037          	movff	fsr2l,??_Isr+6
  4665  000026  CFDA F038          	movff	fsr2h,??_Isr+7
  4666  00002A  CFF3 F039          	movff	prodl,??_Isr+8
  4667  00002E  CFF4 F03A          	movff	prodh,??_Isr+9
  4668  000032  CFF6 F03B          	movff	tblptrl,??_Isr+10
  4669  000036  CFF7 F03C          	movff	tblptrh,??_Isr+11
  4670  00003A  CFF8 F03D          	movff	tblptru,??_Isr+12
  4671  00003E  CFF5 F03E          	movff	tablat,??_Isr+13
  4672                           
  4673                           ;interrupt.c: 31: if(CCP1IF == 1) {
  4674  000042  A49E               	btfss	3998,2,c	;volatile
  4675  000044  D005               	goto	i2l2834
  4676                           
  4677                           ;interrupt.c: 32: CCP1IF = 0;
  4678  000046  949E               	bcf	3998,2,c	;volatile
  4679                           
  4680                           ;interrupt.c: 33: T1CONbits.TMR1ON = 0;
  4681  000048  90CD               	bcf	4045,0,c	;volatile
  4682                           
  4683                           ;interrupt.c: 34: SignalOut();
  4684  00004A  EC99  F005         	call	_SignalOut	;wreg free
  4685                           
  4686                           ;interrupt.c: 35: __nop();
  4687  00004E  F000               	nop	
  4688  000050                     i2l2834:
  4689                           
  4690                           ;interrupt.c: 36: }
  4691                           ;interrupt.c: 37: if(TMR3GIF == 1) {
  4692  000050  A2A4               	btfss	4004,1,c	;volatile
  4693  000052  D006               	goto	i2l484
  4694                           
  4695                           ;interrupt.c: 38: TMR3GIF = 0;
  4696  000054  92A4               	bcf	4004,1,c	;volatile
  4697                           
  4698                           ;interrupt.c: 39: ModeCheck();
  4699  000056  ECDE  F006         	call	_ModeCheck	;wreg free
  4700                           
  4701                           ;interrupt.c: 40: SignalOut();
  4702  00005A  EC99  F005         	call	_SignalOut	;wreg free
  4703                           
  4704                           ;interrupt.c: 44: pulsecounter++;
  4705  00005E  2A2C               	incf	_pulsecounter,f,c
  4706  000060                     i2l484:
  4707  000060  C03E  FFF5         	movff	??_Isr+13,tablat
  4708  000064  C03D  FFF8         	movff	??_Isr+12,tblptru
  4709  000068  C03C  FFF7         	movff	??_Isr+11,tblptrh
  4710  00006C  C03B  FFF6         	movff	??_Isr+10,tblptrl
  4711  000070  C03A  FFF4         	movff	??_Isr+9,prodh
  4712  000074  C039  FFF3         	movff	??_Isr+8,prodl
  4713  000078  C038  FFDA         	movff	??_Isr+7,fsr2h
  4714  00007C  C037  FFD9         	movff	??_Isr+6,fsr2l
  4715  000080  C036  FFE2         	movff	??_Isr+5,fsr1h
  4716  000084  C035  FFE1         	movff	??_Isr+4,fsr1l
  4717  000088  C034  FFEA         	movff	??_Isr+3,fsr0h
  4718  00008C  C033  FFE9         	movff	??_Isr+2,fsr0l
  4719  000090  C032  FFFB         	movff	??_Isr+1,pclatu
  4720  000094  C031  FFFA         	movff	??_Isr,pclath
  4721  000098  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4722  00009A  0011               	retfie		f
  4723  00009C                     __end_of_Isr:
  4724                           	opt stack 0
  4725                           pclatu	equ	0xFFB
  4726                           pclath	equ	0xFFA
  4727                           tblptru	equ	0xFF8
  4728                           tblptrh	equ	0xFF7
  4729                           tblptrl	equ	0xFF6
  4730                           tablat	equ	0xFF5
  4731                           prodh	equ	0xFF4
  4732                           prodl	equ	0xFF3
  4733                           intcon	equ	0xFF2
  4734                           postinc0	equ	0xFEE
  4735                           fsr0h	equ	0xFEA
  4736                           fsr0l	equ	0xFE9
  4737                           wreg	equ	0xFE8
  4738                           indf1	equ	0xFE7
  4739                           postdec1	equ	0xFE5
  4740                           fsr1h	equ	0xFE2
  4741                           fsr1l	equ	0xFE1
  4742                           indf2	equ	0xFDF
  4743                           postinc2	equ	0xFDE
  4744                           postdec2	equ	0xFDD
  4745                           fsr2h	equ	0xFDA
  4746                           fsr2l	equ	0xFD9
  4747                           status	equ	0xFD8
  4748                           
  4749 ;; *************** function _SignalOut *****************
  4750 ;; Defined at:
  4751 ;;		line 32 in file "actors.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;		None
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;		None
  4756 ;; Return value:  Size  Location     Type
  4757 ;;		None               void
  4758 ;; Registers used:
  4759 ;;		wreg, status,2, status,0, cstack
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4769 ;;Total ram usage:        0 bytes
  4770 ;; Hardware stack levels used:    1
  4771 ;; Hardware stack levels required when called:    1
  4772 ;; This function calls:
  4773 ;;		_Delay
  4774 ;; This function is called by:
  4775 ;;		_Isr
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text30
  4780  000B32                     __ptext30:
  4781                           	opt stack 0
  4782  000B32                     _SignalOut:
  4783                           	opt stack 25
  4784                           
  4785                           ;actors.c: 33: switch(pin_out) {
  4786                           
  4787                           ;incstack = 0
  4788  000B32  D02F               	goto	i2l2534
  4789  000B34                     i2l77:
  4790                           
  4791                           ;actors.c: 35: PORTAbits.RA0 = 1;
  4792  000B34  8080               	bsf	3968,0,c	;volatile
  4793                           
  4794                           ;actors.c: 36: Delay(a_actors[0].aile);
  4795  000B36  C0D0  F02D         	movff	_a_actors,Delay@del
  4796  000B3A  C0D1  F02E         	movff	_a_actors+1,Delay@del+1
  4797  000B3E  EC12  F007         	call	_Delay	;wreg free
  4798                           
  4799                           ;actors.c: 37: pin_out = 'E';
  4800  000B42  0E45               	movlw	69
  4801  000B44  6E4D               	movwf	_pin_out,c
  4802                           
  4803                           ;actors.c: 38: break;
  4804  000B46  0012               	return	
  4805  000B48                     i2l79:
  4806                           
  4807                           ;actors.c: 40: PORTAbits.RA0 = 0;
  4808  000B48  9080               	bcf	3968,0,c	;volatile
  4809                           
  4810                           ;actors.c: 41: PORTAbits.RA1 = 1;
  4811  000B4A  8280               	bsf	3968,1,c	;volatile
  4812                           
  4813                           ;actors.c: 42: Delay(a_actors[0].elev);
  4814  000B4C  C0D2  F02D         	movff	_a_actors+2,Delay@del
  4815  000B50  C0D3  F02E         	movff	_a_actors+3,Delay@del+1
  4816  000B54  EC12  F007         	call	_Delay	;wreg free
  4817                           
  4818                           ;actors.c: 43: pin_out = 'T';
  4819  000B58  0E54               	movlw	84
  4820  000B5A  6E4D               	movwf	_pin_out,c
  4821                           
  4822                           ;actors.c: 44: break;
  4823  000B5C  0012               	return	
  4824  000B5E                     i2l80:
  4825                           
  4826                           ;actors.c: 46: PORTAbits.RA1 = 0;
  4827  000B5E  9280               	bcf	3968,1,c	;volatile
  4828                           
  4829                           ;actors.c: 47: PORTAbits.RA3 = 1;
  4830  000B60  8680               	bsf	3968,3,c	;volatile
  4831                           
  4832                           ;actors.c: 48: Delay(a_actors[0].thro);
  4833  000B62  C0D4  F02D         	movff	_a_actors+4,Delay@del
  4834  000B66  C0D5  F02E         	movff	_a_actors+5,Delay@del+1
  4835  000B6A  EC12  F007         	call	_Delay	;wreg free
  4836                           
  4837                           ;actors.c: 49: pin_out = 'R';
  4838  000B6E  0E52               	movlw	82
  4839  000B70  6E4D               	movwf	_pin_out,c
  4840                           
  4841                           ;actors.c: 50: break;
  4842  000B72  0012               	return	
  4843  000B74                     i2l81:
  4844                           
  4845                           ;actors.c: 52: PORTAbits.RA2 = 0;
  4846  000B74  9480               	bcf	3968,2,c	;volatile
  4847                           
  4848                           ;actors.c: 53: PORTAbits.RA2 = 1;
  4849  000B76  8480               	bsf	3968,2,c	;volatile
  4850                           
  4851                           ;actors.c: 54: Delay(a_actors[0].rudd);
  4852  000B78  C0D6  F02D         	movff	_a_actors+6,Delay@del
  4853  000B7C  C0D7  F02E         	movff	_a_actors+7,Delay@del+1
  4854  000B80  EC12  F007         	call	_Delay	;wreg free
  4855                           
  4856                           ;actors.c: 55: pin_out = 0;
  4857  000B84  0E00               	movlw	0
  4858  000B86  6E4D               	movwf	_pin_out,c
  4859                           
  4860                           ;actors.c: 56: break;
  4861  000B88  0012               	return	
  4862  000B8A                     i2l82:
  4863                           
  4864                           ;actors.c: 58: PORTAbits.RA2 = 0;
  4865  000B8A  9480               	bcf	3968,2,c	;volatile
  4866                           
  4867                           ;actors.c: 59: pin_out = 'A';
  4868  000B8C  0E41               	movlw	65
  4869  000B8E  6E4D               	movwf	_pin_out,c
  4870                           
  4871                           ;actors.c: 61: }
  4872                           ;actors.c: 62: }
  4873                           
  4874                           ;actors.c: 60: break;
  4875  000B90  0012               	return	
  4876  000B92                     i2l2534:
  4877  000B92  504D               	movf	_pin_out,w,c
  4878                           
  4879                           ; Switch size 1, requested type "space"
  4880                           ; Number of cases is 5, Range of values is 0 to 84
  4881                           ; switch strategies available:
  4882                           ; Name         Instructions Cycles
  4883                           ; simple_byte           16     9 (average)
  4884                           ;	Chosen strategy is simple_byte
  4885  000B94  0A00               	xorlw	0	; case 0
  4886  000B96  B4D8               	btfsc	status,2,c
  4887  000B98  D7F8               	goto	i2l82
  4888  000B9A  0A41               	xorlw	65	; case 65
  4889  000B9C  B4D8               	btfsc	status,2,c
  4890  000B9E  D7CA               	goto	i2l77
  4891  000BA0  0A04               	xorlw	4	; case 69
  4892  000BA2  B4D8               	btfsc	status,2,c
  4893  000BA4  D7D1               	goto	i2l79
  4894  000BA6  0A17               	xorlw	23	; case 82
  4895  000BA8  B4D8               	btfsc	status,2,c
  4896  000BAA  D7E4               	goto	i2l81
  4897  000BAC  0A06               	xorlw	6	; case 84
  4898  000BAE  A4D8               	btfss	status,2,c
  4899  000BB0  0012               	return	
  4900  000BB2  D7D5               	goto	i2l80
  4901  000BB4                     __end_of_SignalOut:
  4902                           	opt stack 0
  4903                           pclatu	equ	0xFFB
  4904                           pclath	equ	0xFFA
  4905                           tblptru	equ	0xFF8
  4906                           tblptrh	equ	0xFF7
  4907                           tblptrl	equ	0xFF6
  4908                           tablat	equ	0xFF5
  4909                           prodh	equ	0xFF4
  4910                           prodl	equ	0xFF3
  4911                           intcon	equ	0xFF2
  4912                           postinc0	equ	0xFEE
  4913                           fsr0h	equ	0xFEA
  4914                           fsr0l	equ	0xFE9
  4915                           wreg	equ	0xFE8
  4916                           indf1	equ	0xFE7
  4917                           postdec1	equ	0xFE5
  4918                           fsr1h	equ	0xFE2
  4919                           fsr1l	equ	0xFE1
  4920                           indf2	equ	0xFDF
  4921                           postinc2	equ	0xFDE
  4922                           postdec2	equ	0xFDD
  4923                           fsr2h	equ	0xFDA
  4924                           fsr2l	equ	0xFD9
  4925                           status	equ	0xFD8
  4926                           
  4927 ;; *************** function _Delay *****************
  4928 ;; Defined at:
  4929 ;;		line 20 in file "actors.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;  del             2    0[COMRAM] unsigned int 
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;		None
  4934 ;; Return value:  Size  Location     Type
  4935 ;;		None               void
  4936 ;; Registers used:
  4937 ;;		wreg, status,2, status,0
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4943 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4946 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4947 ;;Total ram usage:        2 bytes
  4948 ;; Hardware stack levels used:    1
  4949 ;; This function calls:
  4950 ;;		Nothing
  4951 ;; This function is called by:
  4952 ;;		_SignalOut
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           	psect	text31
  4957  000E24                     __ptext31:
  4958                           	opt stack 0
  4959  000E24                     _Delay:
  4960                           	opt stack 25
  4961                           
  4962                           ;actors.c: 21: del <<= 1;
  4963                           
  4964                           ;incstack = 0
  4965  000E24  90D8               	bcf	status,0,c
  4966  000E26  362D               	rlcf	Delay@del,f,c
  4967  000E28  362E               	rlcf	Delay@del+1,f,c
  4968                           
  4969                           ;actors.c: 22: del = 1000 + del;
  4970  000E2A  0EE8               	movlw	232
  4971  000E2C  242D               	addwf	Delay@del,w,c
  4972  000E2E  6E2D               	movwf	Delay@del,c
  4973  000E30  0E03               	movlw	3
  4974  000E32  202E               	addwfc	Delay@del+1,w,c
  4975  000E34  6E2E               	movwf	Delay@del+1,c
  4976                           
  4977                           ;actors.c: 23: TMR1L = 0;
  4978  000E36  0E00               	movlw	0
  4979  000E38  6ECE               	movwf	4046,c	;volatile
  4980                           
  4981                           ;actors.c: 24: TMR1H = 0;
  4982  000E3A  0E00               	movlw	0
  4983  000E3C  6ECF               	movwf	4047,c	;volatile
  4984                           
  4985                           ;actors.c: 25: CCPR1L = del;
  4986  000E3E  C02D  FFBE         	movff	Delay@del,4030	;volatile
  4987                           
  4988                           ;actors.c: 26: del >>= 8;
  4989  000E42  502E               	movf	Delay@del+1,w,c
  4990  000E44  6E2D               	movwf	Delay@del,c
  4991  000E46  6A2E               	clrf	Delay@del+1,c
  4992                           
  4993                           ;actors.c: 27: CCPR1H = del;
  4994  000E48  C02D  FFBF         	movff	Delay@del,4031	;volatile
  4995                           
  4996                           ;actors.c: 28: T1CONbits.TMR1ON = 1;
  4997  000E4C  80CD               	bsf	4045,0,c	;volatile
  4998  000E4E  0012               	return		;funcret
  4999  000E50                     __end_of_Delay:
  5000                           	opt stack 0
  5001                           pclatu	equ	0xFFB
  5002                           pclath	equ	0xFFA
  5003                           tblptru	equ	0xFF8
  5004                           tblptrh	equ	0xFF7
  5005                           tblptrl	equ	0xFF6
  5006                           tablat	equ	0xFF5
  5007                           prodh	equ	0xFF4
  5008                           prodl	equ	0xFF3
  5009                           intcon	equ	0xFF2
  5010                           postinc0	equ	0xFEE
  5011                           fsr0h	equ	0xFEA
  5012                           fsr0l	equ	0xFE9
  5013                           wreg	equ	0xFE8
  5014                           indf1	equ	0xFE7
  5015                           postdec1	equ	0xFE5
  5016                           fsr1h	equ	0xFE2
  5017                           fsr1l	equ	0xFE1
  5018                           indf2	equ	0xFDF
  5019                           postinc2	equ	0xFDE
  5020                           postdec2	equ	0xFDD
  5021                           fsr2h	equ	0xFDA
  5022                           fsr2l	equ	0xFD9
  5023                           status	equ	0xFD8
  5024                           
  5025 ;; *************** function _ModeCheck *****************
  5026 ;; Defined at:
  5027 ;;		line 30 in file "gear.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;		None
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;		None
  5032 ;; Return value:  Size  Location     Type
  5033 ;;		None               void
  5034 ;; Registers used:
  5035 ;;		wreg, status,2, status,0, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5045 ;;Total ram usage:        0 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; Hardware stack levels required when called:    1
  5048 ;; This function calls:
  5049 ;;		_CalcTime
  5050 ;; This function is called by:
  5051 ;;		_Isr
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           	psect	text32
  5056  000DBC                     __ptext32:
  5057                           	opt stack 0
  5058  000DBC                     _ModeCheck:
  5059                           	opt stack 25
  5060                           
  5061                           ;gear.c: 31: __nop();
  5062                           
  5063                           ;incstack = 0
  5064  000DBC  F000               	nop	
  5065                           
  5066                           ;gear.c: 32: time_gear = CalcTime();
  5067  000DBE  EC67  F007         	call	_CalcTime	;wreg free
  5068  000DC2  C02D  F026         	movff	?_CalcTime,_time_gear
  5069  000DC6  C02E  F027         	movff	?_CalcTime+1,_time_gear+1
  5070                           
  5071                           ;gear.c: 33: if(time_gear < 6800){
  5072  000DCA  0E90               	movlw	144
  5073  000DCC  5C26               	subwf	_time_gear,w,c
  5074  000DCE  0E1A               	movlw	26
  5075  000DD0  5827               	subwfb	_time_gear+1,w,c
  5076  000DD2  B0D8               	btfsc	status,0,c
  5077  000DD4  D004               	goto	i2l2544
  5078                           
  5079                           ;gear.c: 35: PORTBbits.RB2 = 0;
  5080  000DD6  9481               	bcf	3969,2,c	;volatile
  5081                           
  5082                           ;gear.c: 36: PORTAbits.RA5 = 1;
  5083  000DD8  8A80               	bsf	3968,5,c	;volatile
  5084                           
  5085                           ;gear.c: 37: set_ret = 0;
  5086  000DDA  984E               	bcf	_set_ret/(0+8),_set_ret& (0+7),c
  5087                           
  5088                           ;gear.c: 38: }else if(time_gear >= 6800) {
  5089  000DDC  D009               	goto	i2l228
  5090  000DDE                     i2l2544:
  5091  000DDE  0E90               	movlw	144
  5092  000DE0  5C26               	subwf	_time_gear,w,c
  5093  000DE2  0E1A               	movlw	26
  5094  000DE4  5827               	subwfb	_time_gear+1,w,c
  5095  000DE6  A0D8               	btfss	status,0,c
  5096  000DE8  D003               	goto	i2l228
  5097                           
  5098                           ;gear.c: 39: PORTBbits.RB2 = 1;
  5099  000DEA  8481               	bsf	3969,2,c	;volatile
  5100                           
  5101                           ;gear.c: 40: PORTAbits.RA5 = 0;
  5102  000DEC  9A80               	bcf	3968,5,c	;volatile
  5103                           
  5104                           ;gear.c: 41: set_ret = 1;
  5105  000DEE  884E               	bsf	_set_ret/(0+8),_set_ret& (0+7),c
  5106  000DF0                     i2l228:
  5107                           
  5108                           ;gear.c: 42: }
  5109                           ;gear.c: 43: __nop();
  5110  000DF0  F000               	nop	
  5111                           
  5112                           ;gear.c: 44: return set_ret;
  5113                           ;	Return value of _ModeCheck is never used
  5114  000DF2  0012               	return		;funcret
  5115  000DF4                     __end_of_ModeCheck:
  5116                           	opt stack 0
  5117                           pclatu	equ	0xFFB
  5118                           pclath	equ	0xFFA
  5119                           tblptru	equ	0xFF8
  5120                           tblptrh	equ	0xFF7
  5121                           tblptrl	equ	0xFF6
  5122                           tablat	equ	0xFF5
  5123                           prodh	equ	0xFF4
  5124                           prodl	equ	0xFF3
  5125                           intcon	equ	0xFF2
  5126                           postinc0	equ	0xFEE
  5127                           fsr0h	equ	0xFEA
  5128                           fsr0l	equ	0xFE9
  5129                           wreg	equ	0xFE8
  5130                           indf1	equ	0xFE7
  5131                           postdec1	equ	0xFE5
  5132                           fsr1h	equ	0xFE2
  5133                           fsr1l	equ	0xFE1
  5134                           indf2	equ	0xFDF
  5135                           postinc2	equ	0xFDE
  5136                           postdec2	equ	0xFDD
  5137                           fsr2h	equ	0xFDA
  5138                           fsr2l	equ	0xFD9
  5139                           status	equ	0xFD8
  5140                           
  5141 ;; *************** function _CalcTime *****************
  5142 ;; Defined at:
  5143 ;;		line 16 in file "gear.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;		None
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;  time_gear_me    2    2[COMRAM] unsigned int 
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  2    0[COMRAM] unsigned int 
  5150 ;; Registers used:
  5151 ;;		wreg, status,2, status,0
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5158 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5160 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;Total ram usage:        4 bytes
  5162 ;; Hardware stack levels used:    1
  5163 ;; This function calls:
  5164 ;;		Nothing
  5165 ;; This function is called by:
  5166 ;;		_ModeCheck
  5167 ;; This function uses a non-reentrant model
  5168 ;;
  5169                           
  5170                           	psect	text33
  5171  000ECE                     __ptext33:
  5172                           	opt stack 0
  5173  000ECE                     _CalcTime:
  5174                           	opt stack 25
  5175                           
  5176                           ;gear.c: 17: unsigned int time_gear_meas = TMR3H;
  5177                           
  5178                           ;incstack = 0
  5179  000ECE  CFB3 F02F          	movff	4019,CalcTime@time_gear_meas	;volatile
  5180  000ED2  6A30               	clrf	CalcTime@time_gear_meas+1,c
  5181                           
  5182                           ;gear.c: 18: time_gear_meas <<= 8;
  5183  000ED4  502F               	movf	CalcTime@time_gear_meas,w,c
  5184  000ED6  6E30               	movwf	CalcTime@time_gear_meas+1,c
  5185  000ED8  6A2F               	clrf	CalcTime@time_gear_meas,c
  5186                           
  5187                           ;gear.c: 19: time_gear_meas |= TMR3L;
  5188  000EDA  50B2               	movf	4018,w,c	;volatile
  5189  000EDC  122F               	iorwf	CalcTime@time_gear_meas,f,c
  5190                           
  5191                           ;gear.c: 20: TMR3H = 0;
  5192  000EDE  0E00               	movlw	0
  5193  000EE0  6EB3               	movwf	4019,c	;volatile
  5194                           
  5195                           ;gear.c: 21: TMR3L = 0;
  5196  000EE2  0E00               	movlw	0
  5197  000EE4  6EB2               	movwf	4018,c	;volatile
  5198                           
  5199                           ;gear.c: 22: __nop();
  5200  000EE6  F000               	nop	
  5201                           
  5202                           ;gear.c: 23: return time_gear_meas;
  5203  000EE8  C02F  F02D         	movff	CalcTime@time_gear_meas,?_CalcTime
  5204  000EEC  C030  F02E         	movff	CalcTime@time_gear_meas+1,?_CalcTime+1
  5205  000EF0  0012               	return	
  5206  000EF2                     __end_of_CalcTime:
  5207                           	opt stack 0
  5208  0000                     pclatu	equ	0xFFB
  5209                           pclath	equ	0xFFA
  5210                           tblptru	equ	0xFF8
  5211                           tblptrh	equ	0xFF7
  5212                           tblptrl	equ	0xFF6
  5213                           tablat	equ	0xFF5
  5214                           prodh	equ	0xFF4
  5215                           prodl	equ	0xFF3
  5216                           intcon	equ	0xFF2
  5217                           postinc0	equ	0xFEE
  5218                           fsr0h	equ	0xFEA
  5219                           fsr0l	equ	0xFE9
  5220                           wreg	equ	0xFE8
  5221                           indf1	equ	0xFE7
  5222                           postdec1	equ	0xFE5
  5223                           fsr1h	equ	0xFE2
  5224                           fsr1l	equ	0xFE1
  5225                           indf2	equ	0xFDF
  5226                           postinc2	equ	0xFDE
  5227                           postdec2	equ	0xFDD
  5228                           fsr2h	equ	0xFDA
  5229                           fsr2l	equ	0xFD9
  5230                           status	equ	0xFD8
  5231                           pclatu	equ	0xFFB
  5232                           pclath	equ	0xFFA
  5233                           tblptru	equ	0xFF8
  5234                           tblptrh	equ	0xFF7
  5235                           tblptrl	equ	0xFF6
  5236                           tablat	equ	0xFF5
  5237                           prodh	equ	0xFF4
  5238                           prodl	equ	0xFF3
  5239                           intcon	equ	0xFF2
  5240                           postinc0	equ	0xFEE
  5241                           fsr0h	equ	0xFEA
  5242                           fsr0l	equ	0xFE9
  5243                           wreg	equ	0xFE8
  5244                           indf1	equ	0xFE7
  5245                           postdec1	equ	0xFE5
  5246                           fsr1h	equ	0xFE2
  5247                           fsr1l	equ	0xFE1
  5248                           indf2	equ	0xFDF
  5249                           postinc2	equ	0xFDE
  5250                           postdec2	equ	0xFDD
  5251                           fsr2h	equ	0xFDA
  5252                           fsr2l	equ	0xFD9
  5253                           status	equ	0xFD8
  5254                           
  5255                           	psect	rparam
  5256  0000                     pclatu	equ	0xFFB
  5257                           pclath	equ	0xFFA
  5258                           tblptru	equ	0xFF8
  5259                           tblptrh	equ	0xFF7
  5260                           tblptrl	equ	0xFF6
  5261                           tablat	equ	0xFF5
  5262                           prodh	equ	0xFF4
  5263                           prodl	equ	0xFF3
  5264                           intcon	equ	0xFF2
  5265                           postinc0	equ	0xFEE
  5266                           fsr0h	equ	0xFEA
  5267                           fsr0l	equ	0xFE9
  5268                           wreg	equ	0xFE8
  5269                           indf1	equ	0xFE7
  5270                           postdec1	equ	0xFE5
  5271                           fsr1h	equ	0xFE2
  5272                           fsr1l	equ	0xFE1
  5273                           indf2	equ	0xFDF
  5274                           postinc2	equ	0xFDE
  5275                           postdec2	equ	0xFDD
  5276                           fsr2h	equ	0xFDA
  5277                           fsr2l	equ	0xFD9
  5278                           status	equ	0xFD8
  5279                           
  5280                           	psect	temp
  5281  00004F                     btemp:
  5282                           	opt stack 0
  5283  00004F                     	ds	1
  5284  0000                     int$flags	set	btemp
  5285                           pclatu	equ	0xFFB
  5286                           pclath	equ	0xFFA
  5287                           tblptru	equ	0xFF8
  5288                           tblptrh	equ	0xFF7
  5289                           tblptrl	equ	0xFF6
  5290                           tablat	equ	0xFF5
  5291                           prodh	equ	0xFF4
  5292                           prodl	equ	0xFF3
  5293                           intcon	equ	0xFF2
  5294                           postinc0	equ	0xFEE
  5295                           fsr0h	equ	0xFEA
  5296                           fsr0l	equ	0xFE9
  5297                           wreg	equ	0xFE8
  5298                           indf1	equ	0xFE7
  5299                           postdec1	equ	0xFE5
  5300                           fsr1h	equ	0xFE2
  5301                           fsr1l	equ	0xFE1
  5302                           indf2	equ	0xFDF
  5303                           postinc2	equ	0xFDE
  5304                           postdec2	equ	0xFDD
  5305                           fsr2h	equ	0xFDA
  5306                           fsr2l	equ	0xFD9
  5307                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        15
    BSS         209
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     18      78
    BANK0           160     14     137
    BANK1           256      0      42
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Isr in COMRAM

    _SignalOut->_Delay
    _ModeCheck->_CalcTime

Critical Paths under _main in BANK0

    _main->_CheckThrottle
    _main->_ReadObject
    _ReadObject->_ExchangeSpiWord
    _CompareFrames->_CheckRudderAhead
    _CompareFrames->_CheckRudderBack
    _CheckRudderBack->_ActRudder
    _CheckRudderAhead->_ActRudder
    _CheckElevator->_ActElevator
    _CheckAileron->_ActAileron
    _CheckThrottle->_ActThrottle
    _BeneathTable->_ActThrottle
    _BeneathFloor->_ActThrottle

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2037
                      _CheckThrottle
                      _CompareFrames
                               _Init
                         _ReadHeight
                         _ReadObject
                 _StartHeightMeasure
                         _StoreAsOld
 ---------------------------------------------------------------------------------
 (1) _StoreAsOld                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _StartHeightMeasure                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadObject                                          10     7      3    1303
                                              5 BANK0      9     6      3
                    _ExchangeSpiWord
 ---------------------------------------------------------------------------------
 (2) _ExchangeSpiWord                                      5     3      2     591
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ReadHeight                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                         _InitActors
                          _InitAnsel
                           _InitComp
                      _InitInterrupt
                            _InitOsc
                           _InitPort
                            _InitSpi
                          _InitTimer
                           _InitTris
                           _InitUart
 ---------------------------------------------------------------------------------
 (2) _InitUart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitSpi                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitOsc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitComp                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitActors                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CompareFrames                                        2     2      0     124
                                              2 BANK0      2     2      0
                       _CheckAileron
                      _CheckElevator
                   _CheckRudderAhead
                    _CheckRudderBack
 ---------------------------------------------------------------------------------
 (2) _CheckRudderBack                                      1     1      0      31
                                              1 BANK0      1     1      0
                          _ActRudder
 ---------------------------------------------------------------------------------
 (2) _CheckRudderAhead                                     1     1      0      31
                                              1 BANK0      1     1      0
                          _ActRudder
 ---------------------------------------------------------------------------------
 (3) _ActRudder                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CheckElevator                                        0     0      0      31
                        _ActElevator
 ---------------------------------------------------------------------------------
 (3) _ActElevator                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CheckAileron                                         0     0      0      31
                         _ActAileron
 ---------------------------------------------------------------------------------
 (3) _ActAileron                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CheckThrottle                                       13    13      0     610
                                              1 BANK0     13    13      0
                        _ActThrottle
                       _BeneathFloor
                       _BeneathTable
 ---------------------------------------------------------------------------------
 (2) _BeneathTable                                         0     0      0      31
                        _ActThrottle
 ---------------------------------------------------------------------------------
 (2) _BeneathFloor                                         0     0      0      31
                        _ActThrottle
 ---------------------------------------------------------------------------------
 (3) _ActThrottle                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Isr                                                 14    14      0     266
                                              4 COMRAM    14    14      0
                          _ModeCheck
                          _SignalOut
 ---------------------------------------------------------------------------------
 (5) _SignalOut                                            0     0      0     241
                              _Delay
 ---------------------------------------------------------------------------------
 (6) _Delay                                                2     0      2     241
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ModeCheck                                            0     0      0      25
                           _CalcTime
 ---------------------------------------------------------------------------------
 (6) _CalcTime                                             4     2      2      25
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CheckThrottle
     _ActThrottle
     _BeneathFloor
       _ActThrottle
     _BeneathTable
       _ActThrottle
   _CompareFrames
     _CheckAileron
       _ActAileron
     _CheckElevator
       _ActElevator
     _CheckRudderAhead
       _ActRudder
     _CheckRudderBack
       _ActRudder
   _Init
     _InitActors
     _InitAnsel
     _InitComp
     _InitInterrupt
     _InitOsc
     _InitPort
     _InitSpi
     _InitTimer
     _InitTris
     _InitUart
   _ReadHeight
   _ReadObject
     _ExchangeSpiWord
   _StartHeightMeasure
   _StoreAsOld

 _Isr (ROOT)
   _ModeCheck
     _CalcTime
   _SignalOut
     _Delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      2A       7       16.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      E      89       5       85.6%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     12      4E       1       83.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     101      12        0.0%
DATA                 0      0     101       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Feb 01 15:52:35 2016

                 _ActAileron 0F62              _highpassallowed 0272                            _w 002A  
                         _lw 0024       ReadObject@des_obj_type 002D                 __CFG_CP0$OFF 000000  
                _ActElevator 0F50                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                          l631 051A                          l634 0506  
                        l626 040A                          l559 0DF8                          l772 0BB4  
                        l860 0CB0                          l857 0C96                          l946 0B30  
                        _GIE 007F97                 __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000  
                        _Isr 0008            ActThrottle@change 00DB                          prod 000FF3  
                        wreg 000FE8            ReadObject@des_obj 00E0                 __CFG_LVP$OFF 000000  
          ReadObject@max_obj 00E2                         ?_Isr 002D                         l1006 00D6  
                       l1031 01FC                         l1023 01F4                         l1007 00D2  
                       l1016 018A                         l1033 02A8                         l1017 0186  
                       l1009 00D8                         l1019 018C                         l3102 0936  
                       l3110 095C                         l3120 0998                         l3104 0944  
                       l3112 0964                         l3210 0D5C                         l3122 09A0  
                       l3106 094C                         l3130 082A                         l3220 0D8C  
                       l3212 0D64                         l3204 0D3C                         l3116 0980  
                       l3124 09A8                         l3108 0954                         l3140 087A  
                       l3132 0832                         l3070 0A18                         l3118 0990  
                       l3142 0882                         l3038 0C92                         l3310 0714  
               _pulsecounter 002C                         l3400 021A                         l3080 0A52  
                       l3064 09F8                         l3072 0A20                         l3160 08E6  
                       l3144 088A                         l3128 081A                         l3312 0718  
                       l3226 0DAC                         l3082 0A5A                         l3066 0A08  
                       l3074 0A28                         l3058 09D0                         l3138 086A  
                       l3146 0892                         l3170 075E                         l3228 0DB4  
                       l3420 03E0                         l3412 03A0                         l3084 0A62  
                       l3068 0A10                         l3156 08D6                         l3148 089A  
                       l3180 07A6                         l3164 0736                         l3260 0470  
                       l3078 0A44                         l3086 0A6A                         l3158 08DE  
                       l3174 0786                         l3182 07AE                         l3166 0746  
                       l3270 04BA                         l3416 03CA                         l3408 02D4  
                       l3360 00E8                         l3096 090E                         l3192 07F2  
                       l3176 0796                         l3184 07B6                         l3168 074E  
                       l3328 0B2A                         l3256 0446                         l3194 07FA  
                       l3178 079E                         l3196 0802                         l3390 01E4  
                       l3366 013C                         l3358 00E2                         l3278 04F6  
                       l3384 01C4                         l3392 01EC                         l3376 0196  
                       l3386 01D4                         l3378 019C                         l3396 01FE  
                       l3388 01DC                         u2230 09BC                         u2320 08FA  
                       u2250 09DC                         u3027 0C84                         u2340 091A  
                       u3037 03E8                         u2430 0842                         u2930 01A8  
                       _PEIE 007F96                         u2870 00F6                         i2l80 0B5E  
                       i2l81 0B74                         i2l82 0B8A                         i2l77 0B34  
                       i2l79 0B48              _ExchangeSpiWord 0C6E                         _Init 0E7A  
                       _cm50 0049                         _cm80 004B                  _ActThrottle 0F74  
                       _main 0DF4                         fsr0h 000FEA                         fsr1h 000FE2  
                       fsr0l 000FE9                         fsr2h 000FDA                         indf1 000FE7  
                       fsr1l 000FE1                         indf2 000FDF                         fsr2l 000FD9  
                       btemp 004F                __CFG_BORV$190 000000                         pclat 000FFA  
                       prodh 000FF4                         prodl 000FF3           ReadObject@checksum 00E5  
                       start 009C            ??_CheckRudderBack 00DC                __CFG_IESO$OFF 000000  
               ___param_bank 000010                _InitInterrupt 0FA6              __end_of_InitOsc 0FC8  
            __end_of_InitSpi 0FBE                        ??_Isr 0031                        ?_Init 002D  
                      ?_main 002D               __CFG_DEBUG$OFF 000000                        i2l228 0DF0  
                      i2l484 0060                        _TMR1H 000FCF                        _TMR3H 000FB3  
                      _TMR1L 000FCE                        _TMR3L 000FB2                        _TMR5H 000F50  
                      _TMR5L 000F4F                        _PORTA 000F80                        _PORTB 000F81  
                      _PORTC 000F82                        _PORTD 000F83                        _PORTE 000F84  
      __size_of_CheckAileron 00C2                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TRISE 000F96  
                      _Delay 0E24                __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000  
              __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000                        _cm100 0041  
                      _cm120 0043                        _cm220 0047                        _cm180 0045  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000  
                      _frame 0271                        _table 0276           __CFG_MCLRE$EXTMCLR 000000  
                ReadObject@c 00E7            ?_CheckRudderAhead 002D               __pbitbssCOMRAM 0270  
                      tablat 000FF5             __end_of_CalcTime 0EF2        __size_of_BeneathFloor 0050  
      __size_of_BeneathTable 0050                        status 000FD8           ??_CheckRudderAhead 00DC  
             __CFG_HFOFST$ON 000000               __CFG_PBADEN$ON 000000                   _InitActors 0EA4  
         __size_of_ActRudder 0012               ?_InitInterrupt 002D                   _ReadHeight 0BB4  
            __initialization 0CC8                 __end_of_Init 0EA4           _StartHeightMeasure 0F86  
                 _ReadObject 03FA                  ?_ActAileron 002D                 __end_of_main 0E24  
               _CheckAileron 09B0             __end_of_InitComp 0FD2             __end_of_InitUart 0FD4  
           __end_of_InitPort 0F3E             __end_of_InitTris 0F28                       ??_Init 00DB  
        ?_StartHeightMeasure 002D                       ??_main 00E9                __activetblptr 000002  
             __CFG_PLLCFG$ON 000000                       ?_Delay 002D      __end_of_ExchangeSpiWord 0CC8  
               _BeneathFloor 0D6C                 _BeneathTable 0D1C                       _CCP1IE 007CEA  
                     _CCP1IF 007CF2                       _CCPR1H 000FBF                       _CCPR1L 000FBE  
                     _ANSELA 000F38                       _ANSELB 000F39                       _ANSELC 000F3A  
                     _ANSELD 000F3B                       _ANSELE 000F3C                       i2l2534 0B92  
             __CFG_WDTEN$OFF 000000                       i2l2544 0DDE                       i2l2834 0050  
                     _OSCCON 000FD3           __size_of_InitAnsel 0020         ??_StartHeightMeasure 00DB  
                     _TMR3IF 007D09                       _SSP1IF 007CF3           __size_of_InitTimer 005C  
         __size_of_ModeCheck 0038                    ??_InitOsc 00DB                    ??_InitSpi 00DB  
     __size_of_CheckElevator 00C2               __CFG_XINST$OFF 000000                       _a_path 00A6  
                     _c_path 003F               __CFG_STVREN$ON 000000                       clear_0 0CCE  
                     clear_1 0CDA                       clear_2 0CE8           __size_of_SignalOut 0082  
               __pdataCOMRAM 003F       __size_of_CheckThrottle 035A                       tblptrh 000FF7  
                     tblptrl 000FF6            __end_of_ActRudder 0F50                       tblptru 000FF8  
        __size_of_ActAileron 0012                   __accesstop 0060      __end_of__initialization 0D0E  
                 _StoreAsOld 0E50              ??_InitInterrupt 00DB                ___rparam_used 000001  
                ?_InitActors 002D                __end_of_Delay 0E50                  ?_ReadHeight 002D  
                ?_ReadObject 00E0               __pcstackCOMRAM 002D                 ?_ActElevator 002D  
          __end_of_InitAnsel 0F12                   _a_path_old 0100                    ?_CalcTime 002D  
          __end_of_InitTimer 0C6E            __end_of_ModeCheck 0DF4                _CheckElevator 08EE  
                    ??_Delay 002F             ?_ExchangeSpiWord 00DB              _CheckRudderBack 0726  
                 __pbssBANK0 0060                   __pbssBANK1 0100                    ?_InitComp 002D  
                  ?_InitUart 002D                    ?_InitPort 002D                   _changerate 00D8  
          __end_of_SignalOut 0BB4                    ?_InitTris 002D                 ?_ActThrottle 002D  
              _CheckThrottle 00A0           __CFG_CCP2MX$PORTC1 000000        __end_of_CompareFrames 0B32  
         __CFG_CCP3MX$PORTB5 000000                   ??_CalcTime 002F               ?_CheckElevator 002D  
        __size_of_InitActors 002A            __CFG_PRICLKEN$OFF 000000                      _TMR3GIE 007D19  
                    _TMR3GIF 007D21                      _TMR5GIF 007D22                      _SSP1BUF 000FC9  
        __size_of_ReadHeight 005E          __size_of_ReadObject 032C                   ??_InitComp 00DB  
                 ??_InitUart 00DB                   ??_InitPort 00DB                   ??_InitTris 00DB  
                ?_StoreAsOld 002D                      _InitOsc 0FBE                      _InitSpi 0FB4  
             ?_CheckThrottle 002D              __CFG_PWRTEN$OFF 000000                      __Hparam 0000  
                    __Lparam 0000                 ??_ActAileron 00DB    __size_of_CheckRudderAhead 00E4  
                    _a_color 0060                      _a_frame 0001                      __pcinit 0CC8  
                    __ramtop 1000                      __ptext0 0DF4                      __ptext1 0E50  
                    __ptext2 0F86                      __ptext3 03FA                      __ptext4 0C6E  
                    __ptext5 0BB4                      __ptext6 0E7A                      __ptext7 0FD2  
                    __ptext8 0F12                      __ptext9 0C12      __end_of_CheckRudderBack 080A  
                  _T1CONbits 000FCD                 __size_of_Isr 0094                    _T3CONbits 000FB1  
                    _pin_out 004D                    _T5CONbits 000F4E                      _set_ret 0274  
           CheckThrottle@tmp 00E3         end_of_initialization 0D0E           __end_of_ActAileron 0F74  
              __Lmediumconst 0000                      postdec1 000FE5                      postdec2 000FDD  
                    postinc0 000FEE                      postinc2 000FDE              ??_CheckElevator 00DC  
                  _PORTAbits 000F80                    _PORTBbits 000F81          __size_of_StoreAsOld 002A  
       __size_of_ActElevator 0012         ExchangeSpiWord@byte1 00DD         ExchangeSpiWord@byte2 00DB  
        CheckThrottle@i_1741 00E7          CheckThrottle@i_1742 00E1                    _ActRudder 0F3E  
__size_of_StartHeightMeasure 0010              ??_CheckThrottle 00DC                  _CCP1CONbits 000FBD  
               ??_InitActors 00DB         __size_of_ActThrottle 0012                 ??_ReadHeight 00DB  
               ??_ReadObject 00E3                  _a_frame_dif 0015                __pidataCOMRAM 0F96  
           ?_CheckRudderBack 002D          start_initialization 0CC8            __size_of_CalcTime 0024  
                  _InitAnsel 0EF2                  __end_of_Isr 009C           __end_of_InitActors 0ECE  
                  _InitTimer 0C12                    _ModeCheck 0DBC           __end_of_ReadHeight 0C12  
         __end_of_ReadObject 0726                   ?_ActRudder 002D            ActElevator@change 00DB  
           ActAileron@change 00DB            __size_of_InitComp 000A            __size_of_InitUart 0002  
          __size_of_InitPort 0016            __size_of_InitTris 0016                    _SignalOut 0B32  
      __end_of_InitInterrupt 0FB4             _CheckRudderAhead 080A              ActRudder@change 00DB  
                __pbssCOMRAM 0001                   ?_InitAnsel 002D                __pcstackBANK0 00DB  
                 ?_InitTimer 002D                   ?_ModeCheck 002D     __size_of_ExchangeSpiWord 005A  
               ??_StoreAsOld 00DB                     ?_InitOsc 002D                     ?_InitSpi 002D  
                 ?_SignalOut 002D                    __pintcode 0008                ?_CheckAileron 002D  
                  _direction 0270           __end_of_StoreAsOld 0E7A               __size_of_Delay 002C  
              ?_BeneathFloor 002D                ?_BeneathTable 002D       __size_of_CompareFrames 00C0  
                ??_ActRudder 00DB                     Delay@del 002D               ??_CheckAileron 00DC  
           __CFG_WDTPS$32768 000000                    _time_gear 0026                     _SSP1CON1 000FC6  
                   _SSP1STAT 000FC7                     _CalcTime 0ECE              ReadObject@c_obj 00E8  
             ??_BeneathFloor 00DC               ??_BeneathTable 00DC                  ??_InitAnsel 00DB  
                ??_InitTimer 00DB                  ??_ModeCheck 0031                _id_current_cc 0022  
                  copy_data0 0D02                     _InitComp 0FC8                     _InitUart 0FD2  
                   _InitPort 0F28                     _InitTris 0F12                     __Hrparam 0000  
                ??_SignalOut 002F             __size_of_InitOsc 000A             __size_of_InitSpi 000A  
                   __Lrparam 0000            ??_ExchangeSpiWord 00DD           __CFG_BOREN$SBORDIS 000000  
              _CompareFrames 0A72            __CFG_P2BMX$PORTD2 000000                ??_ActElevator 00DB  
                   _a_actors 00D0        __end_of_CheckElevator 09B0                     __ptext10 0FB4  
                   __ptext11 0F28                     __ptext20 0F3E                     __ptext12 0FBE  
                   __ptext21 08EE                     __ptext13 0FA6                     __ptext30 0B32  
                   __ptext22 0F50                     __ptext14 0FC8                     __ptext31 0E24  
                   __ptext23 09B0                     __ptext15 0EF2                     __ptext32 0DBC  
                   __ptext24 0F62                     __ptext16 0EA4                     __ptext33 0ECE  
                   __ptext25 00A0                     __ptext17 0A72                     __ptext26 0D1C  
                   __ptext18 0726                     __ptext27 0D6C                     __ptext19 080A  
                   __ptext28 0F74     __end_of_CheckRudderAhead 08EE   __end_of_StartHeightMeasure 0F96  
                 _T3GCONbits 000FB4                  _OSCCON2bits 000FD2                __size_of_Init 002A  
     CalcTime@time_gear_meas 002F                ??_ActThrottle 00DB                     _obj_type 0273  
              __size_of_main 0030                   _T5GCONbits 000F4D        __end_of_CheckThrottle 03FA  
             CheckThrottle@i 00E5               ?_CompareFrames 002D      ExchangeSpiWord@SPI_word 00DE  
                   int$flags 004F                     _outgoing 001F                     _storedif 0275  
                _OSCTUNEbits 000F9B          __end_of_ActElevator 0F62         __end_of_CheckAileron 0A72  
   __size_of_CheckRudderBack 00E4                     intlevel2 0000         __end_of_BeneathFloor 0DBC  
       __end_of_BeneathTable 0D6C          __end_of_ActThrottle 0F86                  _time_height 0028  
          __CFG_T3CMX$PORTC0 000000       __size_of_InitInterrupt 000E            __CFG_FOSC$INTIO67 000000  
            ??_CompareFrames 00DD  
