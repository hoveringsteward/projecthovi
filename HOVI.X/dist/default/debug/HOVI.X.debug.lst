

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Feb 01 14:03:12 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50  0000                     
    51                           	psect	idataCOMRAM
    52  000F94                     __pidataCOMRAM:
    53                           	opt stack 0
    54                           
    55                           ;initializer for _c_path
    56  000F94  000A               	dw	10
    57                           
    58                           ;initializer for _cm100
    59  000F96  5B1B               	dw	23323
    60                           
    61                           ;initializer for _cm120
    62  000F98  6D53               	dw	27987
    63                           
    64                           ;initializer for _cm180
    65  000F9A  51FF               	dw	20991
    66                           
    67                           ;initializer for _cm220
    68  000F9C  6437               	dw	25655
    69                           
    70                           ;initializer for _cm50
    71  000F9E  2D8E               	dw	11662
    72                           
    73                           ;initializer for _cm80
    74  000FA0  48E3               	dw	18659
    75                           
    76                           ;initializer for _pin_out
    77  000FA2  41                 	db	65
    78  0000                     _ANSELA	set	3896
    79  0000                     _ANSELB	set	3897
    80  0000                     _ANSELC	set	3898
    81  0000                     _ANSELD	set	3899
    82  0000                     _ANSELE	set	3900
    83  0000                     _T5CONbits	set	3918
    84  0000                     _T5GCONbits	set	3917
    85  0000                     _TMR5H	set	3920
    86  0000                     _TMR5L	set	3919
    87  0000                     _CCP1CONbits	set	4029
    88  0000                     _CCPR1H	set	4031
    89  0000                     _CCPR1L	set	4030
    90  0000                     _OSCCON	set	4051
    91  0000                     _OSCCON2bits	set	4050
    92  0000                     _OSCTUNEbits	set	3995
    93  0000                     _PORTA	set	3968
    94  0000                     _PORTAbits	set	3968
    95  0000                     _PORTB	set	3969
    96  0000                     _PORTBbits	set	3969
    97  0000                     _PORTC	set	3970
    98  0000                     _PORTD	set	3971
    99  0000                     _PORTE	set	3972
   100  0000                     _SSP1BUF	set	4041
   101  0000                     _SSP1CON1	set	4038
   102  0000                     _SSP1STAT	set	4039
   103  0000                     _T1CONbits	set	4045
   104  0000                     _T3CONbits	set	4017
   105  0000                     _T3GCONbits	set	4020
   106  0000                     _TMR1H	set	4047
   107  0000                     _TMR1L	set	4046
   108  0000                     _TMR3H	set	4019
   109  0000                     _TMR3L	set	4018
   110  0000                     _TRISA	set	3986
   111  0000                     _TRISB	set	3987
   112  0000                     _TRISC	set	3988
   113  0000                     _TRISD	set	3989
   114  0000                     _TRISE	set	3990
   115  0000                     _CCP1IE	set	31978
   116  0000                     _CCP1IF	set	31986
   117  0000                     _GIE	set	32663
   118  0000                     _PEIE	set	32662
   119  0000                     _SSP1IF	set	31987
   120  0000                     _TMR3GIE	set	32025
   121  0000                     _TMR3GIF	set	32033
   122  0000                     _TMR3IF	set	32009
   123  0000                     _TMR5GIF	set	32034
   124                           
   125                           ; #config settings
   126  0000                     
   127                           	psect	cinit
   128  000CF6                     __pcinit:
   129                           	opt stack 0
   130  000CF6                     start_initialization:
   131                           	opt stack 0
   132  000CF6                     __initialization:
   133                           	opt stack 0
   134                           
   135                           ; Clear objects allocated to BANK1 (42 bytes)
   136  000CF6  EE01  F000         	lfsr	0,__pbssBANK1
   137  000CFA  0E2A               	movlw	42
   138  000CFC                     clear_0:
   139  000CFC  6AEE               	clrf	postinc0,c
   140  000CFE  06E8               	decf	wreg,f,c
   141  000D00  E1FD               	bnz	clear_0
   142                           
   143                           ; Clear objects allocated to BANK0 (120 bytes)
   144  000D02  EE00  F060         	lfsr	0,__pbssBANK0
   145  000D06  0E78               	movlw	120
   146  000D08                     clear_1:
   147  000D08  6AEE               	clrf	postinc0,c
   148  000D0A  06E8               	decf	wreg,f,c
   149  000D0C  E1FD               	bnz	clear_1
   150                           
   151                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   152  000D0E  6A4F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   153                           
   154                           ; Clear objects allocated to COMRAM (47 bytes)
   155  000D10  EE00  F001         	lfsr	0,__pbssCOMRAM
   156  000D14  0E2F               	movlw	47
   157  000D16                     clear_2:
   158  000D16  6AEE               	clrf	postinc0,c
   159  000D18  06E8               	decf	wreg,f,c
   160  000D1A  E1FD               	bnz	clear_2
   161                           
   162                           ; Initialize objects allocated to COMRAM (15 bytes)
   163                           ; load TBLPTR registers with __pidataCOMRAM
   164  000D1C  0E94               	movlw	low __pidataCOMRAM
   165  000D1E  6EF6               	movwf	tblptrl,c
   166  000D20  0E0F               	movlw	high __pidataCOMRAM
   167  000D22  6EF7               	movwf	tblptrh,c
   168  000D24  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   169  000D26  6EF8               	movwf	tblptru,c
   170  000D28  EE00  F040         	lfsr	0,__pdataCOMRAM
   171  000D2C  EE10 F00F          	lfsr	1,15
   172  000D30                     copy_data0:
   173  000D30  0009               	tblrd		*+
   174  000D32  CFF5 FFEE          	movff	tablat,postinc0
   175  000D36  50E5               	movf	postdec1,w,c
   176  000D38  50E1               	movf	fsr1l,w,c
   177  000D3A  E1FA               	bnz	copy_data0
   178  000D3C                     end_of_initialization:
   179                           	opt stack 0
   180  000D3C                     __end_of__initialization:
   181                           	opt stack 0
   182  000D3C  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   183  000D3E  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   184  000D40  0E00               	movlw	low (__Lmediumconst shr (0+16))
   185  000D42  6EF8               	movwf	tblptru,c
   186  000D44  0100               	movlb	0
   187  000D46  EFF5  F006         	goto	_main	;jump to C main() function
   188                           tblptru	equ	0xFF8
   189                           tblptrh	equ	0xFF7
   190                           tblptrl	equ	0xFF6
   191                           tablat	equ	0xFF5
   192                           postinc0	equ	0xFEE
   193                           wreg	equ	0xFE8
   194                           postdec1	equ	0xFE5
   195                           fsr1l	equ	0xFE1
   196                           
   197                           	psect	bitbssCOMRAM
   198  000278                     __pbitbssCOMRAM:
   199                           	opt stack 0
   200  000278                     _direction:
   201                           	opt stack 0
   202  000278                     	ds	1
   203  000279                     _frame:
   204                           	opt stack 0
   205  000279                     	ds	1
   206  00027A                     _highpassallowed:
   207                           	opt stack 0
   208  00027A                     	ds	1
   209  00027B                     _obj_type:
   210                           	opt stack 0
   211  00027B                     	ds	1
   212  00027C                     _set_ret:
   213                           	opt stack 0
   214  00027C                     	ds	1
   215  00027D                     _storedif:
   216                           	opt stack 0
   217  00027D                     	ds	1
   218  00027E                     _table:
   219                           	opt stack 0
   220  00027E                     	ds	1
   221                           tblptru	equ	0xFF8
   222                           tblptrh	equ	0xFF7
   223                           tblptrl	equ	0xFF6
   224                           tablat	equ	0xFF5
   225                           postinc0	equ	0xFEE
   226                           wreg	equ	0xFE8
   227                           postdec1	equ	0xFE5
   228                           fsr1l	equ	0xFE1
   229                           
   230                           	psect	bssCOMRAM
   231  000001                     __pbssCOMRAM:
   232                           	opt stack 0
   233  000001                     _a_frame:
   234                           	opt stack 0
   235  000001                     	ds	20
   236  000015                     _a_frame_dif:
   237                           	opt stack 0
   238  000015                     	ds	10
   239  00001F                     _changerate:
   240                           	opt stack 0
   241  00001F                     	ds	3
   242  000022                     _outgoing:
   243                           	opt stack 0
   244  000022                     	ds	3
   245  000025                     _id_current_cc:
   246                           	opt stack 0
   247  000025                     	ds	2
   248  000027                     _lw:
   249                           	opt stack 0
   250  000027                     	ds	2
   251  000029                     _time_gear:
   252                           	opt stack 0
   253  000029                     	ds	2
   254  00002B                     _time_height:
   255                           	opt stack 0
   256  00002B                     	ds	2
   257  00002D                     _w:
   258                           	opt stack 0
   259  00002D                     	ds	2
   260  00002F                     _pulsecounter:
   261                           	opt stack 0
   262  00002F                     	ds	1
   263                           tblptru	equ	0xFF8
   264                           tblptrh	equ	0xFF7
   265                           tblptrl	equ	0xFF6
   266                           tablat	equ	0xFF5
   267                           postinc0	equ	0xFEE
   268                           wreg	equ	0xFE8
   269                           postdec1	equ	0xFE5
   270                           fsr1l	equ	0xFE1
   271                           
   272                           	psect	dataCOMRAM
   273  000040                     __pdataCOMRAM:
   274                           	opt stack 0
   275  000040                     _c_path:
   276                           	opt stack 0
   277  000040                     	ds	2
   278  000042                     _cm100:
   279                           	opt stack 0
   280  000042                     	ds	2
   281  000044                     _cm120:
   282                           	opt stack 0
   283  000044                     	ds	2
   284  000046                     _cm180:
   285                           	opt stack 0
   286  000046                     	ds	2
   287  000048                     _cm220:
   288                           	opt stack 0
   289  000048                     	ds	2
   290  00004A                     _cm50:
   291                           	opt stack 0
   292  00004A                     	ds	2
   293  00004C                     _cm80:
   294                           	opt stack 0
   295  00004C                     	ds	2
   296  00004E                     _pin_out:
   297                           	opt stack 0
   298  00004E                     	ds	1
   299                           tblptru	equ	0xFF8
   300                           tblptrh	equ	0xFF7
   301                           tblptrl	equ	0xFF6
   302                           tablat	equ	0xFF5
   303                           postinc0	equ	0xFEE
   304                           wreg	equ	0xFE8
   305                           postdec1	equ	0xFE5
   306                           fsr1l	equ	0xFE1
   307                           
   308                           	psect	bssBANK0
   309  000060                     __pbssBANK0:
   310                           	opt stack 0
   311  000060                     _a_color:
   312                           	opt stack 0
   313  000060                     	ds	70
   314  0000A6                     _a_path:
   315                           	opt stack 0
   316  0000A6                     	ds	42
   317  0000D0                     _a_actors:
   318                           	opt stack 0
   319  0000D0                     	ds	8
   320                           tblptru	equ	0xFF8
   321                           tblptrh	equ	0xFF7
   322                           tblptrl	equ	0xFF6
   323                           tablat	equ	0xFF5
   324                           postinc0	equ	0xFEE
   325                           wreg	equ	0xFE8
   326                           postdec1	equ	0xFE5
   327                           fsr1l	equ	0xFE1
   328                           
   329                           	psect	bssBANK1
   330  000100                     __pbssBANK1:
   331                           	opt stack 0
   332  000100                     _a_path_old:
   333                           	opt stack 0
   334  000100                     	ds	42
   335                           tblptru	equ	0xFF8
   336                           tblptrh	equ	0xFF7
   337                           tblptrl	equ	0xFF6
   338                           tablat	equ	0xFF5
   339                           postinc0	equ	0xFEE
   340                           wreg	equ	0xFE8
   341                           postdec1	equ	0xFE5
   342                           fsr1l	equ	0xFE1
   343                           
   344                           	psect	cstackBANK0
   345  0000D8                     __pcstackBANK0:
   346                           	opt stack 0
   347  0000D8                     ??_ReadHeight:
   348  0000D8                     ?_ExchangeSpiWord:
   349                           	opt stack 0
   350  0000D8                     ActAileron@change:
   351                           	opt stack 0
   352  0000D8                     ActElevator@change:
   353                           	opt stack 0
   354  0000D8                     ActThrottle@change:
   355                           	opt stack 0
   356  0000D8                     ActRudder@change:
   357                           	opt stack 0
   358  0000D8                     ExchangeSpiWord@byte2:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0x0
   362  0000D8                     	ds	1
   363  0000D9                     ??_CheckThrottle:
   364  0000D9                     ??_CheckRudderAhead:
   365  0000D9                     ??_CheckRudderBack:
   366  0000D9                     
   367                           ; 0 bytes @ 0x1
   368  0000D9                     	ds	1
   369  0000DA                     ??_CompareFrames:
   370  0000DA                     ExchangeSpiWord@byte1:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0x2
   374  0000DA                     	ds	1
   375  0000DB                     ExchangeSpiWord@SPI_word:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x3
   379  0000DB                     	ds	2
   380  0000DD                     ReadObject@des_obj:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x5
   384  0000DD                     	ds	1
   385  0000DE                     CheckThrottle@i_1743:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x6
   389  0000DE                     	ds	1
   390  0000DF                     ReadObject@max_obj:
   391                           	opt stack 0
   392                           
   393                           ; 1 bytes @ 0x7
   394  0000DF                     	ds	1
   395  0000E0                     CheckThrottle@tmp:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x8
   399  0000E0                     	ds	2
   400  0000E2                     ReadObject@checksum:
   401                           	opt stack 0
   402  0000E2                     CheckThrottle@i:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0xA
   406  0000E2                     	ds	2
   407  0000E4                     ReadObject@c:
   408                           	opt stack 0
   409  0000E4                     CheckThrottle@i_1742:
   410                           	opt stack 0
   411                           
   412                           ; 2 bytes @ 0xC
   413  0000E4                     	ds	1
   414  0000E5                     ReadObject@c_obj:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0xD
   418  0000E5                     	ds	1
   419  0000E6                     tblptru	equ	0xFF8
   420                           tblptrh	equ	0xFF7
   421                           tblptrl	equ	0xFF6
   422                           tablat	equ	0xFF5
   423                           postinc0	equ	0xFEE
   424                           wreg	equ	0xFE8
   425                           postdec1	equ	0xFE5
   426                           fsr1l	equ	0xFE1
   427                           
   428                           ; 0 bytes @ 0xE
   429                           
   430                           	psect	cstackCOMRAM
   431  000030                     __pcstackCOMRAM:
   432                           	opt stack 0
   433  000030                     Delay@del:
   434                           	opt stack 0
   435                           
   436                           ; 2 bytes @ 0x0
   437  000030                     	ds	2
   438  000032                     ??_Isr:
   439                           
   440                           ; 0 bytes @ 0x2
   441  000032                     	ds	14
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           postinc0	equ	0xFEE
   447                           wreg	equ	0xFE8
   448                           postdec1	equ	0xFE5
   449                           fsr1l	equ	0xFE1
   450                           
   451 ;;
   452 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   453 ;;
   454 ;; *************** function _main *****************
   455 ;; Defined at:
   456 ;;		line 85 in file "main.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;		None
   461 ;; Return value:  Size  Location     Type
   462 ;;		None               void
   463 ;; Registers used:
   464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   474 ;;Total ram usage:        0 bytes
   475 ;; Hardware stack levels required when called:    6
   476 ;; This function calls:
   477 ;;		_CheckThrottle
   478 ;;		_CompareFrames
   479 ;;		_Init
   480 ;;		_ReadHeight
   481 ;;		_ReadObject
   482 ;;		_StartHeightMeasure
   483 ;;		_StoreAsOld
   484 ;; This function is called by:
   485 ;;		Startup code after reset
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           	psect	text0
   490  000DEA                     __ptext0:
   491                           	opt stack 0
   492  000DEA                     _main:
   493                           	opt stack 25
   494                           
   495                           ;main.c: 86: Init();
   496                           
   497                           ;incstack = 0
   498  000DEA  EC4E  F007         	call	_Init	;wreg free
   499  000DEE                     l563:
   500                           
   501                           ;main.c: 88: StartHeightMeasure();
   502  000DEE  ECC2  F007         	call	_StartHeightMeasure	;wreg free
   503                           
   504                           ;main.c: 89: ReadObject(1, 10, 5);
   505  000DF2  0E00               	movlw	0
   506  000DF4  0100               	movlb	0	; () banked
   507  000DF6  6FDE               	movwf	(ReadObject@des_obj+1)& (0+255),b
   508  000DF8  0E0A               	movlw	10
   509  000DFA  6FDD               	movwf	ReadObject@des_obj& (0+255),b
   510  000DFC  0E05               	movlw	5
   511  000DFE  0100               	movlb	0	; () banked
   512  000E00  6FDF               	movwf	ReadObject@max_obj& (0+255),b
   513  000E02  0E01               	movlw	1
   514  000E04  EC14  F002         	call	_ReadObject
   515                           
   516                           ;main.c: 90: CompareFrames();
   517  000E08  EC50  F005         	call	_CompareFrames	;wreg free
   518                           
   519                           ;main.c: 91: ReadHeight();
   520  000E0C  ECF1  F005         	call	_ReadHeight	;wreg free
   521                           
   522                           ;main.c: 92: CheckThrottle();
   523  000E10  EC67  F000         	call	_CheckThrottle	;wreg free
   524                           
   525                           ;main.c: 93: StoreAsOld();
   526  000E14  EC39  F007         	call	_StoreAsOld	;wreg free
   527  000E18  D7EA               	goto	l563
   528  000E1A                     __end_of_main:
   529                           	opt stack 0
   530                           tblptru	equ	0xFF8
   531                           tblptrh	equ	0xFF7
   532                           tblptrl	equ	0xFF6
   533                           tablat	equ	0xFF5
   534                           postinc0	equ	0xFEE
   535                           wreg	equ	0xFE8
   536                           postdec1	equ	0xFE5
   537                           fsr1l	equ	0xFE1
   538                           
   539 ;; *************** function _StoreAsOld *****************
   540 ;; Defined at:
   541 ;;		line 447 in file "position.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;		None               void
   548 ;; Registers used:
   549 ;;		None
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   559 ;;Total ram usage:        0 bytes
   560 ;; Hardware stack levels used:    1
   561 ;; Hardware stack levels required when called:    3
   562 ;; This function calls:
   563 ;;		Nothing
   564 ;; This function is called by:
   565 ;;		_main
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           	psect	text1
   570  000E72                     __ptext1:
   571                           	opt stack 0
   572  000E72                     _StoreAsOld:
   573                           	opt stack 27
   574                           
   575                           ;position.c: 448: a_frame[1].num = a_frame[0].num;
   576                           
   577                           ;incstack = 0
   578  000E72  C001  F00B         	movff	_a_frame,_a_frame+10
   579  000E76  C002  F00C         	movff	_a_frame+1,_a_frame+11
   580                           
   581                           ;position.c: 449: a_frame[1].pos_x = a_frame[0].pos_x;
   582  000E7A  C003  F00D         	movff	_a_frame+2,_a_frame+12
   583  000E7E  C004  F00E         	movff	_a_frame+3,_a_frame+13
   584                           
   585                           ;position.c: 450: a_frame[1].pos_y = a_frame[0].pos_y;
   586  000E82  C005  F00F         	movff	_a_frame+4,_a_frame+14
   587  000E86  C006  F010         	movff	_a_frame+5,_a_frame+15
   588                           
   589                           ;position.c: 451: a_frame[1].height = a_frame[0].height;
   590  000E8A  C007  F011         	movff	_a_frame+6,_a_frame+16
   591  000E8E  C008  F012         	movff	_a_frame+7,_a_frame+17
   592                           
   593                           ;position.c: 452: a_frame[1].angle = a_frame[0].angle;
   594  000E92  C009  F013         	movff	_a_frame+8,_a_frame+18
   595  000E96  C00A  F014         	movff	_a_frame+9,_a_frame+19
   596  000E9A  0012               	return		;funcret
   597  000E9C                     __end_of_StoreAsOld:
   598                           	opt stack 0
   599                           tblptru	equ	0xFF8
   600                           tblptrh	equ	0xFF7
   601                           tblptrl	equ	0xFF6
   602                           tablat	equ	0xFF5
   603                           postinc0	equ	0xFEE
   604                           wreg	equ	0xFE8
   605                           postdec1	equ	0xFE5
   606                           fsr1l	equ	0xFE1
   607                           
   608 ;; *************** function _StartHeightMeasure *****************
   609 ;; Defined at:
   610 ;;		line 21 in file "ultrasonic.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;		None
   613 ;; Auto vars:     Size  Location     Type
   614 ;;		None
   615 ;; Return value:  Size  Location     Type
   616 ;;		None               void
   617 ;; Registers used:
   618 ;;		wreg, status,2
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   628 ;;Total ram usage:        0 bytes
   629 ;; Hardware stack levels used:    1
   630 ;; Hardware stack levels required when called:    3
   631 ;; This function calls:
   632 ;;		Nothing
   633 ;; This function is called by:
   634 ;;		_main
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           	psect	text2
   639  000F84                     __ptext2:
   640                           	opt stack 0
   641  000F84                     _StartHeightMeasure:
   642                           	opt stack 27
   643                           
   644                           ;ultrasonic.c: 22: TMR5L = 0;
   645                           
   646                           ;incstack = 0
   647  000F84  0E00               	movlw	0
   648  000F86  010F               	movlb	15	; () banked
   649  000F88  6F4F               	movwf	79,b	;volatile
   650                           
   651                           ;ultrasonic.c: 23: TMR5H = 0;
   652  000F8A  0E00               	movlw	0
   653  000F8C  010F               	movlb	15	; () banked
   654  000F8E  6F50               	movwf	80,b	;volatile
   655                           
   656                           ; BSR set to: 15
   657                           ;ultrasonic.c: 24: PORTBbits.RB3 = 0;
   658  000F90  9681               	bcf	3969,3,c	;volatile
   659                           
   660                           ; BSR set to: 15
   661  000F92  0012               	return		;funcret
   662  000F94                     __end_of_StartHeightMeasure:
   663                           	opt stack 0
   664                           tblptru	equ	0xFF8
   665                           tblptrh	equ	0xFF7
   666                           tblptrl	equ	0xFF6
   667                           tablat	equ	0xFF5
   668                           postinc0	equ	0xFEE
   669                           wreg	equ	0xFE8
   670                           postdec1	equ	0xFE5
   671                           fsr1l	equ	0xFE1
   672                           
   673 ;; *************** function _ReadObject *****************
   674 ;; Defined at:
   675 ;;		line 27 in file "pixy.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;  des_obj_type    1    wreg     unsigned char 
   678 ;;  des_obj         2    5[BANK0 ] unsigned int 
   679 ;;  max_obj         1    7[BANK0 ] unsigned char 
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  des_obj_type    1    0[COMRAM] unsigned char 
   682 ;;  checksum        2   10[BANK0 ] unsigned int 
   683 ;;  c_obj           1   13[BANK0 ] unsigned char 
   684 ;;  c               1   12[BANK0 ] unsigned char 
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      unsigned char 
   687 ;; Registers used:
   688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   694 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   698 ;;Total ram usage:        9 bytes
   699 ;; Hardware stack levels used:    1
   700 ;; Hardware stack levels required when called:    4
   701 ;; This function calls:
   702 ;;		_ExchangeSpiWord
   703 ;; This function is called by:
   704 ;;		_main
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           	psect	text3
   709  000428                     __ptext3:
   710                           	opt stack 0
   711  000428                     _ReadObject:
   712                           	opt stack 26
   713                           
   714                           ;pixy.c: 28: frame = 0;
   715                           
   716                           ; BSR set to: 15
   717                           ;incstack = 0
   718  000428  924F               	bcf	_frame/(0+8),_frame& (0+7),c
   719                           
   720                           ;pixy.c: 29: unsigned char c = 0;
   721  00042A  0E00               	movlw	0
   722  00042C  0100               	movlb	0	; () banked
   723  00042E  6FE4               	movwf	ReadObject@c& (0+255),b
   724                           
   725                           ;pixy.c: 30: for(unsigned char c_obj = 0; c_obj < max_obj; c_obj++) {
   726  000430  0E00               	movlw	0
   727  000432  0100               	movlb	0	; () banked
   728  000434  6FE5               	movwf	ReadObject@c_obj& (0+255),b
   729  000436  D187               	goto	l3102
   730  000438                     l630:
   731                           
   732                           ; BSR set to: 0
   733                           ;pixy.c: 34: if(frame == 1) {
   734  000438  A24F               	btfss	_frame/(0+8),_frame& (0+7),c
   735  00043A  D086               	goto	l635
   736                           
   737                           ; BSR set to: 0
   738                           ;pixy.c: 35: w = ExchangeSpiWord(0x5a, 0);
   739  00043C  0E00               	movlw	0
   740  00043E  0100               	movlb	0	; () banked
   741  000440  6FD8               	movwf	ExchangeSpiWord@byte2& (0+255),b
   742  000442  0E5A               	movlw	90
   743  000444  EC4E  F006         	call	_ExchangeSpiWord
   744  000448  C0D8  F02D         	movff	?_ExchangeSpiWord,_w
   745  00044C  C0D9  F02E         	movff	?_ExchangeSpiWord+1,_w+1
   746                           
   747                           ;pixy.c: 36: if(w == 0xaa55) {
   748  000450  0E55               	movlw	85
   749  000452  182D               	xorwf	_w,w,c
   750  000454  E10F               	bnz	l3046
   751  000456  0EAA               	movlw	170
   752  000458  182E               	xorwf	_w+1,w,c
   753  00045A  A4D8               	btfss	status,2,c
   754  00045C  D00B               	goto	l3046
   755                           
   756                           ;pixy.c: 37: a_color[c_obj].type = 0xaa55;
   757  00045E  0100               	movlb	0	; () banked
   758  000460  51E5               	movf	ReadObject@c_obj& (0+255),w,b
   759  000462  0D0E               	mullw	14
   760  000464  0E60               	movlw	low _a_color
   761  000466  24F3               	addwf	prodl,w,c
   762  000468  6ED9               	movwf	fsr2l,c
   763  00046A  0E00               	movlw	high _a_color
   764  00046C  20F4               	addwfc	prodh,w,c
   765  00046E  6EDA               	movwf	fsr2h,c
   766  000470  0E55               	movlw	85
   767  000472  D011               	goto	L1
   768  000474                     l3046:
   769  000474  0E56               	movlw	86
   770  000476  182D               	xorwf	_w,w,c
   771  000478  E167               	bnz	l635
   772  00047A  0EAA               	movlw	170
   773  00047C  182E               	xorwf	_w+1,w,c
   774  00047E  A4D8               	btfss	status,2,c
   775  000480  D063               	goto	l635
   776                           
   777                           ;pixy.c: 39: a_color[c_obj].type = 0xaa56;
   778  000482  0100               	movlb	0	; () banked
   779  000484  51E5               	movf	ReadObject@c_obj& (0+255),w,b
   780  000486  0D0E               	mullw	14
   781  000488  0E60               	movlw	low _a_color
   782  00048A  24F3               	addwf	prodl,w,c
   783  00048C  6ED9               	movwf	fsr2l,c
   784  00048E  0E00               	movlw	high _a_color
   785  000490  20F4               	addwfc	prodh,w,c
   786  000492  6EDA               	movwf	fsr2h,c
   787  000494  0E56               	movlw	86
   788  000496                     L1:
   789  000496  6EDE               	movwf	postinc2,c
   790  000498  0EAA               	movlw	170
   791  00049A  6EDD               	movwf	postdec2,c
   792                           
   793                           ; BSR set to: 0
   794                           ;pixy.c: 40: }
   795                           ;pixy.c: 41: }
   796                           ;pixy.c: 42: while(frame == 0) {
   797                           
   798                           ; BSR set to: 0
   799                           
   800                           ; BSR set to: 0
   801  00049C  D055               	goto	l635
   802  00049E                     l3050:
   803                           
   804                           ;pixy.c: 43: w = ExchangeSpiWord(0x5a, 0);
   805  00049E  0E00               	movlw	0
   806  0004A0  0100               	movlb	0	; () banked
   807  0004A2  6FD8               	movwf	ExchangeSpiWord@byte2& (0+255),b
   808  0004A4  0E5A               	movlw	90
   809  0004A6  EC4E  F006         	call	_ExchangeSpiWord
   810  0004AA  C0D8  F02D         	movff	?_ExchangeSpiWord,_w
   811  0004AE  C0D9  F02E         	movff	?_ExchangeSpiWord+1,_w+1
   812                           
   813                           ;pixy.c: 44: if(lw == 0xaa55 && w == 0xaa55) {
   814  0004B2  0E55               	movlw	85
   815  0004B4  1827               	xorwf	_lw,w,c
   816  0004B6  E118               	bnz	l3060
   817  0004B8  0EAA               	movlw	170
   818  0004BA  1828               	xorwf	_lw+1,w,c
   819  0004BC  A4D8               	btfss	status,2,c
   820  0004BE  D014               	goto	l3060
   821  0004C0  0E55               	movlw	85
   822  0004C2  182D               	xorwf	_w,w,c
   823  0004C4  E111               	bnz	l3060
   824  0004C6  0EAA               	movlw	170
   825  0004C8  182E               	xorwf	_w+1,w,c
   826  0004CA  A4D8               	btfss	status,2,c
   827  0004CC  D00D               	goto	l3060
   828                           
   829                           ;pixy.c: 45: frame = 1;
   830  0004CE  824F               	bsf	_frame/(0+8),_frame& (0+7),c
   831                           
   832                           ;pixy.c: 46: obj_type = 0;
   833  0004D0  964F               	bcf	_obj_type/(0+8),_obj_type& (0+7),c
   834                           
   835                           ;pixy.c: 47: a_color[c_obj].type = 0xaa55;
   836  0004D2  0100               	movlb	0	; () banked
   837  0004D4  51E5               	movf	ReadObject@c_obj& (0+255),w,b
   838  0004D6  0D0E               	mullw	14
   839  0004D8  0E60               	movlw	low _a_color
   840  0004DA  24F3               	addwf	prodl,w,c
   841  0004DC  6ED9               	movwf	fsr2l,c
   842  0004DE  0E00               	movlw	high _a_color
   843  0004E0  20F4               	addwfc	prodh,w,c
   844  0004E2  6EDA               	movwf	fsr2h,c
   845  0004E4  0E55               	movlw	85
   846  0004E6  D01A               	goto	L2
   847  0004E8                     l3060:
   848  0004E8  0E55               	movlw	85
   849  0004EA  1827               	xorwf	_lw,w,c
   850  0004EC  E11B               	bnz	l3068
   851  0004EE  0EAA               	movlw	170
   852  0004F0  1828               	xorwf	_lw+1,w,c
   853  0004F2  A4D8               	btfss	status,2,c
   854  0004F4  D017               	goto	l3068
   855  0004F6  0E56               	movlw	86
   856  0004F8  182D               	xorwf	_w,w,c
   857  0004FA  E114               	bnz	l3068
   858  0004FC  0EAA               	movlw	170
   859  0004FE  182E               	xorwf	_w+1,w,c
   860  000500  A4D8               	btfss	status,2,c
   861  000502  D010               	goto	l3068
   862                           
   863                           ;pixy.c: 49: frame = 1;
   864  000504  824F               	bsf	_frame/(0+8),_frame& (0+7),c
   865                           
   866                           ;pixy.c: 50: obj_type = 1;
   867  000506  864F               	bsf	_obj_type/(0+8),_obj_type& (0+7),c
   868                           
   869                           ;pixy.c: 51: a_color[c_obj].type = 0xaa56;
   870  000508  0100               	movlb	0	; () banked
   871  00050A  51E5               	movf	ReadObject@c_obj& (0+255),w,b
   872  00050C  0D0E               	mullw	14
   873  00050E  0E60               	movlw	low _a_color
   874  000510  24F3               	addwf	prodl,w,c
   875  000512  6ED9               	movwf	fsr2l,c
   876  000514  0E00               	movlw	high _a_color
   877  000516  20F4               	addwfc	prodh,w,c
   878  000518  6EDA               	movwf	fsr2h,c
   879  00051A  0E56               	movlw	86
   880  00051C                     L2:
   881  00051C  6EDE               	movwf	postinc2,c
   882  00051E  0EAA               	movlw	170
   883  000520  6EDD               	movwf	postdec2,c
   884                           
   885                           ;pixy.c: 52: } else if(w == 0 && lw == 0){
   886  000522  D008               	goto	l638
   887  000524                     l3068:
   888  000524  502D               	movf	_w,w,c
   889  000526  102E               	iorwf	_w+1,w,c
   890  000528  A4D8               	btfss	status,2,c
   891  00052A  D004               	goto	l638
   892  00052C  5027               	movf	_lw,w,c
   893  00052E  1028               	iorwf	_lw+1,w,c
   894  000530  B4D8               	btfsc	status,2,c
   895                           
   896                           ;pixy.c: 53: frame = 0;
   897  000532  924F               	bcf	_frame/(0+8),_frame& (0+7),c
   898  000534                     l638:
   899                           
   900                           ;pixy.c: 54: }
   901                           ;pixy.c: 55: lw = w;
   902  000534  C02D  F027         	movff	_w,_lw
   903  000538  C02E  F028         	movff	_w+1,_lw+1
   904                           
   905                           ;pixy.c: 56: c++;
   906  00053C  0100               	movlb	0	; () banked
   907  00053E  2BE4               	incf	ReadObject@c& (0+255),f,b
   908                           
   909                           ; BSR set to: 0
   910                           ;pixy.c: 57: if(c > 254) {
   911  000540  0100               	movlb	0	; () banked
   912  000542  29E4               	incf	ReadObject@c& (0+255),w,b
   913  000544  B4D8               	btfsc	status,2,c
   914  000546  0012               	return	
   915  000548                     l635:
   916  000548  A24F               	btfss	_frame/(0+8),_frame& (0+7),c
   917  00054A  D7A9               	goto	l3050
   918                           
   919                           ;pixy.c: 59: }
   920                           ;pixy.c: 60: }
   921                           ;pixy.c: 62: unsigned int checksum = ExchangeSpiWord(0x5a, 0);
   922  00054C  0E00               	movlw	0
   923  00054E  0100               	movlb	0	; () banked
   924  000550  6FD8               	movwf	ExchangeSpiWord@byte2& (0+255),b
   925  000552  0E5A               	movlw	90
   926  000554  EC4E  F006         	call	_ExchangeSpiWord
   927  000558  C0D8  F0E2         	movff	?_ExchangeSpiWord,ReadObject@checksum
   928  00055C  C0D9  F0E3         	movff	?_ExchangeSpiWord+1,ReadObject@checksum+1
   929                           
   930                           ;pixy.c: 64: a_color[c_obj].num = ExchangeSpiWord(0x5a, 0);
   931  000560  0E00               	movlw	0
   932  000562  0100               	movlb	0	; () banked
   933  000564  6FD8               	movwf	ExchangeSpiWord@byte2& (0+255),b
   934  000566  0E5A               	movlw	90
   935  000568  EC4E  F006         	call	_ExchangeSpiWord
   936  00056C  0100               	movlb	0	; () banked
   937  00056E  51E5               	movf	ReadObject@c_obj& (0+255),w,b
   938  000570  0D0E               	mullw	14
   939  000572  0E02               	movlw	2
   940  000574  26F3               	addwf	prodl,f,c
   941  000576  0E00               	movlw	0
   942  000578  22F4               	addwfc	prodh,f,c
   943  00057A  0E60               	movlw	low _a_color
   944  00057C  24F3               	addwf	prodl,w,c
   945  00057E  6ED9               	movwf	fsr2l,c
   946  000580  0E00               	movlw	high _a_color
   947  000582  20F4               	addwfc	prodh,w,c
   948  000584  6EDA               	movwf	fsr2h,c
   949  000586  0100               	movlb	0	; () banked
   950  000588  C0D8  FFDE         	movff	?_ExchangeSpiWord,postinc2
   951  00058C  0100               	movlb	0	; () banked
   952  00058E  C0D9  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
   953                           
   954                           ; BSR set to: 0
   955                           ;pixy.c: 65: a_color[c_obj].pos_x = ExchangeSpiWord(0x5a, 0);
   956  000592  0E00               	movlw	0
   957  000594  0100               	movlb	0	; () banked
   958  000596  6FD8               	movwf	ExchangeSpiWord@byte2& (0+255),b
   959  000598  0E5A               	movlw	90
   960  00059A  EC4E  F006         	call	_ExchangeSpiWord
   961  00059E  0100               	movlb	0	; () banked
   962  0005A0  51E5               	movf	ReadObject@c_obj& (0+255),w,b
   963  0005A2  0D0E               	mullw	14
   964  0005A4  0E04               	movlw	4
   965  0005A6  26F3               	addwf	prodl,f,c
   966  0005A8  0E00               	movlw	0
   967  0005AA  22F4               	addwfc	prodh,f,c
   968  0005AC  0E60               	movlw	low _a_color
   969  0005AE  24F3               	addwf	prodl,w,c
   970  0005B0  6ED9               	movwf	fsr2l,c
   971  0005B2  0E00               	movlw	high _a_color
   972  0005B4  20F4               	addwfc	prodh,w,c
   973  0005B6  6EDA               	movwf	fsr2h,c
   974  0005B8  0100               	movlb	0	; () banked
   975  0005BA  C0D8  FFDE         	movff	?_ExchangeSpiWord,postinc2
   976  0005BE  0100               	movlb	0	; () banked
   977  0005C0  C0D9  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
   978                           
   979                           ; BSR set to: 0
   980                           ;pixy.c: 66: a_color[c_obj].pos_y = ExchangeSpiWord(0x5a, 0);
   981  0005C4  0E00               	movlw	0
   982  0005C6  0100               	movlb	0	; () banked
   983  0005C8  6FD8               	movwf	ExchangeSpiWord@byte2& (0+255),b
   984  0005CA  0E5A               	movlw	90
   985  0005CC  EC4E  F006         	call	_ExchangeSpiWord
   986  0005D0  0100               	movlb	0	; () banked
   987  0005D2  51E5               	movf	ReadObject@c_obj& (0+255),w,b
   988  0005D4  0D0E               	mullw	14
   989  0005D6  0E06               	movlw	6
   990  0005D8  26F3               	addwf	prodl,f,c
   991  0005DA  0E00               	movlw	0
   992  0005DC  22F4               	addwfc	prodh,f,c
   993  0005DE  0E60               	movlw	low _a_color
   994  0005E0  24F3               	addwf	prodl,w,c
   995  0005E2  6ED9               	movwf	fsr2l,c
   996  0005E4  0E00               	movlw	high _a_color
   997  0005E6  20F4               	addwfc	prodh,w,c
   998  0005E8  6EDA               	movwf	fsr2h,c
   999  0005EA  0100               	movlb	0	; () banked
  1000  0005EC  C0D8  FFDE         	movff	?_ExchangeSpiWord,postinc2
  1001  0005F0  0100               	movlb	0	; () banked
  1002  0005F2  C0D9  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
  1003                           
  1004                           ; BSR set to: 0
  1005                           ;pixy.c: 67: a_color[c_obj].obj_width = ExchangeSpiWord(0x5a, 0);
  1006  0005F6  0E00               	movlw	0
  1007  0005F8  0100               	movlb	0	; () banked
  1008  0005FA  6FD8               	movwf	ExchangeSpiWord@byte2& (0+255),b
  1009  0005FC  0E5A               	movlw	90
  1010  0005FE  EC4E  F006         	call	_ExchangeSpiWord
  1011  000602  0100               	movlb	0	; () banked
  1012  000604  51E5               	movf	ReadObject@c_obj& (0+255),w,b
  1013  000606  0D0E               	mullw	14
  1014  000608  0E08               	movlw	8
  1015  00060A  26F3               	addwf	prodl,f,c
  1016  00060C  0E00               	movlw	0
  1017  00060E  22F4               	addwfc	prodh,f,c
  1018  000610  0E60               	movlw	low _a_color
  1019  000612  24F3               	addwf	prodl,w,c
  1020  000614  6ED9               	movwf	fsr2l,c
  1021  000616  0E00               	movlw	high _a_color
  1022  000618  20F4               	addwfc	prodh,w,c
  1023  00061A  6EDA               	movwf	fsr2h,c
  1024  00061C  0100               	movlb	0	; () banked
  1025  00061E  C0D8  FFDE         	movff	?_ExchangeSpiWord,postinc2
  1026  000622  0100               	movlb	0	; () banked
  1027  000624  C0D9  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
  1028                           
  1029                           ; BSR set to: 0
  1030                           ;pixy.c: 68: a_color[c_obj].obj_height = ExchangeSpiWord(0x5a, 0);
  1031  000628  0E00               	movlw	0
  1032  00062A  0100               	movlb	0	; () banked
  1033  00062C  6FD8               	movwf	ExchangeSpiWord@byte2& (0+255),b
  1034  00062E  0E5A               	movlw	90
  1035  000630  EC4E  F006         	call	_ExchangeSpiWord
  1036  000634  0100               	movlb	0	; () banked
  1037  000636  51E5               	movf	ReadObject@c_obj& (0+255),w,b
  1038  000638  0D0E               	mullw	14
  1039  00063A  0E0A               	movlw	10
  1040  00063C  26F3               	addwf	prodl,f,c
  1041  00063E  0E00               	movlw	0
  1042  000640  22F4               	addwfc	prodh,f,c
  1043  000642  0E60               	movlw	low _a_color
  1044  000644  24F3               	addwf	prodl,w,c
  1045  000646  6ED9               	movwf	fsr2l,c
  1046  000648  0E00               	movlw	high _a_color
  1047  00064A  20F4               	addwfc	prodh,w,c
  1048  00064C  6EDA               	movwf	fsr2h,c
  1049  00064E  0100               	movlb	0	; () banked
  1050  000650  C0D8  FFDE         	movff	?_ExchangeSpiWord,postinc2
  1051  000654  0100               	movlb	0	; () banked
  1052  000656  C0D9  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
  1053                           
  1054                           ; BSR set to: 0
  1055                           ;pixy.c: 69: a_color[c_obj].angle = ExchangeSpiWord(0x5a, 0);
  1056  00065A  0E00               	movlw	0
  1057  00065C  0100               	movlb	0	; () banked
  1058  00065E  6FD8               	movwf	ExchangeSpiWord@byte2& (0+255),b
  1059  000660  0E5A               	movlw	90
  1060  000662  EC4E  F006         	call	_ExchangeSpiWord
  1061  000666  0100               	movlb	0	; () banked
  1062  000668  51E5               	movf	ReadObject@c_obj& (0+255),w,b
  1063  00066A  0D0E               	mullw	14
  1064  00066C  0E0C               	movlw	12
  1065  00066E  26F3               	addwf	prodl,f,c
  1066  000670  0E00               	movlw	0
  1067  000672  22F4               	addwfc	prodh,f,c
  1068  000674  0E60               	movlw	low _a_color
  1069  000676  24F3               	addwf	prodl,w,c
  1070  000678  6ED9               	movwf	fsr2l,c
  1071  00067A  0E00               	movlw	high _a_color
  1072  00067C  20F4               	addwfc	prodh,w,c
  1073  00067E  6EDA               	movwf	fsr2h,c
  1074  000680  0100               	movlb	0	; () banked
  1075  000682  C0D8  FFDE         	movff	?_ExchangeSpiWord,postinc2
  1076  000686  0100               	movlb	0	; () banked
  1077  000688  C0D9  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
  1078                           
  1079                           ; BSR set to: 0
  1080                           ;pixy.c: 71: if(a_color[c_obj].num == des_obj) {
  1081  00068C  0100               	movlb	0	; () banked
  1082  00068E  51E5               	movf	ReadObject@c_obj& (0+255),w,b
  1083  000690  0D0E               	mullw	14
  1084  000692  0E02               	movlw	2
  1085  000694  26F3               	addwf	prodl,f,c
  1086  000696  0E00               	movlw	0
  1087  000698  22F4               	addwfc	prodh,f,c
  1088  00069A  0E60               	movlw	low _a_color
  1089  00069C  24F3               	addwf	prodl,w,c
  1090  00069E  6ED9               	movwf	fsr2l,c
  1091  0006A0  0E00               	movlw	high _a_color
  1092  0006A2  20F4               	addwfc	prodh,w,c
  1093  0006A4  6EDA               	movwf	fsr2h,c
  1094  0006A6  0100               	movlb	0	; () banked
  1095  0006A8  51DD               	movf	ReadObject@des_obj& (0+255),w,b
  1096  0006AA  18DE               	xorwf	postinc2,w,c
  1097  0006AC  E14A               	bnz	l3100
  1098  0006AE  0100               	movlb	0	; () banked
  1099  0006B0  51DE               	movf	(ReadObject@des_obj+1)& (0+255),w,b
  1100  0006B2  18DE               	xorwf	postinc2,w,c
  1101  0006B4  A4D8               	btfss	status,2,c
  1102  0006B6  D045               	goto	l3100
  1103                           
  1104                           ; BSR set to: 0
  1105                           ;pixy.c: 72: a_frame[0].num = a_color[c_obj].num;
  1106  0006B8  0100               	movlb	0	; () banked
  1107  0006BA  51E5               	movf	ReadObject@c_obj& (0+255),w,b
  1108  0006BC  0D0E               	mullw	14
  1109  0006BE  0E02               	movlw	2
  1110  0006C0  26F3               	addwf	prodl,f,c
  1111  0006C2  0E00               	movlw	0
  1112  0006C4  22F4               	addwfc	prodh,f,c
  1113  0006C6  0E60               	movlw	low _a_color
  1114  0006C8  24F3               	addwf	prodl,w,c
  1115  0006CA  6ED9               	movwf	fsr2l,c
  1116  0006CC  0E00               	movlw	high _a_color
  1117  0006CE  20F4               	addwfc	prodh,w,c
  1118  0006D0  6EDA               	movwf	fsr2h,c
  1119  0006D2  CFDE F001          	movff	postinc2,_a_frame
  1120  0006D6  CFDD F002          	movff	postdec2,_a_frame+1
  1121                           
  1122                           ;pixy.c: 73: a_frame[0].pos_x = a_color[c_obj].pos_x;
  1123  0006DA  0100               	movlb	0	; () banked
  1124  0006DC  51E5               	movf	ReadObject@c_obj& (0+255),w,b
  1125  0006DE  0D0E               	mullw	14
  1126  0006E0  0E04               	movlw	4
  1127  0006E2  26F3               	addwf	prodl,f,c
  1128  0006E4  0E00               	movlw	0
  1129  0006E6  22F4               	addwfc	prodh,f,c
  1130  0006E8  0E60               	movlw	low _a_color
  1131  0006EA  24F3               	addwf	prodl,w,c
  1132  0006EC  6ED9               	movwf	fsr2l,c
  1133  0006EE  0E00               	movlw	high _a_color
  1134  0006F0  20F4               	addwfc	prodh,w,c
  1135  0006F2  6EDA               	movwf	fsr2h,c
  1136  0006F4  CFDE F003          	movff	postinc2,_a_frame+2
  1137  0006F8  CFDD F004          	movff	postdec2,_a_frame+3
  1138                           
  1139                           ;pixy.c: 74: a_frame[0].pos_y = a_color[c_obj].pos_y;
  1140  0006FC  0100               	movlb	0	; () banked
  1141  0006FE  51E5               	movf	ReadObject@c_obj& (0+255),w,b
  1142  000700  0D0E               	mullw	14
  1143  000702  0E06               	movlw	6
  1144  000704  26F3               	addwf	prodl,f,c
  1145  000706  0E00               	movlw	0
  1146  000708  22F4               	addwfc	prodh,f,c
  1147  00070A  0E60               	movlw	low _a_color
  1148  00070C  24F3               	addwf	prodl,w,c
  1149  00070E  6ED9               	movwf	fsr2l,c
  1150  000710  0E00               	movlw	high _a_color
  1151  000712  20F4               	addwfc	prodh,w,c
  1152  000714  6EDA               	movwf	fsr2h,c
  1153  000716  CFDE F005          	movff	postinc2,_a_frame+4
  1154  00071A  CFDD F006          	movff	postdec2,_a_frame+5
  1155                           
  1156                           ;pixy.c: 75: a_frame[0].angle = a_color[c_obj].angle;
  1157  00071E  0100               	movlb	0	; () banked
  1158  000720  51E5               	movf	ReadObject@c_obj& (0+255),w,b
  1159  000722  0D0E               	mullw	14
  1160  000724  0E0C               	movlw	12
  1161  000726  26F3               	addwf	prodl,f,c
  1162  000728  0E00               	movlw	0
  1163  00072A  22F4               	addwfc	prodh,f,c
  1164  00072C  0E60               	movlw	low _a_color
  1165  00072E  24F3               	addwf	prodl,w,c
  1166  000730  6ED9               	movwf	fsr2l,c
  1167  000732  0E00               	movlw	high _a_color
  1168  000734  20F4               	addwfc	prodh,w,c
  1169  000736  6EDA               	movwf	fsr2h,c
  1170  000738  CFDE F009          	movff	postinc2,_a_frame+8
  1171  00073C  CFDD F00A          	movff	postdec2,_a_frame+9
  1172                           
  1173                           ; BSR set to: 0
  1174                           ;pixy.c: 76: return 1;
  1175                           ;	Return value of _ReadObject is never used
  1176  000740  0012               	return	
  1177  000742                     l3100:
  1178                           
  1179                           ; BSR set to: 0
  1180  000742  0100               	movlb	0	; () banked
  1181  000744  2BE5               	incf	ReadObject@c_obj& (0+255),f,b
  1182  000746                     l3102:
  1183                           
  1184                           ; BSR set to: 0
  1185  000746  0100               	movlb	0	; () banked
  1186  000748  51DF               	movf	ReadObject@max_obj& (0+255),w,b
  1187  00074A  0100               	movlb	0	; () banked
  1188  00074C  5DE5               	subwf	ReadObject@c_obj& (0+255),w,b
  1189  00074E  B0D8               	btfsc	status,0,c
  1190  000750  0012               	return	
  1191  000752  D672               	goto	l630
  1192  000754                     __end_of_ReadObject:
  1193                           	opt stack 0
  1194                           tblptru	equ	0xFF8
  1195                           tblptrh	equ	0xFF7
  1196                           tblptrl	equ	0xFF6
  1197                           tablat	equ	0xFF5
  1198                           prodh	equ	0xFF4
  1199                           prodl	equ	0xFF3
  1200                           postinc0	equ	0xFEE
  1201                           wreg	equ	0xFE8
  1202                           postdec1	equ	0xFE5
  1203                           fsr1l	equ	0xFE1
  1204                           postinc2	equ	0xFDE
  1205                           postdec2	equ	0xFDD
  1206                           fsr2h	equ	0xFDA
  1207                           fsr2l	equ	0xFD9
  1208                           status	equ	0xFD8
  1209                           
  1210 ;; *************** function _ExchangeSpiWord *****************
  1211 ;; Defined at:
  1212 ;;		line 27 in file "communication.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;  byte1           1    wreg     unsigned char 
  1215 ;;  byte2           1    0[BANK0 ] unsigned char 
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;  byte1           1    2[BANK0 ] unsigned char 
  1218 ;;  SPI_word        2    3[BANK0 ] unsigned int 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  2    0[BANK0 ] unsigned int 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1228 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1229 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;Total ram usage:        5 bytes
  1233 ;; Hardware stack levels used:    1
  1234 ;; Hardware stack levels required when called:    3
  1235 ;; This function calls:
  1236 ;;		Nothing
  1237 ;; This function is called by:
  1238 ;;		_ReadObject
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           	psect	text4
  1243  000C9C                     __ptext4:
  1244                           	opt stack 0
  1245  000C9C                     _ExchangeSpiWord:
  1246                           	opt stack 26
  1247                           
  1248                           ; BSR set to: 0
  1249                           ;incstack = 0
  1250                           ;ExchangeSpiWord@byte1 stored from wreg
  1251  000C9C  0100               	movlb	0	; () banked
  1252  000C9E  6FDA               	movwf	ExchangeSpiWord@byte1& (0+255),b
  1253                           
  1254                           ;communication.c: 28: __nop();
  1255  000CA0  F000               	nop	
  1256                           
  1257                           ;communication.c: 29: unsigned int SPI_word = 0;
  1258  000CA2  0E00               	movlw	0
  1259  000CA4  0100               	movlb	0	; () banked
  1260  000CA6  6FDC               	movwf	(ExchangeSpiWord@SPI_word+1)& (0+255),b
  1261  000CA8  0E00               	movlw	0
  1262  000CAA  6FDB               	movwf	ExchangeSpiWord@SPI_word& (0+255),b
  1263                           
  1264                           ; BSR set to: 0
  1265                           ;communication.c: 30: if(SSP1IF == 1) {
  1266  000CAC  A69E               	btfss	3998,3,c	;volatile
  1267  000CAE  D008               	goto	l2828
  1268                           
  1269                           ; BSR set to: 0
  1270                           ;communication.c: 31: _delay((unsigned long)((100)*(64000000/4000000.0)));
  1271  000CB0  0EE4               	movlw	228
  1272  000CB2                     u2577:
  1273  000CB2  D000               	nop2	
  1274  000CB4  D000               	nop2	
  1275  000CB6  2EE8               	decfsz	wreg,f,c
  1276  000CB8  D7FC               	goto	u2577
  1277  000CBA  D000               	nop2		;nop
  1278  000CBC  D000               	nop2		;nop
  1279                           
  1280                           ;communication.c: 32: SSP1IF = 0;
  1281  000CBE  969E               	bcf	3998,3,c	;volatile
  1282  000CC0                     l2828:
  1283                           
  1284                           ;communication.c: 33: }
  1285                           ;communication.c: 34: SSP1BUF = byte1;
  1286  000CC0  C0DA  FFC9         	movff	ExchangeSpiWord@byte1,4041	;volatile
  1287  000CC4                     l861:
  1288  000CC4  A69E               	btfss	3998,3,c	;volatile
  1289  000CC6  D7FE               	goto	l861
  1290                           
  1291                           ;communication.c: 36: SSP1IF = 0;
  1292  000CC8  969E               	bcf	3998,3,c	;volatile
  1293                           
  1294                           ;communication.c: 37: SPI_word = SSP1BUF;
  1295  000CCA  CFC9 F0DB          	movff	4041,ExchangeSpiWord@SPI_word	;volatile
  1296  000CCE  0100               	movlb	0	; () banked
  1297  000CD0  6BDC               	clrf	(ExchangeSpiWord@SPI_word+1)& (0+255),b
  1298                           
  1299                           ; BSR set to: 0
  1300                           ;communication.c: 38: SPI_word <<= 8;
  1301  000CD2  0100               	movlb	0	; () banked
  1302  000CD4  51DB               	movf	ExchangeSpiWord@SPI_word& (0+255),w,b
  1303  000CD6  6FDC               	movwf	(ExchangeSpiWord@SPI_word+1)& (0+255),b
  1304  000CD8  6BDB               	clrf	ExchangeSpiWord@SPI_word& (0+255),b
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;communication.c: 39: SSP1BUF = byte2;
  1308  000CDA  C0D8  FFC9         	movff	ExchangeSpiWord@byte2,4041	;volatile
  1309  000CDE                     l864:
  1310  000CDE  A69E               	btfss	3998,3,c	;volatile
  1311  000CE0  D7FE               	goto	l864
  1312                           
  1313                           ;communication.c: 41: SSP1IF = 0;
  1314  000CE2  969E               	bcf	3998,3,c	;volatile
  1315                           
  1316                           ;communication.c: 42: SPI_word |= SSP1BUF;
  1317  000CE4  50C9               	movf	4041,w,c	;volatile
  1318  000CE6  0100               	movlb	0	; () banked
  1319  000CE8  13DB               	iorwf	ExchangeSpiWord@SPI_word& (0+255),f,b
  1320                           
  1321                           ; BSR set to: 0
  1322                           ;communication.c: 43: __nop();
  1323  000CEA  F000               	nop	
  1324                           
  1325                           ;communication.c: 44: return (SPI_word);
  1326  000CEC  C0DB  F0D8         	movff	ExchangeSpiWord@SPI_word,?_ExchangeSpiWord
  1327  000CF0  C0DC  F0D9         	movff	ExchangeSpiWord@SPI_word+1,?_ExchangeSpiWord+1
  1328  000CF4  0012               	return	
  1329  000CF6                     __end_of_ExchangeSpiWord:
  1330                           	opt stack 0
  1331                           tblptru	equ	0xFF8
  1332                           tblptrh	equ	0xFF7
  1333                           tblptrl	equ	0xFF6
  1334                           tablat	equ	0xFF5
  1335                           prodh	equ	0xFF4
  1336                           prodl	equ	0xFF3
  1337                           postinc0	equ	0xFEE
  1338                           wreg	equ	0xFE8
  1339                           postdec1	equ	0xFE5
  1340                           fsr1l	equ	0xFE1
  1341                           postinc2	equ	0xFDE
  1342                           postdec2	equ	0xFDD
  1343                           fsr2h	equ	0xFDA
  1344                           fsr2l	equ	0xFD9
  1345                           status	equ	0xFD8
  1346                           
  1347 ;; *************** function _ReadHeight *****************
  1348 ;; Defined at:
  1349 ;;		line 27 in file "ultrasonic.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;		None
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;		None
  1354 ;; Return value:  Size  Location     Type
  1355 ;;		None               void
  1356 ;; Registers used:
  1357 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1365 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1366 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;Total ram usage:        2 bytes
  1368 ;; Hardware stack levels used:    1
  1369 ;; Hardware stack levels required when called:    3
  1370 ;; This function calls:
  1371 ;;		Nothing
  1372 ;; This function is called by:
  1373 ;;		_main
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           	psect	text5
  1378  000BE2                     __ptext5:
  1379                           	opt stack 0
  1380  000BE2                     _ReadHeight:
  1381                           	opt stack 27
  1382  000BE2                     l776:
  1383  000BE2  A4A4               	btfss	4004,2,c	;volatile
  1384  000BE4  D7FE               	goto	l776
  1385                           
  1386                           ;ultrasonic.c: 29: TMR5GIF = 0;
  1387  000BE6  94A4               	bcf	4004,2,c	;volatile
  1388                           
  1389                           ;ultrasonic.c: 30: time_height = 0;
  1390  000BE8  0E00               	movlw	0
  1391  000BEA  6E2C               	movwf	_time_height+1,c
  1392  000BEC  0E00               	movlw	0
  1393  000BEE  6E2B               	movwf	_time_height,c
  1394                           
  1395                           ;ultrasonic.c: 31: time_height = TMR5H;
  1396  000BF0  CF50 F02B          	movff	3920,_time_height	;volatile
  1397  000BF4  6A2C               	clrf	_time_height+1,c
  1398                           
  1399                           ;ultrasonic.c: 32: time_height <<= 8;
  1400  000BF6  502B               	movf	_time_height,w,c
  1401  000BF8  6E2C               	movwf	_time_height+1,c
  1402  000BFA  6A2B               	clrf	_time_height,c
  1403                           
  1404                           ;ultrasonic.c: 33: time_height |= TMR5L;
  1405  000BFC  010F               	movlb	15	; () banked
  1406  000BFE  514F               	movf	79,w,b	;volatile
  1407  000C00  122B               	iorwf	_time_height,f,c
  1408                           
  1409                           ; BSR set to: 15
  1410                           ;ultrasonic.c: 34: TMR5L = 0;
  1411  000C02  0E00               	movlw	0
  1412  000C04  010F               	movlb	15	; () banked
  1413  000C06  6F4F               	movwf	79,b	;volatile
  1414                           
  1415                           ; BSR set to: 15
  1416                           ;ultrasonic.c: 35: TMR5H = 0;
  1417  000C08  0E00               	movlw	0
  1418  000C0A  010F               	movlb	15	; () banked
  1419  000C0C  6F50               	movwf	80,b	;volatile
  1420                           
  1421                           ; BSR set to: 15
  1422                           ;ultrasonic.c: 36: a_frame[0].height = time_height;
  1423  000C0E  C02B  F007         	movff	_time_height,_a_frame+6
  1424  000C12  C02C  F008         	movff	_time_height+1,_a_frame+7
  1425                           
  1426                           ; BSR set to: 15
  1427                           ;ultrasonic.c: 37: a_frame_dif[0].dif_height = a_frame[1].height - a_frame[0].height;
  1428  000C16  EE20  F007         	lfsr	2,_a_frame+6
  1429  000C1A  CFDE F0D8          	movff	postinc2,??_ReadHeight
  1430  000C1E  CFDD F0D9          	movff	postdec2,??_ReadHeight+1
  1431  000C22  0100               	movlb	0	; () banked
  1432  000C24  1FD8               	comf	??_ReadHeight& (0+255),f,b
  1433  000C26  1FD9               	comf	(??_ReadHeight+1)& (0+255),f,b
  1434  000C28  4BD8               	infsnz	??_ReadHeight& (0+255),f,b
  1435  000C2A  2BD9               	incf	(??_ReadHeight+1)& (0+255),f,b
  1436  000C2C  5011               	movf	_a_frame+16,w,c
  1437  000C2E  0100               	movlb	0	; () banked
  1438  000C30  25D8               	addwf	??_ReadHeight& (0+255),w,b
  1439  000C32  6E1B               	movwf	_a_frame_dif+6,c
  1440  000C34  5012               	movf	_a_frame+17,w,c
  1441  000C36  0100               	movlb	0	; () banked
  1442  000C38  21D9               	addwfc	(??_ReadHeight+1)& (0+255),w,b
  1443  000C3A  6E1C               	movwf	_a_frame_dif+7,c
  1444                           
  1445                           ; BSR set to: 0
  1446                           ;ultrasonic.c: 38: PORTBbits.RB3 = 1;
  1447  000C3C  8681               	bsf	3969,3,c	;volatile
  1448                           
  1449                           ; BSR set to: 0
  1450  000C3E  0012               	return		;funcret
  1451  000C40                     __end_of_ReadHeight:
  1452                           	opt stack 0
  1453                           tblptru	equ	0xFF8
  1454                           tblptrh	equ	0xFF7
  1455                           tblptrl	equ	0xFF6
  1456                           tablat	equ	0xFF5
  1457                           prodh	equ	0xFF4
  1458                           prodl	equ	0xFF3
  1459                           postinc0	equ	0xFEE
  1460                           wreg	equ	0xFE8
  1461                           postdec1	equ	0xFE5
  1462                           fsr1l	equ	0xFE1
  1463                           postinc2	equ	0xFDE
  1464                           postdec2	equ	0xFDD
  1465                           fsr2h	equ	0xFDA
  1466                           fsr2l	equ	0xFD9
  1467                           status	equ	0xFD8
  1468                           
  1469 ;; *************** function _Init *****************
  1470 ;; Defined at:
  1471 ;;		line 30 in file "init.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;		None               void
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;Total ram usage:        0 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:    4
  1492 ;; This function calls:
  1493 ;;		_InitActors
  1494 ;;		_InitAnsel
  1495 ;;		_InitComp
  1496 ;;		_InitInterrupt
  1497 ;;		_InitOsc
  1498 ;;		_InitPort
  1499 ;;		_InitSpi
  1500 ;;		_InitTimer
  1501 ;;		_InitTris
  1502 ;;		_InitUart
  1503 ;; This function is called by:
  1504 ;;		_main
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text6
  1509  000E9C                     __ptext6:
  1510                           	opt stack 0
  1511  000E9C                     _Init:
  1512                           	opt stack 26
  1513                           
  1514                           ;init.c: 31: InitPort();
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;incstack = 0
  1518  000E9C  EC93  F007         	call	_InitPort	;wreg free
  1519                           
  1520                           ;init.c: 32: InitTris();
  1521  000EA0  EC88  F007         	call	_InitTris	;wreg free
  1522                           
  1523                           ;init.c: 33: InitAnsel();
  1524  000EA4  EC78  F007         	call	_InitAnsel	;wreg free
  1525                           
  1526                           ;init.c: 34: InitOsc();
  1527  000EA8  ECDE  F007         	call	_InitOsc	;wreg free
  1528                           
  1529                           ;init.c: 35: InitUart();
  1530  000EAC  ECE8  F007         	call	_InitUart	;wreg free
  1531                           
  1532                           ;init.c: 36: InitSpi();
  1533  000EB0  ECD9  F007         	call	_InitSpi	;wreg free
  1534                           
  1535                           ;init.c: 37: InitTimer();
  1536  000EB4  EC20  F006         	call	_InitTimer	;wreg free
  1537                           
  1538                           ;init.c: 38: InitComp();
  1539  000EB8  ECE3  F007         	call	_InitComp	;wreg free
  1540                           
  1541                           ;init.c: 39: InitInterrupt();
  1542  000EBC  ECD2  F007         	call	_InitInterrupt	;wreg free
  1543                           
  1544                           ;init.c: 40: InitActors();
  1545  000EC0  EC63  F007         	call	_InitActors	;wreg free
  1546  000EC4  0012               	return		;funcret
  1547  000EC6                     __end_of_Init:
  1548                           	opt stack 0
  1549                           tblptru	equ	0xFF8
  1550                           tblptrh	equ	0xFF7
  1551                           tblptrl	equ	0xFF6
  1552                           tablat	equ	0xFF5
  1553                           prodh	equ	0xFF4
  1554                           prodl	equ	0xFF3
  1555                           postinc0	equ	0xFEE
  1556                           wreg	equ	0xFE8
  1557                           postdec1	equ	0xFE5
  1558                           fsr1l	equ	0xFE1
  1559                           postinc2	equ	0xFDE
  1560                           postdec2	equ	0xFDD
  1561                           fsr2h	equ	0xFDA
  1562                           fsr2l	equ	0xFD9
  1563                           status	equ	0xFD8
  1564                           
  1565 ;; *************** function _InitUart *****************
  1566 ;; Defined at:
  1567 ;;		line 84 in file "init.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;		None
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;		None
  1572 ;; Return value:  Size  Location     Type
  1573 ;;		None               void
  1574 ;; Registers used:
  1575 ;;		None
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;Total ram usage:        0 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    3
  1588 ;; This function calls:
  1589 ;;		Nothing
  1590 ;; This function is called by:
  1591 ;;		_Init
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           	psect	text7
  1596  000FD0                     __ptext7:
  1597                           	opt stack 0
  1598  000FD0                     _InitUart:
  1599                           	opt stack 26
  1600                           
  1601                           ;incstack = 0
  1602  000FD0  0012               	return		;funcret
  1603  000FD2                     __end_of_InitUart:
  1604                           	opt stack 0
  1605                           tblptru	equ	0xFF8
  1606                           tblptrh	equ	0xFF7
  1607                           tblptrl	equ	0xFF6
  1608                           tablat	equ	0xFF5
  1609                           prodh	equ	0xFF4
  1610                           prodl	equ	0xFF3
  1611                           postinc0	equ	0xFEE
  1612                           wreg	equ	0xFE8
  1613                           postdec1	equ	0xFE5
  1614                           fsr1l	equ	0xFE1
  1615                           postinc2	equ	0xFDE
  1616                           postdec2	equ	0xFDD
  1617                           fsr2h	equ	0xFDA
  1618                           fsr2l	equ	0xFD9
  1619                           status	equ	0xFD8
  1620                           
  1621 ;; *************** function _InitTris *****************
  1622 ;; Defined at:
  1623 ;;		line 55 in file "init.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;		None
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;		None
  1628 ;; Return value:  Size  Location     Type
  1629 ;;		None               void
  1630 ;; Registers used:
  1631 ;;		wreg, status,2
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;Total ram usage:        0 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; Hardware stack levels required when called:    3
  1644 ;; This function calls:
  1645 ;;		Nothing
  1646 ;; This function is called by:
  1647 ;;		_Init
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651                           	psect	text8
  1652  000F10                     __ptext8:
  1653                           	opt stack 0
  1654  000F10                     _InitTris:
  1655                           	opt stack 26
  1656                           
  1657                           ;init.c: 56: TRISA = 0b00000000;
  1658                           
  1659                           ;incstack = 0
  1660  000F10  0E00               	movlw	0
  1661  000F12  6E92               	movwf	3986,c	;volatile
  1662                           
  1663                           ;init.c: 57: TRISB = 0b00010000;
  1664  000F14  0E10               	movlw	16
  1665  000F16  6E93               	movwf	3987,c	;volatile
  1666                           
  1667                           ;init.c: 58: TRISC = 0b10010001;
  1668  000F18  0E91               	movlw	145
  1669  000F1A  6E94               	movwf	3988,c	;volatile
  1670                           
  1671                           ;init.c: 59: TRISD = 0b01010000;
  1672  000F1C  0E50               	movlw	80
  1673  000F1E  6E95               	movwf	3989,c	;volatile
  1674                           
  1675                           ;init.c: 60: TRISE = 0b00000000;
  1676  000F20  0E00               	movlw	0
  1677  000F22  6E96               	movwf	3990,c	;volatile
  1678  000F24  0012               	return		;funcret
  1679  000F26                     __end_of_InitTris:
  1680                           	opt stack 0
  1681                           tblptru	equ	0xFF8
  1682                           tblptrh	equ	0xFF7
  1683                           tblptrl	equ	0xFF6
  1684                           tablat	equ	0xFF5
  1685                           prodh	equ	0xFF4
  1686                           prodl	equ	0xFF3
  1687                           postinc0	equ	0xFEE
  1688                           wreg	equ	0xFE8
  1689                           postdec1	equ	0xFE5
  1690                           fsr1l	equ	0xFE1
  1691                           postinc2	equ	0xFDE
  1692                           postdec2	equ	0xFDD
  1693                           fsr2h	equ	0xFDA
  1694                           fsr2l	equ	0xFD9
  1695                           status	equ	0xFD8
  1696                           
  1697 ;; *************** function _InitTimer *****************
  1698 ;; Defined at:
  1699 ;;		line 123 in file "init.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;		None               void
  1706 ;; Registers used:
  1707 ;;		wreg, status,2
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;Total ram usage:        0 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:    3
  1720 ;; This function calls:
  1721 ;;		Nothing
  1722 ;; This function is called by:
  1723 ;;		_Init
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text9
  1728  000C40                     __ptext9:
  1729                           	opt stack 0
  1730  000C40                     _InitTimer:
  1731                           	opt stack 26
  1732                           
  1733                           ;init.c: 125: T1CONbits.TMR1CS = 0b00;
  1734                           
  1735                           ;incstack = 0
  1736  000C40  0E3F               	movlw	-193
  1737  000C42  16CD               	andwf	4045,f,c	;volatile
  1738                           
  1739                           ;init.c: 126: T1CONbits.T1CKPS = 0b01;
  1740  000C44  50CD               	movf	4045,w,c	;volatile
  1741  000C46  0BCF               	andlw	-49
  1742  000C48  0910               	iorlw	16
  1743  000C4A  6ECD               	movwf	4045,c	;volatile
  1744                           
  1745                           ;init.c: 127: T1CONbits.nT1SYNC = 1;
  1746  000C4C  84CD               	bsf	4045,2,c	;volatile
  1747                           
  1748                           ;init.c: 128: T1CONbits.TMR1ON = 0;
  1749  000C4E  90CD               	bcf	4045,0,c	;volatile
  1750                           
  1751                           ;init.c: 129: TMR1H = 0;
  1752  000C50  0E00               	movlw	0
  1753  000C52  6ECF               	movwf	4047,c	;volatile
  1754                           
  1755                           ;init.c: 130: TMR1L = 0;
  1756  000C54  0E00               	movlw	0
  1757  000C56  6ECE               	movwf	4046,c	;volatile
  1758                           
  1759                           ;init.c: 134: T3GCONbits.TMR3GE = 1;
  1760  000C58  8EB4               	bsf	4020,7,c	;volatile
  1761                           
  1762                           ;init.c: 135: T3GCONbits.T3GSPM = 0;
  1763  000C5A  98B4               	bcf	4020,4,c	;volatile
  1764                           
  1765                           ;init.c: 136: T3GCONbits.T3GTM = 0;
  1766  000C5C  9AB4               	bcf	4020,5,c	;volatile
  1767                           
  1768                           ;init.c: 137: T3GCONbits.T3GPOL = 1;
  1769  000C5E  8CB4               	bsf	4020,6,c	;volatile
  1770                           
  1771                           ;init.c: 138: T3GCONbits.T3GSS = 0b00;
  1772  000C60  0EFC               	movlw	-4
  1773  000C62  16B4               	andwf	4020,f,c	;volatile
  1774                           
  1775                           ;init.c: 140: T3CONbits.TMR3CS = 0b00;
  1776  000C64  0E3F               	movlw	-193
  1777  000C66  16B1               	andwf	4017,f,c	;volatile
  1778                           
  1779                           ;init.c: 141: T3CONbits.T3CKPS = 0b00;
  1780  000C68  0ECF               	movlw	-49
  1781  000C6A  16B1               	andwf	4017,f,c	;volatile
  1782                           
  1783                           ;init.c: 142: T3CONbits.nT3SYNC = 1;
  1784  000C6C  84B1               	bsf	4017,2,c	;volatile
  1785                           
  1786                           ;init.c: 143: T3CONbits.TMR3ON = 1;
  1787  000C6E  80B1               	bsf	4017,0,c	;volatile
  1788                           
  1789                           ;init.c: 147: T5GCONbits.TMR5GE = 1;
  1790  000C70  010F               	movlb	15	; () banked
  1791  000C72  8F4D               	bsf	77,7,b	;volatile
  1792                           
  1793                           ; BSR set to: 15
  1794                           ;init.c: 148: T5GCONbits.T5GSPM = 0;
  1795  000C74  010F               	movlb	15	; () banked
  1796  000C76  994D               	bcf	77,4,b	;volatile
  1797                           
  1798                           ; BSR set to: 15
  1799                           ;init.c: 149: T5GCONbits.T5GTM = 0;
  1800  000C78  010F               	movlb	15	; () banked
  1801  000C7A  9B4D               	bcf	77,5,b	;volatile
  1802                           
  1803                           ; BSR set to: 15
  1804                           ;init.c: 150: T5GCONbits.T5GPOL = 1;
  1805  000C7C  010F               	movlb	15	; () banked
  1806  000C7E  8D4D               	bsf	77,6,b	;volatile
  1807                           
  1808                           ;init.c: 151: T5GCONbits.T5GSS = 0b00;
  1809  000C80  0EFC               	movlw	-4
  1810  000C82  010F               	movlb	15	; () banked
  1811  000C84  174D               	andwf	77,f,b	;volatile
  1812                           
  1813                           ;init.c: 153: T5CONbits.TMR5CS = 0b00;
  1814  000C86  0E3F               	movlw	-193
  1815  000C88  010F               	movlb	15	; () banked
  1816  000C8A  174E               	andwf	78,f,b	;volatile
  1817                           
  1818                           ;init.c: 154: T5CONbits.T5CKPS = 0b00;
  1819  000C8C  0ECF               	movlw	-49
  1820  000C8E  010F               	movlb	15	; () banked
  1821  000C90  174E               	andwf	78,f,b	;volatile
  1822                           
  1823                           ; BSR set to: 15
  1824                           ;init.c: 155: T5CONbits.nT5SYNC = 1;
  1825  000C92  010F               	movlb	15	; () banked
  1826  000C94  854E               	bsf	78,2,b	;volatile
  1827                           
  1828                           ; BSR set to: 15
  1829                           ;init.c: 156: T5CONbits.TMR5ON = 1;
  1830  000C96  010F               	movlb	15	; () banked
  1831  000C98  814E               	bsf	78,0,b	;volatile
  1832                           
  1833                           ; BSR set to: 15
  1834  000C9A  0012               	return		;funcret
  1835  000C9C                     __end_of_InitTimer:
  1836                           	opt stack 0
  1837                           tblptru	equ	0xFF8
  1838                           tblptrh	equ	0xFF7
  1839                           tblptrl	equ	0xFF6
  1840                           tablat	equ	0xFF5
  1841                           prodh	equ	0xFF4
  1842                           prodl	equ	0xFF3
  1843                           postinc0	equ	0xFEE
  1844                           wreg	equ	0xFE8
  1845                           postdec1	equ	0xFE5
  1846                           fsr1l	equ	0xFE1
  1847                           postinc2	equ	0xFDE
  1848                           postdec2	equ	0xFDD
  1849                           fsr2h	equ	0xFDA
  1850                           fsr2l	equ	0xFD9
  1851                           status	equ	0xFD8
  1852                           
  1853 ;; *************** function _InitSpi *****************
  1854 ;; Defined at:
  1855 ;;		line 97 in file "init.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;		None
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;		None
  1860 ;; Return value:  Size  Location     Type
  1861 ;;		None               void
  1862 ;; Registers used:
  1863 ;;		wreg, status,2
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1873 ;;Total ram usage:        0 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:    3
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_Init
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           	psect	text10
  1884  000FB2                     __ptext10:
  1885                           	opt stack 0
  1886  000FB2                     _InitSpi:
  1887                           	opt stack 26
  1888                           
  1889                           ;init.c: 98: SSP1STAT = 0b00000000;
  1890                           
  1891                           ; BSR set to: 15
  1892                           ;incstack = 0
  1893  000FB2  0E00               	movlw	0
  1894  000FB4  6EC7               	movwf	4039,c	;volatile
  1895                           
  1896                           ;init.c: 99: SSP1CON1 = 0b00100001;
  1897  000FB6  0E21               	movlw	33
  1898  000FB8  6EC6               	movwf	4038,c	;volatile
  1899  000FBA  0012               	return		;funcret
  1900  000FBC                     __end_of_InitSpi:
  1901                           	opt stack 0
  1902                           tblptru	equ	0xFF8
  1903                           tblptrh	equ	0xFF7
  1904                           tblptrl	equ	0xFF6
  1905                           tablat	equ	0xFF5
  1906                           prodh	equ	0xFF4
  1907                           prodl	equ	0xFF3
  1908                           postinc0	equ	0xFEE
  1909                           wreg	equ	0xFE8
  1910                           postdec1	equ	0xFE5
  1911                           fsr1l	equ	0xFE1
  1912                           postinc2	equ	0xFDE
  1913                           postdec2	equ	0xFDD
  1914                           fsr2h	equ	0xFDA
  1915                           fsr2l	equ	0xFD9
  1916                           status	equ	0xFD8
  1917                           
  1918 ;; *************** function _InitPort *****************
  1919 ;; Defined at:
  1920 ;;		line 45 in file "init.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;		None
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;		None
  1925 ;; Return value:  Size  Location     Type
  1926 ;;		None               void
  1927 ;; Registers used:
  1928 ;;		wreg, status,2
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;Total ram usage:        0 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; Hardware stack levels required when called:    3
  1941 ;; This function calls:
  1942 ;;		Nothing
  1943 ;; This function is called by:
  1944 ;;		_Init
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           	psect	text11
  1949  000F26                     __ptext11:
  1950                           	opt stack 0
  1951  000F26                     _InitPort:
  1952                           	opt stack 26
  1953                           
  1954                           ;init.c: 46: PORTA = 0b00000000;
  1955                           
  1956                           ;incstack = 0
  1957  000F26  0E00               	movlw	0
  1958  000F28  6E80               	movwf	3968,c	;volatile
  1959                           
  1960                           ;init.c: 47: PORTB = 0b00001000;
  1961  000F2A  0E08               	movlw	8
  1962  000F2C  6E81               	movwf	3969,c	;volatile
  1963                           
  1964                           ;init.c: 48: PORTC = 0b00000000;
  1965  000F2E  0E00               	movlw	0
  1966  000F30  6E82               	movwf	3970,c	;volatile
  1967                           
  1968                           ;init.c: 49: PORTD = 0b00001000;
  1969  000F32  0E08               	movlw	8
  1970  000F34  6E83               	movwf	3971,c	;volatile
  1971                           
  1972                           ;init.c: 50: PORTE = 0b00000000;
  1973  000F36  0E00               	movlw	0
  1974  000F38  6E84               	movwf	3972,c	;volatile
  1975  000F3A  0012               	return		;funcret
  1976  000F3C                     __end_of_InitPort:
  1977                           	opt stack 0
  1978                           tblptru	equ	0xFF8
  1979                           tblptrh	equ	0xFF7
  1980                           tblptrl	equ	0xFF6
  1981                           tablat	equ	0xFF5
  1982                           prodh	equ	0xFF4
  1983                           prodl	equ	0xFF3
  1984                           postinc0	equ	0xFEE
  1985                           wreg	equ	0xFE8
  1986                           postdec1	equ	0xFE5
  1987                           fsr1l	equ	0xFE1
  1988                           postinc2	equ	0xFDE
  1989                           postdec2	equ	0xFDD
  1990                           fsr2h	equ	0xFDA
  1991                           fsr2l	equ	0xFD9
  1992                           status	equ	0xFD8
  1993                           
  1994 ;; *************** function _InitOsc *****************
  1995 ;; Defined at:
  1996 ;;		line 75 in file "init.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;		None
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;		None
  2001 ;; Return value:  Size  Location     Type
  2002 ;;		None               void
  2003 ;; Registers used:
  2004 ;;		wreg, status,2
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2014 ;;Total ram usage:        0 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:    3
  2017 ;; This function calls:
  2018 ;;		Nothing
  2019 ;; This function is called by:
  2020 ;;		_Init
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text12
  2025  000FBC                     __ptext12:
  2026                           	opt stack 0
  2027  000FBC                     _InitOsc:
  2028                           	opt stack 26
  2029                           
  2030                           ;init.c: 76: OSCCON = 0b01110111;
  2031                           
  2032                           ;incstack = 0
  2033  000FBC  0E77               	movlw	119
  2034  000FBE  6ED3               	movwf	4051,c	;volatile
  2035                           
  2036                           ;init.c: 78: OSCCON2bits.PLLRDY = 1;
  2037  000FC0  8ED2               	bsf	4050,7,c	;volatile
  2038                           
  2039                           ;init.c: 79: OSCTUNEbits.PLLEN = 1;
  2040  000FC2  8C9B               	bsf	3995,6,c	;volatile
  2041  000FC4  0012               	return		;funcret
  2042  000FC6                     __end_of_InitOsc:
  2043                           	opt stack 0
  2044                           tblptru	equ	0xFF8
  2045                           tblptrh	equ	0xFF7
  2046                           tblptrl	equ	0xFF6
  2047                           tablat	equ	0xFF5
  2048                           prodh	equ	0xFF4
  2049                           prodl	equ	0xFF3
  2050                           postinc0	equ	0xFEE
  2051                           wreg	equ	0xFE8
  2052                           postdec1	equ	0xFE5
  2053                           fsr1l	equ	0xFE1
  2054                           postinc2	equ	0xFDE
  2055                           postdec2	equ	0xFDD
  2056                           fsr2h	equ	0xFDA
  2057                           fsr2l	equ	0xFD9
  2058                           status	equ	0xFD8
  2059                           
  2060 ;; *************** function _InitInterrupt *****************
  2061 ;; Defined at:
  2062 ;;		line 176 in file "init.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;		None
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;		None
  2067 ;; Return value:  Size  Location     Type
  2068 ;;		None               void
  2069 ;; Registers used:
  2070 ;;		None
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;Total ram usage:        0 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:    3
  2083 ;; This function calls:
  2084 ;;		Nothing
  2085 ;; This function is called by:
  2086 ;;		_Init
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           	psect	text13
  2091  000FA4                     __ptext13:
  2092                           	opt stack 0
  2093  000FA4                     _InitInterrupt:
  2094                           	opt stack 26
  2095                           
  2096                           ;init.c: 178: TMR3GIE = 1;
  2097                           
  2098                           ;incstack = 0
  2099  000FA4  82A3               	bsf	4003,1,c	;volatile
  2100                           
  2101                           ;init.c: 179: TMR3IF = 0;
  2102  000FA6  92A1               	bcf	4001,1,c	;volatile
  2103                           
  2104                           ;init.c: 181: CCP1IE = 1;
  2105  000FA8  849D               	bsf	3997,2,c	;volatile
  2106                           
  2107                           ;init.c: 182: CCP1IF = 0;
  2108  000FAA  949E               	bcf	3998,2,c	;volatile
  2109                           
  2110                           ;init.c: 184: PEIE = 1;
  2111  000FAC  8CF2               	bsf	intcon,6,c	;volatile
  2112                           
  2113                           ;init.c: 185: GIE = 1;
  2114  000FAE  8EF2               	bsf	intcon,7,c	;volatile
  2115  000FB0  0012               	return		;funcret
  2116  000FB2                     __end_of_InitInterrupt:
  2117                           	opt stack 0
  2118                           tblptru	equ	0xFF8
  2119                           tblptrh	equ	0xFF7
  2120                           tblptrl	equ	0xFF6
  2121                           tablat	equ	0xFF5
  2122                           prodh	equ	0xFF4
  2123                           prodl	equ	0xFF3
  2124                           intcon	equ	0xFF2
  2125                           postinc0	equ	0xFEE
  2126                           wreg	equ	0xFE8
  2127                           postdec1	equ	0xFE5
  2128                           fsr1l	equ	0xFE1
  2129                           postinc2	equ	0xFDE
  2130                           postdec2	equ	0xFDD
  2131                           fsr2h	equ	0xFDA
  2132                           fsr2l	equ	0xFD9
  2133                           status	equ	0xFD8
  2134                           
  2135 ;; *************** function _InitComp *****************
  2136 ;; Defined at:
  2137 ;;		line 166 in file "init.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;		None
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;		None
  2142 ;; Return value:  Size  Location     Type
  2143 ;;		None               void
  2144 ;; Registers used:
  2145 ;;		wreg, status,2
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;Total ram usage:        0 bytes
  2156 ;; Hardware stack levels used:    1
  2157 ;; Hardware stack levels required when called:    3
  2158 ;; This function calls:
  2159 ;;		Nothing
  2160 ;; This function is called by:
  2161 ;;		_Init
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           	psect	text14
  2166  000FC6                     __ptext14:
  2167                           	opt stack 0
  2168  000FC6                     _InitComp:
  2169                           	opt stack 26
  2170                           
  2171                           ;init.c: 167: CCP1CONbits.CCP1M = 0b1010;
  2172                           
  2173                           ;incstack = 0
  2174  000FC6  50BD               	movf	4029,w,c	;volatile
  2175  000FC8  0BF0               	andlw	-16
  2176  000FCA  090A               	iorlw	10
  2177  000FCC  6EBD               	movwf	4029,c	;volatile
  2178  000FCE  0012               	return		;funcret
  2179  000FD0                     __end_of_InitComp:
  2180                           	opt stack 0
  2181                           tblptru	equ	0xFF8
  2182                           tblptrh	equ	0xFF7
  2183                           tblptrl	equ	0xFF6
  2184                           tablat	equ	0xFF5
  2185                           prodh	equ	0xFF4
  2186                           prodl	equ	0xFF3
  2187                           intcon	equ	0xFF2
  2188                           postinc0	equ	0xFEE
  2189                           wreg	equ	0xFE8
  2190                           postdec1	equ	0xFE5
  2191                           fsr1l	equ	0xFE1
  2192                           postinc2	equ	0xFDE
  2193                           postdec2	equ	0xFDD
  2194                           fsr2h	equ	0xFDA
  2195                           fsr2l	equ	0xFD9
  2196                           status	equ	0xFD8
  2197                           
  2198 ;; *************** function _InitAnsel *****************
  2199 ;; Defined at:
  2200 ;;		line 65 in file "init.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;		None
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;		None
  2205 ;; Return value:  Size  Location     Type
  2206 ;;		None               void
  2207 ;; Registers used:
  2208 ;;		wreg, status,2
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2218 ;;Total ram usage:        0 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; Hardware stack levels required when called:    3
  2221 ;; This function calls:
  2222 ;;		Nothing
  2223 ;; This function is called by:
  2224 ;;		_Init
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           	psect	text15
  2229  000EF0                     __ptext15:
  2230                           	opt stack 0
  2231  000EF0                     _InitAnsel:
  2232                           	opt stack 26
  2233                           
  2234                           ;init.c: 66: ANSELA = 0b00000000;
  2235                           
  2236                           ;incstack = 0
  2237  000EF0  0E00               	movlw	0
  2238  000EF2  010F               	movlb	15	; () banked
  2239  000EF4  6F38               	movwf	56,b	;volatile
  2240                           
  2241                           ;init.c: 67: ANSELB = 0b00000000;
  2242  000EF6  0E00               	movlw	0
  2243  000EF8  010F               	movlb	15	; () banked
  2244  000EFA  6F39               	movwf	57,b	;volatile
  2245                           
  2246                           ;init.c: 68: ANSELC = 0b00000000;
  2247  000EFC  0E00               	movlw	0
  2248  000EFE  010F               	movlb	15	; () banked
  2249  000F00  6F3A               	movwf	58,b	;volatile
  2250                           
  2251                           ;init.c: 69: ANSELD = 0b00000000;
  2252  000F02  0E00               	movlw	0
  2253  000F04  010F               	movlb	15	; () banked
  2254  000F06  6F3B               	movwf	59,b	;volatile
  2255                           
  2256                           ;init.c: 70: ANSELE = 0b00000000;
  2257  000F08  0E00               	movlw	0
  2258  000F0A  010F               	movlb	15	; () banked
  2259  000F0C  6F3C               	movwf	60,b	;volatile
  2260                           
  2261                           ; BSR set to: 15
  2262  000F0E  0012               	return		;funcret
  2263  000F10                     __end_of_InitAnsel:
  2264                           	opt stack 0
  2265                           tblptru	equ	0xFF8
  2266                           tblptrh	equ	0xFF7
  2267                           tblptrl	equ	0xFF6
  2268                           tablat	equ	0xFF5
  2269                           prodh	equ	0xFF4
  2270                           prodl	equ	0xFF3
  2271                           intcon	equ	0xFF2
  2272                           postinc0	equ	0xFEE
  2273                           wreg	equ	0xFE8
  2274                           postdec1	equ	0xFE5
  2275                           fsr1l	equ	0xFE1
  2276                           postinc2	equ	0xFDE
  2277                           postdec2	equ	0xFDD
  2278                           fsr2h	equ	0xFDA
  2279                           fsr2l	equ	0xFD9
  2280                           status	equ	0xFD8
  2281                           
  2282 ;; *************** function _InitActors *****************
  2283 ;; Defined at:
  2284 ;;		line 192 in file "init.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;		None
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;		None
  2289 ;; Return value:  Size  Location     Type
  2290 ;;		None               void
  2291 ;; Registers used:
  2292 ;;		wreg, status,2
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;Total ram usage:        0 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    3
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		_Init
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           	psect	text16
  2313  000EC6                     __ptext16:
  2314                           	opt stack 0
  2315  000EC6                     _InitActors:
  2316                           	opt stack 26
  2317                           
  2318                           ;init.c: 193: a_actors[0].aile = 500;
  2319                           
  2320                           ; BSR set to: 15
  2321                           ;incstack = 0
  2322  000EC6  0E01               	movlw	1
  2323  000EC8  0100               	movlb	0	; () banked
  2324  000ECA  6FD1               	movwf	(_a_actors+1)& (0+255),b
  2325  000ECC  0EF4               	movlw	244
  2326  000ECE  6FD0               	movwf	_a_actors& (0+255),b
  2327                           
  2328                           ;init.c: 194: a_actors[0].elev = 500;
  2329  000ED0  0E01               	movlw	1
  2330  000ED2  0100               	movlb	0	; () banked
  2331  000ED4  6FD3               	movwf	(_a_actors+3)& (0+255),b
  2332  000ED6  0EF4               	movlw	244
  2333  000ED8  6FD2               	movwf	(_a_actors+2)& (0+255),b
  2334                           
  2335                           ;init.c: 195: a_actors[0].thro = 0;
  2336  000EDA  0E00               	movlw	0
  2337  000EDC  0100               	movlb	0	; () banked
  2338  000EDE  6FD5               	movwf	(_a_actors+5)& (0+255),b
  2339  000EE0  0E00               	movlw	0
  2340  000EE2  6FD4               	movwf	(_a_actors+4)& (0+255),b
  2341                           
  2342                           ;init.c: 196: a_actors[0].rudd = 500;
  2343  000EE4  0E01               	movlw	1
  2344  000EE6  0100               	movlb	0	; () banked
  2345  000EE8  6FD7               	movwf	(_a_actors+7)& (0+255),b
  2346  000EEA  0EF4               	movlw	244
  2347  000EEC  6FD6               	movwf	(_a_actors+6)& (0+255),b
  2348                           
  2349                           ; BSR set to: 0
  2350  000EEE  0012               	return		;funcret
  2351  000EF0                     __end_of_InitActors:
  2352                           	opt stack 0
  2353                           tblptru	equ	0xFF8
  2354                           tblptrh	equ	0xFF7
  2355                           tblptrl	equ	0xFF6
  2356                           tablat	equ	0xFF5
  2357                           prodh	equ	0xFF4
  2358                           prodl	equ	0xFF3
  2359                           intcon	equ	0xFF2
  2360                           postinc0	equ	0xFEE
  2361                           wreg	equ	0xFE8
  2362                           postdec1	equ	0xFE5
  2363                           fsr1l	equ	0xFE1
  2364                           postinc2	equ	0xFDE
  2365                           postdec2	equ	0xFDD
  2366                           fsr2h	equ	0xFDA
  2367                           fsr2l	equ	0xFD9
  2368                           status	equ	0xFD8
  2369                           
  2370 ;; *************** function _CompareFrames *****************
  2371 ;; Defined at:
  2372 ;;		line 32 in file "position.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;		None
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;		None
  2377 ;; Return value:  Size  Location     Type
  2378 ;;		None               void
  2379 ;; Registers used:
  2380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2388 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2389 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2390 ;;Total ram usage:        2 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:    5
  2393 ;; This function calls:
  2394 ;;		_CheckAileron
  2395 ;;		_CheckElevator
  2396 ;;		_CheckRudderAhead
  2397 ;;		_CheckRudderBack
  2398 ;; This function is called by:
  2399 ;;		_main
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text17
  2404  000AA0                     __ptext17:
  2405                           	opt stack 0
  2406  000AA0                     _CompareFrames:
  2407                           	opt stack 25
  2408                           
  2409                           ;position.c: 34: a_frame_dif[0].dif_height = a_frame[1].height - a_frame[0].height;
  2410                           
  2411                           ; BSR set to: 0
  2412                           ;incstack = 0
  2413  000AA0  EE20  F007         	lfsr	2,_a_frame+6
  2414  000AA4  CFDE F0DA          	movff	postinc2,??_CompareFrames
  2415  000AA8  CFDD F0DB          	movff	postdec2,??_CompareFrames+1
  2416  000AAC  0100               	movlb	0	; () banked
  2417  000AAE  1FDA               	comf	??_CompareFrames& (0+255),f,b
  2418  000AB0  1FDB               	comf	(??_CompareFrames+1)& (0+255),f,b
  2419  000AB2  4BDA               	infsnz	??_CompareFrames& (0+255),f,b
  2420  000AB4  2BDB               	incf	(??_CompareFrames+1)& (0+255),f,b
  2421  000AB6  5011               	movf	_a_frame+16,w,c
  2422  000AB8  0100               	movlb	0	; () banked
  2423  000ABA  25DA               	addwf	??_CompareFrames& (0+255),w,b
  2424  000ABC  6E1B               	movwf	_a_frame_dif+6,c
  2425  000ABE  5012               	movf	_a_frame+17,w,c
  2426  000AC0  0100               	movlb	0	; () banked
  2427  000AC2  21DB               	addwfc	(??_CompareFrames+1)& (0+255),w,b
  2428  000AC4  6E1C               	movwf	_a_frame_dif+7,c
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;position.c: 36: if (a_frame[1].num == a_frame[0].num) {
  2432  000AC6  5001               	movf	_a_frame,w,c
  2433  000AC8  180B               	xorwf	_a_frame+10,w,c
  2434  000ACA  E149               	bnz	l950
  2435  000ACC  5002               	movf	_a_frame+1,w,c
  2436  000ACE  180C               	xorwf	_a_frame+11,w,c
  2437  000AD0  A4D8               	btfss	status,2,c
  2438  000AD2  0012               	return	
  2439                           
  2440                           ; BSR set to: 0
  2441                           ;position.c: 37: a_frame_dif[0].dif_pos_x = a_frame[1].pos_x - a_frame[0].pos_x;
  2442  000AD4  EE20  F003         	lfsr	2,_a_frame+2
  2443  000AD8  CFDE F0DA          	movff	postinc2,??_CompareFrames
  2444  000ADC  CFDD F0DB          	movff	postdec2,??_CompareFrames+1
  2445  000AE0  0100               	movlb	0	; () banked
  2446  000AE2  1FDA               	comf	??_CompareFrames& (0+255),f,b
  2447  000AE4  1FDB               	comf	(??_CompareFrames+1)& (0+255),f,b
  2448  000AE6  4BDA               	infsnz	??_CompareFrames& (0+255),f,b
  2449  000AE8  2BDB               	incf	(??_CompareFrames+1)& (0+255),f,b
  2450  000AEA  500D               	movf	_a_frame+12,w,c
  2451  000AEC  0100               	movlb	0	; () banked
  2452  000AEE  25DA               	addwf	??_CompareFrames& (0+255),w,b
  2453  000AF0  6E17               	movwf	_a_frame_dif+2,c
  2454  000AF2  500E               	movf	_a_frame+13,w,c
  2455  000AF4  0100               	movlb	0	; () banked
  2456  000AF6  21DB               	addwfc	(??_CompareFrames+1)& (0+255),w,b
  2457  000AF8  6E18               	movwf	_a_frame_dif+3,c
  2458                           
  2459                           ;position.c: 38: a_frame_dif[0].dif_pos_y = a_frame[1].pos_y - a_frame[0].pos_y;
  2460  000AFA  EE20  F005         	lfsr	2,_a_frame+4
  2461  000AFE  CFDE F0DA          	movff	postinc2,??_CompareFrames
  2462  000B02  CFDD F0DB          	movff	postdec2,??_CompareFrames+1
  2463  000B06  0100               	movlb	0	; () banked
  2464  000B08  1FDA               	comf	??_CompareFrames& (0+255),f,b
  2465  000B0A  1FDB               	comf	(??_CompareFrames+1)& (0+255),f,b
  2466  000B0C  4BDA               	infsnz	??_CompareFrames& (0+255),f,b
  2467  000B0E  2BDB               	incf	(??_CompareFrames+1)& (0+255),f,b
  2468  000B10  500F               	movf	_a_frame+14,w,c
  2469  000B12  0100               	movlb	0	; () banked
  2470  000B14  25DA               	addwf	??_CompareFrames& (0+255),w,b
  2471  000B16  6E19               	movwf	_a_frame_dif+4,c
  2472  000B18  5010               	movf	_a_frame+15,w,c
  2473  000B1A  0100               	movlb	0	; () banked
  2474  000B1C  21DB               	addwfc	(??_CompareFrames+1)& (0+255),w,b
  2475  000B1E  6E1A               	movwf	_a_frame_dif+5,c
  2476                           
  2477                           ;position.c: 39: a_frame_dif[0].dif_angle = a_frame[1].angle - a_frame[0].angle;
  2478  000B20  EE20  F009         	lfsr	2,_a_frame+8
  2479  000B24  CFDE F0DA          	movff	postinc2,??_CompareFrames
  2480  000B28  CFDD F0DB          	movff	postdec2,??_CompareFrames+1
  2481  000B2C  0100               	movlb	0	; () banked
  2482  000B2E  1FDA               	comf	??_CompareFrames& (0+255),f,b
  2483  000B30  1FDB               	comf	(??_CompareFrames+1)& (0+255),f,b
  2484  000B32  4BDA               	infsnz	??_CompareFrames& (0+255),f,b
  2485  000B34  2BDB               	incf	(??_CompareFrames+1)& (0+255),f,b
  2486  000B36  5013               	movf	_a_frame+18,w,c
  2487  000B38  0100               	movlb	0	; () banked
  2488  000B3A  25DA               	addwf	??_CompareFrames& (0+255),w,b
  2489  000B3C  6E1D               	movwf	_a_frame_dif+8,c
  2490  000B3E  5014               	movf	_a_frame+19,w,c
  2491  000B40  0100               	movlb	0	; () banked
  2492  000B42  21DB               	addwfc	(??_CompareFrames+1)& (0+255),w,b
  2493  000B44  6E1E               	movwf	_a_frame_dif+9,c
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;position.c: 40: CheckAileron();
  2497  000B46  ECEF  F004         	call	_CheckAileron	;wreg free
  2498                           
  2499                           ;position.c: 41: CheckElevator();
  2500  000B4A  EC8E  F004         	call	_CheckElevator	;wreg free
  2501                           
  2502                           ;position.c: 42: if (direction == 0) {
  2503  000B4E  B04F               	btfsc	_direction/(0+8),_direction& (0+7),c
  2504  000B50  D003               	goto	l3118
  2505                           
  2506                           ;position.c: 43: CheckRudderAhead();
  2507  000B52  EC1C  F004         	call	_CheckRudderAhead	;wreg free
  2508                           
  2509                           ;position.c: 44: } else {
  2510  000B56  0012               	return	
  2511  000B58                     l3118:
  2512                           
  2513                           ;position.c: 45: CheckRudderBack();
  2514  000B58  ECAA  F003         	call	_CheckRudderBack	;wreg free
  2515                           
  2516                           ;position.c: 48: return;
  2517                           
  2518                           ;position.c: 46: }
  2519                           ;position.c: 47: } else {
  2520  000B5C  0012               	return	
  2521  000B5E                     l950:
  2522  000B5E  0012               	return		;funcret
  2523  000B60                     __end_of_CompareFrames:
  2524                           	opt stack 0
  2525                           tblptru	equ	0xFF8
  2526                           tblptrh	equ	0xFF7
  2527                           tblptrl	equ	0xFF6
  2528                           tablat	equ	0xFF5
  2529                           prodh	equ	0xFF4
  2530                           prodl	equ	0xFF3
  2531                           intcon	equ	0xFF2
  2532                           postinc0	equ	0xFEE
  2533                           wreg	equ	0xFE8
  2534                           postdec1	equ	0xFE5
  2535                           fsr1l	equ	0xFE1
  2536                           postinc2	equ	0xFDE
  2537                           postdec2	equ	0xFDD
  2538                           fsr2h	equ	0xFDA
  2539                           fsr2l	equ	0xFD9
  2540                           status	equ	0xFD8
  2541                           
  2542 ;; *************** function _CheckRudderBack *****************
  2543 ;; Defined at:
  2544 ;;		line 391 in file "position.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;		None
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;		None
  2549 ;; Return value:  Size  Location     Type
  2550 ;;		None               void
  2551 ;; Registers used:
  2552 ;;		wreg, status,2, status,0, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;Total ram usage:        1 bytes
  2563 ;; Hardware stack levels used:    1
  2564 ;; Hardware stack levels required when called:    4
  2565 ;; This function calls:
  2566 ;;		_ActRudder
  2567 ;; This function is called by:
  2568 ;;		_CompareFrames
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           	psect	text18
  2573  000754                     __ptext18:
  2574                           	opt stack 0
  2575  000754                     _CheckRudderBack:
  2576                           	opt stack 25
  2577                           
  2578                           ;position.c: 394: if (a_frame[0].angle <= -175 || a_frame[0].angle >= 175) {
  2579                           
  2580                           ;incstack = 0
  2581  000754  AE0A               	btfss	_a_frame+9,7,c
  2582  000756  D006               	goto	l2954
  2583  000758  0E52               	movlw	82
  2584  00075A  5C09               	subwf	_a_frame+8,w,c
  2585  00075C  0EFF               	movlw	255
  2586  00075E  580A               	subwfb	_a_frame+9,w,c
  2587  000760  A0D8               	btfss	status,0,c
  2588  000762  D008               	goto	l2956
  2589  000764                     l2954:
  2590  000764  BE0A               	btfsc	_a_frame+9,7,c
  2591  000766  D00A               	goto	l2958
  2592  000768  500A               	movf	_a_frame+9,w,c
  2593  00076A  E104               	bnz	l2956
  2594  00076C  0EAF               	movlw	175
  2595  00076E  5C09               	subwf	_a_frame+8,w,c
  2596  000770  A0D8               	btfss	status,0,c
  2597  000772  D004               	goto	l2958
  2598  000774                     l2956:
  2599                           
  2600                           ;position.c: 395: ActRudder(0);
  2601  000774  0E00               	movlw	0
  2602  000776  EC9E  F007         	call	_ActRudder
  2603                           
  2604                           ;position.c: 396: }
  2605  00077A  0012               	return	
  2606  00077C                     l2958:
  2607                           
  2608                           ;position.c: 398: else if (a_frame[0].angle > -175) {
  2609  00077C  AE0A               	btfss	_a_frame+9,7,c
  2610  00077E  D006               	goto	l2960
  2611  000780  0E52               	movlw	82
  2612  000782  5C09               	subwf	_a_frame+8,w,c
  2613  000784  0EFF               	movlw	255
  2614  000786  580A               	subwfb	_a_frame+9,w,c
  2615  000788  A0D8               	btfss	status,0,c
  2616  00078A  D02C               	goto	l2974
  2617  00078C                     l2960:
  2618                           
  2619                           ;position.c: 400: if (a_frame[1].angle > a_frame[0].angle) {
  2620  00078C  5013               	movf	_a_frame+18,w,c
  2621  00078E  5C09               	subwf	_a_frame+8,w,c
  2622  000790  500A               	movf	_a_frame+9,w,c
  2623  000792  0A80               	xorlw	128
  2624  000794  0100               	movlb	0	; () banked
  2625  000796  6FD9               	movwf	??_CheckRudderBack& (0+255),b
  2626  000798  5014               	movf	_a_frame+19,w,c
  2627  00079A  0A80               	xorlw	128
  2628  00079C  0100               	movlb	0	; () banked
  2629  00079E  59D9               	subwfb	??_CheckRudderBack& (0+255),w,b
  2630  0007A0  B0D8               	btfsc	status,0,c
  2631  0007A2  D01C               	goto	l2972
  2632                           
  2633                           ; BSR set to: 0
  2634                           ;position.c: 402: if (a_frame_dif[0].dif_angle <= 2) {
  2635  0007A4  BE1E               	btfsc	_a_frame_dif+9,7,c
  2636  0007A6  D006               	goto	l2964
  2637  0007A8  501E               	movf	_a_frame_dif+9,w,c
  2638  0007AA  E114               	bnz	l2970
  2639  0007AC  0E03               	movlw	3
  2640  0007AE  5C1D               	subwf	_a_frame_dif+8,w,c
  2641  0007B0  B0D8               	btfsc	status,0,c
  2642  0007B2  D010               	goto	l2970
  2643  0007B4                     l2964:
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;position.c: 403: if (a_frame_dif[0].dif_angle <= 1) {
  2647  0007B4  BE1E               	btfsc	_a_frame_dif+9,7,c
  2648  0007B6  D006               	goto	l2966
  2649  0007B8  501E               	movf	_a_frame_dif+9,w,c
  2650  0007BA  E108               	bnz	l2968
  2651  0007BC  0E02               	movlw	2
  2652  0007BE  5C1D               	subwf	_a_frame_dif+8,w,c
  2653  0007C0  B0D8               	btfsc	status,0,c
  2654  0007C2  D004               	goto	l2968
  2655  0007C4                     l2966:
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;position.c: 404: ActRudder(-3);
  2659  0007C4  0EFD               	movlw	253
  2660  0007C6  EC9E  F007         	call	_ActRudder
  2661                           
  2662                           ;position.c: 405: } else {
  2663  0007CA  0012               	return	
  2664  0007CC                     l2968:
  2665                           
  2666                           ;position.c: 406: ActRudder(0);
  2667  0007CC  0E00               	movlw	0
  2668  0007CE  EC9E  F007         	call	_ActRudder
  2669                           
  2670                           ;position.c: 407: }
  2671                           ;position.c: 408: } else {
  2672  0007D2  0012               	return	
  2673  0007D4                     l2970:
  2674                           
  2675                           ;position.c: 410: ActRudder(3);
  2676  0007D4  0E03               	movlw	3
  2677  0007D6  EC9E  F007         	call	_ActRudder
  2678                           
  2679                           ;position.c: 411: }
  2680                           ;position.c: 412: } else {
  2681  0007DA  0012               	return	
  2682  0007DC                     l2972:
  2683                           
  2684                           ;position.c: 414: ActRudder(-3);
  2685  0007DC  0EFD               	movlw	253
  2686  0007DE  EC9E  F007         	call	_ActRudder
  2687                           
  2688                           ;position.c: 415: }
  2689                           ;position.c: 416: }
  2690  0007E2  0012               	return	
  2691  0007E4                     l2974:
  2692                           
  2693                           ;position.c: 418: else {
  2694                           ;position.c: 420: if (a_frame[1].angle < a_frame[0].angle) {
  2695  0007E4  5009               	movf	_a_frame+8,w,c
  2696  0007E6  5C13               	subwf	_a_frame+18,w,c
  2697  0007E8  5014               	movf	_a_frame+19,w,c
  2698  0007EA  0A80               	xorlw	128
  2699  0007EC  0100               	movlb	0	; () banked
  2700  0007EE  6FD9               	movwf	??_CheckRudderBack& (0+255),b
  2701  0007F0  500A               	movf	_a_frame+9,w,c
  2702  0007F2  0A80               	xorlw	128
  2703  0007F4  0100               	movlb	0	; () banked
  2704  0007F6  59D9               	subwfb	??_CheckRudderBack& (0+255),w,b
  2705  0007F8  B0D8               	btfsc	status,0,c
  2706  0007FA  D01A               	goto	l2986
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;position.c: 422: if (a_frame_dif[0].dif_angle <= -2) {
  2710  0007FC  AE1E               	btfss	_a_frame_dif+9,7,c
  2711  0007FE  D014               	goto	l2984
  2712  000800  281D               	incf	_a_frame_dif+8,w,c
  2713  000802  0EFF               	movlw	255
  2714  000804  581E               	subwfb	_a_frame_dif+9,w,c
  2715  000806  B0D8               	btfsc	status,0,c
  2716  000808  D00F               	goto	l2984
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;position.c: 423: if (a_frame_dif[0].dif_angle <= -2) {
  2720  00080A  AE1E               	btfss	_a_frame_dif+9,7,c
  2721  00080C  D009               	goto	l2982
  2722  00080E  281D               	incf	_a_frame_dif+8,w,c
  2723  000810  0EFF               	movlw	255
  2724  000812  581E               	subwfb	_a_frame_dif+9,w,c
  2725  000814  B0D8               	btfsc	status,0,c
  2726  000816  D004               	goto	l2982
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;position.c: 424: ActRudder(3);
  2730  000818  0E03               	movlw	3
  2731  00081A  EC9E  F007         	call	_ActRudder
  2732                           
  2733                           ;position.c: 425: } else {
  2734  00081E  0012               	return	
  2735  000820                     l2982:
  2736                           
  2737                           ;position.c: 426: ActRudder(0);
  2738  000820  0E00               	movlw	0
  2739  000822  EC9E  F007         	call	_ActRudder
  2740                           
  2741                           ;position.c: 427: }
  2742                           ;position.c: 428: } else {
  2743  000826  0012               	return	
  2744  000828                     l2984:
  2745                           
  2746                           ;position.c: 430: ActRudder(-3);
  2747  000828  0EFD               	movlw	253
  2748  00082A  EC9E  F007         	call	_ActRudder
  2749                           
  2750                           ;position.c: 431: }
  2751                           ;position.c: 432: } else {
  2752  00082E  0012               	return	
  2753  000830                     l2986:
  2754                           
  2755                           ;position.c: 434: ActRudder(3);
  2756  000830  0E03               	movlw	3
  2757  000832  EC9E  F007         	call	_ActRudder
  2758  000836  0012               	return	
  2759  000838                     __end_of_CheckRudderBack:
  2760                           	opt stack 0
  2761                           tblptru	equ	0xFF8
  2762                           tblptrh	equ	0xFF7
  2763                           tblptrl	equ	0xFF6
  2764                           tablat	equ	0xFF5
  2765                           prodh	equ	0xFF4
  2766                           prodl	equ	0xFF3
  2767                           intcon	equ	0xFF2
  2768                           postinc0	equ	0xFEE
  2769                           wreg	equ	0xFE8
  2770                           postdec1	equ	0xFE5
  2771                           fsr1l	equ	0xFE1
  2772                           postinc2	equ	0xFDE
  2773                           postdec2	equ	0xFDD
  2774                           fsr2h	equ	0xFDA
  2775                           fsr2l	equ	0xFD9
  2776                           status	equ	0xFD8
  2777                           
  2778 ;; *************** function _CheckRudderAhead *****************
  2779 ;; Defined at:
  2780 ;;		line 333 in file "position.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;		None
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;		None
  2785 ;; Return value:  Size  Location     Type
  2786 ;;		None               void
  2787 ;; Registers used:
  2788 ;;		wreg, status,2, status,0, cstack
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2796 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2797 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2798 ;;Total ram usage:        1 bytes
  2799 ;; Hardware stack levels used:    1
  2800 ;; Hardware stack levels required when called:    4
  2801 ;; This function calls:
  2802 ;;		_ActRudder
  2803 ;; This function is called by:
  2804 ;;		_CompareFrames
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           	psect	text19
  2809  000838                     __ptext19:
  2810                           	opt stack 0
  2811  000838                     _CheckRudderAhead:
  2812                           	opt stack 25
  2813                           
  2814                           ;position.c: 335: if (a_frame[0].angle >= -5 && a_frame[0].angle <= 5) {
  2815                           
  2816                           ;incstack = 0
  2817  000838  AE0A               	btfss	_a_frame+9,7,c
  2818  00083A  D006               	goto	l2918
  2819  00083C  0EFB               	movlw	251
  2820  00083E  5C09               	subwf	_a_frame+8,w,c
  2821  000840  0EFF               	movlw	255
  2822  000842  580A               	subwfb	_a_frame+9,w,c
  2823  000844  A0D8               	btfss	status,0,c
  2824  000846  D00C               	goto	l2922
  2825  000848                     l2918:
  2826  000848  BE0A               	btfsc	_a_frame+9,7,c
  2827  00084A  D006               	goto	l2920
  2828  00084C  500A               	movf	_a_frame+9,w,c
  2829  00084E  E108               	bnz	l2922
  2830  000850  0E06               	movlw	6
  2831  000852  5C09               	subwf	_a_frame+8,w,c
  2832  000854  B0D8               	btfsc	status,0,c
  2833  000856  D004               	goto	l2922
  2834  000858                     l2920:
  2835                           
  2836                           ;position.c: 336: ActRudder(0);
  2837  000858  0E00               	movlw	0
  2838  00085A  EC9E  F007         	call	_ActRudder
  2839                           
  2840                           ;position.c: 337: }
  2841  00085E  0012               	return	
  2842  000860                     l2922:
  2843                           
  2844                           ;position.c: 339: else if (a_frame[0].angle > 5) {
  2845  000860  BE0A               	btfsc	_a_frame+9,7,c
  2846  000862  D032               	goto	l2938
  2847  000864  500A               	movf	_a_frame+9,w,c
  2848  000866  E104               	bnz	u1980
  2849  000868  0E06               	movlw	6
  2850  00086A  5C09               	subwf	_a_frame+8,w,c
  2851  00086C  A0D8               	btfss	status,0,c
  2852  00086E  D02C               	goto	l2938
  2853  000870                     u1980:
  2854                           
  2855                           ;position.c: 341: if (a_frame[1].angle > a_frame[0].angle) {
  2856  000870  5013               	movf	_a_frame+18,w,c
  2857  000872  5C09               	subwf	_a_frame+8,w,c
  2858  000874  500A               	movf	_a_frame+9,w,c
  2859  000876  0A80               	xorlw	128
  2860  000878  0100               	movlb	0	; () banked
  2861  00087A  6FD9               	movwf	??_CheckRudderAhead& (0+255),b
  2862  00087C  5014               	movf	_a_frame+19,w,c
  2863  00087E  0A80               	xorlw	128
  2864  000880  0100               	movlb	0	; () banked
  2865  000882  59D9               	subwfb	??_CheckRudderAhead& (0+255),w,b
  2866  000884  B0D8               	btfsc	status,0,c
  2867  000886  D01C               	goto	l2936
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;position.c: 343: if (a_frame_dif[0].dif_angle <= 2) {
  2871  000888  BE1E               	btfsc	_a_frame_dif+9,7,c
  2872  00088A  D006               	goto	l2928
  2873  00088C  501E               	movf	_a_frame_dif+9,w,c
  2874  00088E  E114               	bnz	l2934
  2875  000890  0E03               	movlw	3
  2876  000892  5C1D               	subwf	_a_frame_dif+8,w,c
  2877  000894  B0D8               	btfsc	status,0,c
  2878  000896  D010               	goto	l2934
  2879  000898                     l2928:
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;position.c: 344: if (a_frame_dif[0].dif_angle <= 1) {
  2883  000898  BE1E               	btfsc	_a_frame_dif+9,7,c
  2884  00089A  D006               	goto	l2930
  2885  00089C  501E               	movf	_a_frame_dif+9,w,c
  2886  00089E  E108               	bnz	l2932
  2887  0008A0  0E02               	movlw	2
  2888  0008A2  5C1D               	subwf	_a_frame_dif+8,w,c
  2889  0008A4  B0D8               	btfsc	status,0,c
  2890  0008A6  D004               	goto	l2932
  2891  0008A8                     l2930:
  2892                           
  2893                           ; BSR set to: 0
  2894                           ;position.c: 345: ActRudder(-3);
  2895  0008A8  0EFD               	movlw	253
  2896  0008AA  EC9E  F007         	call	_ActRudder
  2897                           
  2898                           ;position.c: 346: } else {
  2899  0008AE  0012               	return	
  2900  0008B0                     l2932:
  2901                           
  2902                           ;position.c: 347: ActRudder(0);
  2903  0008B0  0E00               	movlw	0
  2904  0008B2  EC9E  F007         	call	_ActRudder
  2905                           
  2906                           ;position.c: 348: }
  2907                           ;position.c: 349: } else {
  2908  0008B6  0012               	return	
  2909  0008B8                     l2934:
  2910                           
  2911                           ;position.c: 351: ActRudder(3);
  2912  0008B8  0E03               	movlw	3
  2913  0008BA  EC9E  F007         	call	_ActRudder
  2914                           
  2915                           ;position.c: 352: }
  2916                           ;position.c: 353: } else {
  2917  0008BE  0012               	return	
  2918  0008C0                     l2936:
  2919                           
  2920                           ;position.c: 355: ActRudder(-3);
  2921  0008C0  0EFD               	movlw	253
  2922  0008C2  EC9E  F007         	call	_ActRudder
  2923                           
  2924                           ;position.c: 356: }
  2925                           ;position.c: 357: }
  2926  0008C6  0012               	return	
  2927  0008C8                     l2938:
  2928                           
  2929                           ;position.c: 359: else {
  2930                           ;position.c: 361: if (a_frame[1].angle < a_frame[0].angle) {
  2931  0008C8  5009               	movf	_a_frame+8,w,c
  2932  0008CA  5C13               	subwf	_a_frame+18,w,c
  2933  0008CC  5014               	movf	_a_frame+19,w,c
  2934  0008CE  0A80               	xorlw	128
  2935  0008D0  0100               	movlb	0	; () banked
  2936  0008D2  6FD9               	movwf	??_CheckRudderAhead& (0+255),b
  2937  0008D4  500A               	movf	_a_frame+9,w,c
  2938  0008D6  0A80               	xorlw	128
  2939  0008D8  0100               	movlb	0	; () banked
  2940  0008DA  59D9               	subwfb	??_CheckRudderAhead& (0+255),w,b
  2941  0008DC  B0D8               	btfsc	status,0,c
  2942  0008DE  D01A               	goto	l2950
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;position.c: 363: if (a_frame_dif[0].dif_angle <= -2) {
  2946  0008E0  AE1E               	btfss	_a_frame_dif+9,7,c
  2947  0008E2  D014               	goto	l2948
  2948  0008E4  281D               	incf	_a_frame_dif+8,w,c
  2949  0008E6  0EFF               	movlw	255
  2950  0008E8  581E               	subwfb	_a_frame_dif+9,w,c
  2951  0008EA  B0D8               	btfsc	status,0,c
  2952  0008EC  D00F               	goto	l2948
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;position.c: 364: if (a_frame_dif[0].dif_angle <= -2) {
  2956  0008EE  AE1E               	btfss	_a_frame_dif+9,7,c
  2957  0008F0  D009               	goto	l2946
  2958  0008F2  281D               	incf	_a_frame_dif+8,w,c
  2959  0008F4  0EFF               	movlw	255
  2960  0008F6  581E               	subwfb	_a_frame_dif+9,w,c
  2961  0008F8  B0D8               	btfsc	status,0,c
  2962  0008FA  D004               	goto	l2946
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;position.c: 365: ActRudder(3);
  2966  0008FC  0E03               	movlw	3
  2967  0008FE  EC9E  F007         	call	_ActRudder
  2968                           
  2969                           ;position.c: 366: } else {
  2970  000902  0012               	return	
  2971  000904                     l2946:
  2972                           
  2973                           ;position.c: 367: ActRudder(0);
  2974  000904  0E00               	movlw	0
  2975  000906  EC9E  F007         	call	_ActRudder
  2976                           
  2977                           ;position.c: 368: }
  2978                           ;position.c: 369: } else {
  2979  00090A  0012               	return	
  2980  00090C                     l2948:
  2981                           
  2982                           ;position.c: 371: ActRudder(-3);
  2983  00090C  0EFD               	movlw	253
  2984  00090E  EC9E  F007         	call	_ActRudder
  2985                           
  2986                           ;position.c: 372: }
  2987                           ;position.c: 373: } else {
  2988  000912  0012               	return	
  2989  000914                     l2950:
  2990                           
  2991                           ;position.c: 375: ActRudder(3);
  2992  000914  0E03               	movlw	3
  2993  000916  EC9E  F007         	call	_ActRudder
  2994  00091A  0012               	return	
  2995  00091C                     __end_of_CheckRudderAhead:
  2996                           	opt stack 0
  2997                           tblptru	equ	0xFF8
  2998                           tblptrh	equ	0xFF7
  2999                           tblptrl	equ	0xFF6
  3000                           tablat	equ	0xFF5
  3001                           prodh	equ	0xFF4
  3002                           prodl	equ	0xFF3
  3003                           intcon	equ	0xFF2
  3004                           postinc0	equ	0xFEE
  3005                           wreg	equ	0xFE8
  3006                           postdec1	equ	0xFE5
  3007                           fsr1l	equ	0xFE1
  3008                           postinc2	equ	0xFDE
  3009                           postdec2	equ	0xFDD
  3010                           fsr2h	equ	0xFDA
  3011                           fsr2l	equ	0xFD9
  3012                           status	equ	0xFD8
  3013                           
  3014 ;; *************** function _ActRudder *****************
  3015 ;; Defined at:
  3016 ;;		line 98 in file "actors.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  change          1    wreg     unsigned char 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  change          1    0[BANK0 ] unsigned char 
  3021 ;; Return value:  Size  Location     Type
  3022 ;;		None               void
  3023 ;; Registers used:
  3024 ;;		wreg, status,2, status,0
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3033 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3034 ;;Total ram usage:        1 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; Hardware stack levels required when called:    3
  3037 ;; This function calls:
  3038 ;;		Nothing
  3039 ;; This function is called by:
  3040 ;;		_CheckRudderAhead
  3041 ;;		_CheckRudderBack
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	text20
  3046  000F3C                     __ptext20:
  3047                           	opt stack 0
  3048  000F3C                     _ActRudder:
  3049                           	opt stack 25
  3050                           
  3051                           ;incstack = 0
  3052                           ;ActRudder@change stored from wreg
  3053  000F3C  0100               	movlb	0	; () banked
  3054  000F3E  6FD8               	movwf	ActRudder@change& (0+255),b
  3055                           
  3056                           ;actors.c: 99: a_actors[0].rudd += change;
  3057  000F40  0100               	movlb	0	; () banked
  3058  000F42  51D8               	movf	ActRudder@change& (0+255),w,b
  3059  000F44  0100               	movlb	0	; () banked
  3060  000F46  27D6               	addwf	(_a_actors+6)& (0+255),f,b
  3061  000F48  0E00               	movlw	0
  3062  000F4A  23D7               	addwfc	(_a_actors+7)& (0+255),f,b
  3063                           
  3064                           ; BSR set to: 0
  3065  000F4C  0012               	return		;funcret
  3066  000F4E                     __end_of_ActRudder:
  3067                           	opt stack 0
  3068                           tblptru	equ	0xFF8
  3069                           tblptrh	equ	0xFF7
  3070                           tblptrl	equ	0xFF6
  3071                           tablat	equ	0xFF5
  3072                           prodh	equ	0xFF4
  3073                           prodl	equ	0xFF3
  3074                           intcon	equ	0xFF2
  3075                           postinc0	equ	0xFEE
  3076                           wreg	equ	0xFE8
  3077                           postdec1	equ	0xFE5
  3078                           fsr1l	equ	0xFE1
  3079                           postinc2	equ	0xFDE
  3080                           postdec2	equ	0xFDD
  3081                           fsr2h	equ	0xFDA
  3082                           fsr2l	equ	0xFD9
  3083                           status	equ	0xFD8
  3084                           
  3085 ;; *************** function _CheckElevator *****************
  3086 ;; Defined at:
  3087 ;;		line 129 in file "position.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;		None
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;		None
  3092 ;; Return value:  Size  Location     Type
  3093 ;;		None               void
  3094 ;; Registers used:
  3095 ;;		wreg, status,2, status,0, cstack
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;Total ram usage:        0 bytes
  3106 ;; Hardware stack levels used:    1
  3107 ;; Hardware stack levels required when called:    4
  3108 ;; This function calls:
  3109 ;;		_ActElevator
  3110 ;; This function is called by:
  3111 ;;		_CompareFrames
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           	psect	text21
  3116  00091C                     __ptext21:
  3117                           	opt stack 0
  3118  00091C                     _CheckElevator:
  3119                           	opt stack 25
  3120                           
  3121                           ;position.c: 131: if (a_frame[0].pos_y >= 90 && a_frame[0].pos_y <= 110) {
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;incstack = 0
  3125  00091C  5006               	movf	_a_frame+5,w,c
  3126  00091E  E104               	bnz	u1870
  3127  000920  0E5A               	movlw	90
  3128  000922  5C05               	subwf	_a_frame+4,w,c
  3129  000924  A0D8               	btfss	status,0,c
  3130  000926  D00A               	goto	l2886
  3131  000928                     u1870:
  3132  000928  5006               	movf	_a_frame+5,w,c
  3133  00092A  E108               	bnz	l2886
  3134  00092C  0E6F               	movlw	111
  3135  00092E  5C05               	subwf	_a_frame+4,w,c
  3136  000930  B0D8               	btfsc	status,0,c
  3137  000932  D004               	goto	l2886
  3138                           
  3139                           ;position.c: 133: ActElevator(0);
  3140  000934  0E00               	movlw	0
  3141  000936  ECA7  F007         	call	_ActElevator
  3142                           
  3143                           ;position.c: 134: }
  3144  00093A  0012               	return	
  3145  00093C                     l2886:
  3146                           
  3147                           ;position.c: 136: else if (a_frame[0].pos_y > 110) {
  3148  00093C  5006               	movf	_a_frame+5,w,c
  3149  00093E  E104               	bnz	u1890
  3150  000940  0E6F               	movlw	111
  3151  000942  5C05               	subwf	_a_frame+4,w,c
  3152  000944  A0D8               	btfss	status,0,c
  3153  000946  D025               	goto	l2902
  3154  000948                     u1890:
  3155                           
  3156                           ;position.c: 138: if (a_frame[1].pos_y < a_frame[0].pos_y) {
  3157  000948  5005               	movf	_a_frame+4,w,c
  3158  00094A  5C0F               	subwf	_a_frame+14,w,c
  3159  00094C  5006               	movf	_a_frame+5,w,c
  3160  00094E  5810               	subwfb	_a_frame+15,w,c
  3161  000950  B0D8               	btfsc	status,0,c
  3162  000952  D01B               	goto	l2900
  3163                           
  3164                           ;position.c: 140: if (a_frame_dif[0].dif_pos_y >= -8) {
  3165  000954  AE1A               	btfss	_a_frame_dif+5,7,c
  3166  000956  D006               	goto	l2892
  3167  000958  0EF8               	movlw	248
  3168  00095A  5C19               	subwf	_a_frame_dif+4,w,c
  3169  00095C  0EFF               	movlw	255
  3170  00095E  581A               	subwfb	_a_frame_dif+5,w,c
  3171  000960  A0D8               	btfss	status,0,c
  3172  000962  D00F               	goto	l2898
  3173  000964                     l2892:
  3174                           
  3175                           ;position.c: 141: if (a_frame_dif[0].dif_pos_y >= -1) {
  3176  000964  AE1A               	btfss	_a_frame_dif+5,7,c
  3177  000966  D005               	goto	l2894
  3178  000968  2819               	incf	_a_frame_dif+4,w,c
  3179  00096A  0EFF               	movlw	255
  3180  00096C  581A               	subwfb	_a_frame_dif+5,w,c
  3181  00096E  A0D8               	btfss	status,0,c
  3182  000970  D004               	goto	l2896
  3183  000972                     l2894:
  3184                           
  3185                           ;position.c: 143: ActElevator(3);
  3186  000972  0E03               	movlw	3
  3187  000974  ECA7  F007         	call	_ActElevator
  3188                           
  3189                           ;position.c: 144: } else {
  3190  000978  0012               	return	
  3191  00097A                     l2896:
  3192                           
  3193                           ;position.c: 146: ActElevator(0);
  3194  00097A  0E00               	movlw	0
  3195  00097C  ECA7  F007         	call	_ActElevator
  3196                           
  3197                           ;position.c: 147: }
  3198                           ;position.c: 148: } else {
  3199  000980  0012               	return	
  3200  000982                     l2898:
  3201                           
  3202                           ;position.c: 150: ActElevator(-3);
  3203  000982  0EFD               	movlw	253
  3204  000984  ECA7  F007         	call	_ActElevator
  3205                           
  3206                           ;position.c: 151: }
  3207                           ;position.c: 152: } else {
  3208  000988  0012               	return	
  3209  00098A                     l2900:
  3210                           
  3211                           ;position.c: 158: ActElevator(3);
  3212  00098A  0E03               	movlw	3
  3213  00098C  ECA7  F007         	call	_ActElevator
  3214                           
  3215                           ;position.c: 159: }
  3216                           ;position.c: 160: }
  3217  000990  0012               	return	
  3218  000992                     l2902:
  3219                           
  3220                           ;position.c: 162: else {
  3221                           ;position.c: 164: if (a_frame[1].pos_y > a_frame[0].pos_y) {
  3222  000992  500F               	movf	_a_frame+14,w,c
  3223  000994  5C05               	subwf	_a_frame+4,w,c
  3224  000996  5010               	movf	_a_frame+15,w,c
  3225  000998  5806               	subwfb	_a_frame+5,w,c
  3226  00099A  B0D8               	btfsc	status,0,c
  3227  00099C  D01C               	goto	l2914
  3228                           
  3229                           ;position.c: 166: if (a_frame_dif[0].dif_pos_y <= 8) {
  3230  00099E  BE1A               	btfsc	_a_frame_dif+5,7,c
  3231  0009A0  D006               	goto	l2906
  3232  0009A2  501A               	movf	_a_frame_dif+5,w,c
  3233  0009A4  E114               	bnz	l2912
  3234  0009A6  0E09               	movlw	9
  3235  0009A8  5C19               	subwf	_a_frame_dif+4,w,c
  3236  0009AA  B0D8               	btfsc	status,0,c
  3237  0009AC  D010               	goto	l2912
  3238  0009AE                     l2906:
  3239                           
  3240                           ;position.c: 167: if (a_frame_dif[0].dif_pos_y <= 1) {
  3241  0009AE  BE1A               	btfsc	_a_frame_dif+5,7,c
  3242  0009B0  D006               	goto	l2908
  3243  0009B2  501A               	movf	_a_frame_dif+5,w,c
  3244  0009B4  E108               	bnz	l2910
  3245  0009B6  0E02               	movlw	2
  3246  0009B8  5C19               	subwf	_a_frame_dif+4,w,c
  3247  0009BA  B0D8               	btfsc	status,0,c
  3248  0009BC  D004               	goto	l2910
  3249  0009BE                     l2908:
  3250                           
  3251                           ;position.c: 169: ActElevator(-3);
  3252  0009BE  0EFD               	movlw	253
  3253  0009C0  ECA7  F007         	call	_ActElevator
  3254                           
  3255                           ;position.c: 170: } else {
  3256  0009C4  0012               	return	
  3257  0009C6                     l2910:
  3258                           
  3259                           ;position.c: 172: ActElevator(0);
  3260  0009C6  0E00               	movlw	0
  3261  0009C8  ECA7  F007         	call	_ActElevator
  3262                           
  3263                           ;position.c: 173: }
  3264                           ;position.c: 174: } else {
  3265  0009CC  0012               	return	
  3266  0009CE                     l2912:
  3267                           
  3268                           ;position.c: 176: ActElevator(3);
  3269  0009CE  0E03               	movlw	3
  3270  0009D0  ECA7  F007         	call	_ActElevator
  3271                           
  3272                           ;position.c: 177: }
  3273                           ;position.c: 178: } else {
  3274  0009D4  0012               	return	
  3275  0009D6                     l2914:
  3276                           
  3277                           ;position.c: 184: ActElevator(-3);
  3278  0009D6  0EFD               	movlw	253
  3279  0009D8  ECA7  F007         	call	_ActElevator
  3280  0009DC  0012               	return	
  3281  0009DE                     __end_of_CheckElevator:
  3282                           	opt stack 0
  3283                           tblptru	equ	0xFF8
  3284                           tblptrh	equ	0xFF7
  3285                           tblptrl	equ	0xFF6
  3286                           tablat	equ	0xFF5
  3287                           prodh	equ	0xFF4
  3288                           prodl	equ	0xFF3
  3289                           intcon	equ	0xFF2
  3290                           postinc0	equ	0xFEE
  3291                           wreg	equ	0xFE8
  3292                           postdec1	equ	0xFE5
  3293                           fsr1l	equ	0xFE1
  3294                           postinc2	equ	0xFDE
  3295                           postdec2	equ	0xFDD
  3296                           fsr2h	equ	0xFDA
  3297                           fsr2l	equ	0xFD9
  3298                           status	equ	0xFD8
  3299                           
  3300 ;; *************** function _ActElevator *****************
  3301 ;; Defined at:
  3302 ;;		line 80 in file "actors.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  change          1    wreg     unsigned char 
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;  change          1    0[BANK0 ] unsigned char 
  3307 ;; Return value:  Size  Location     Type
  3308 ;;		None               void
  3309 ;; Registers used:
  3310 ;;		wreg, status,2, status,0
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3317 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3319 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3320 ;;Total ram usage:        1 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:    3
  3323 ;; This function calls:
  3324 ;;		Nothing
  3325 ;; This function is called by:
  3326 ;;		_CheckElevator
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           	psect	text22
  3331  000F4E                     __ptext22:
  3332                           	opt stack 0
  3333  000F4E                     _ActElevator:
  3334                           	opt stack 25
  3335                           
  3336                           ;incstack = 0
  3337                           ;ActElevator@change stored from wreg
  3338  000F4E  0100               	movlb	0	; () banked
  3339  000F50  6FD8               	movwf	ActElevator@change& (0+255),b
  3340                           
  3341                           ;actors.c: 81: a_actors[0].elev += change;
  3342  000F52  0100               	movlb	0	; () banked
  3343  000F54  51D8               	movf	ActElevator@change& (0+255),w,b
  3344  000F56  0100               	movlb	0	; () banked
  3345  000F58  27D2               	addwf	(_a_actors+2)& (0+255),f,b
  3346  000F5A  0E00               	movlw	0
  3347  000F5C  23D3               	addwfc	(_a_actors+3)& (0+255),f,b
  3348                           
  3349                           ; BSR set to: 0
  3350  000F5E  0012               	return		;funcret
  3351  000F60                     __end_of_ActElevator:
  3352                           	opt stack 0
  3353                           tblptru	equ	0xFF8
  3354                           tblptrh	equ	0xFF7
  3355                           tblptrl	equ	0xFF6
  3356                           tablat	equ	0xFF5
  3357                           prodh	equ	0xFF4
  3358                           prodl	equ	0xFF3
  3359                           intcon	equ	0xFF2
  3360                           postinc0	equ	0xFEE
  3361                           wreg	equ	0xFE8
  3362                           postdec1	equ	0xFE5
  3363                           fsr1l	equ	0xFE1
  3364                           postinc2	equ	0xFDE
  3365                           postdec2	equ	0xFDD
  3366                           fsr2h	equ	0xFDA
  3367                           fsr2l	equ	0xFD9
  3368                           status	equ	0xFD8
  3369                           
  3370 ;; *************** function _CheckAileron *****************
  3371 ;; Defined at:
  3372 ;;		line 59 in file "position.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;		None               void
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0, cstack
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;Total ram usage:        0 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:    4
  3393 ;; This function calls:
  3394 ;;		_ActAileron
  3395 ;; This function is called by:
  3396 ;;		_CompareFrames
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text23
  3401  0009DE                     __ptext23:
  3402                           	opt stack 0
  3403  0009DE                     _CheckAileron:
  3404                           	opt stack 25
  3405                           
  3406                           ;position.c: 62: if (a_frame[0].pos_x >= 150 && a_frame[0].pos_x <= 170) {
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;incstack = 0
  3410  0009DE  5004               	movf	_a_frame+3,w,c
  3411  0009E0  E104               	bnz	u1780
  3412  0009E2  0E96               	movlw	150
  3413  0009E4  5C03               	subwf	_a_frame+2,w,c
  3414  0009E6  A0D8               	btfss	status,0,c
  3415  0009E8  D00A               	goto	l2848
  3416  0009EA                     u1780:
  3417  0009EA  5004               	movf	_a_frame+3,w,c
  3418  0009EC  E108               	bnz	l2848
  3419  0009EE  0EAB               	movlw	171
  3420  0009F0  5C03               	subwf	_a_frame+2,w,c
  3421  0009F2  B0D8               	btfsc	status,0,c
  3422  0009F4  D004               	goto	l2848
  3423                           
  3424                           ;position.c: 64: ActAileron(0);
  3425  0009F6  0E00               	movlw	0
  3426  0009F8  ECB0  F007         	call	_ActAileron
  3427                           
  3428                           ;position.c: 65: }
  3429  0009FC  0012               	return	
  3430  0009FE                     l2848:
  3431                           
  3432                           ;position.c: 67: else if (a_frame[0].pos_x > 170) {
  3433  0009FE  5004               	movf	_a_frame+3,w,c
  3434  000A00  E104               	bnz	u1800
  3435  000A02  0EAB               	movlw	171
  3436  000A04  5C03               	subwf	_a_frame+2,w,c
  3437  000A06  A0D8               	btfss	status,0,c
  3438  000A08  D026               	goto	l2864
  3439  000A0A                     u1800:
  3440                           
  3441                           ;position.c: 69: if (a_frame[1].pos_x > a_frame[0].pos_x) {
  3442  000A0A  500D               	movf	_a_frame+12,w,c
  3443  000A0C  5C03               	subwf	_a_frame+2,w,c
  3444  000A0E  500E               	movf	_a_frame+13,w,c
  3445  000A10  5804               	subwfb	_a_frame+3,w,c
  3446  000A12  B0D8               	btfsc	status,0,c
  3447  000A14  D01C               	goto	l2862
  3448                           
  3449                           ;position.c: 71: if (a_frame_dif[0].dif_pos_x <= 8) {
  3450  000A16  BE18               	btfsc	_a_frame_dif+3,7,c
  3451  000A18  D006               	goto	l2854
  3452  000A1A  5018               	movf	_a_frame_dif+3,w,c
  3453  000A1C  E114               	bnz	l2860
  3454  000A1E  0E09               	movlw	9
  3455  000A20  5C17               	subwf	_a_frame_dif+2,w,c
  3456  000A22  B0D8               	btfsc	status,0,c
  3457  000A24  D010               	goto	l2860
  3458  000A26                     l2854:
  3459                           
  3460                           ;position.c: 72: if (a_frame_dif[0].dif_pos_x <= 1) {
  3461  000A26  BE18               	btfsc	_a_frame_dif+3,7,c
  3462  000A28  D006               	goto	l2856
  3463  000A2A  5018               	movf	_a_frame_dif+3,w,c
  3464  000A2C  E108               	bnz	l2858
  3465  000A2E  0E02               	movlw	2
  3466  000A30  5C17               	subwf	_a_frame_dif+2,w,c
  3467  000A32  B0D8               	btfsc	status,0,c
  3468  000A34  D004               	goto	l2858
  3469  000A36                     l2856:
  3470                           
  3471                           ;position.c: 74: ActAileron(-3);
  3472  000A36  0EFD               	movlw	253
  3473  000A38  ECB0  F007         	call	_ActAileron
  3474                           
  3475                           ;position.c: 75: } else {
  3476  000A3C  0012               	return	
  3477  000A3E                     l2858:
  3478                           
  3479                           ;position.c: 77: ActAileron(0);
  3480  000A3E  0E00               	movlw	0
  3481  000A40  ECB0  F007         	call	_ActAileron
  3482                           
  3483                           ;position.c: 78: }
  3484                           ;position.c: 79: } else {
  3485  000A44  0012               	return	
  3486  000A46                     l2860:
  3487                           
  3488                           ;position.c: 81: ActAileron(3);
  3489  000A46  0E03               	movlw	3
  3490  000A48  ECB0  F007         	call	_ActAileron
  3491                           
  3492                           ;position.c: 82: }
  3493                           ;position.c: 83: } else {
  3494  000A4C  0012               	return	
  3495  000A4E                     l2862:
  3496                           
  3497                           ;position.c: 89: ActAileron(-3);
  3498  000A4E  0EFD               	movlw	253
  3499  000A50  ECB0  F007         	call	_ActAileron
  3500                           
  3501                           ;position.c: 90: }
  3502                           ;position.c: 91: }
  3503  000A54  0012               	return	
  3504  000A56                     l2864:
  3505                           
  3506                           ;position.c: 93: else {
  3507                           ;position.c: 95: if (a_frame[1].pos_x < a_frame[0].pos_x) {
  3508  000A56  5003               	movf	_a_frame+2,w,c
  3509  000A58  5C0D               	subwf	_a_frame+12,w,c
  3510  000A5A  5004               	movf	_a_frame+3,w,c
  3511  000A5C  580E               	subwfb	_a_frame+13,w,c
  3512  000A5E  B0D8               	btfsc	status,0,c
  3513  000A60  D01B               	goto	l2876
  3514                           
  3515                           ;position.c: 97: if (a_frame_dif[0].dif_pos_x >= -8) {
  3516  000A62  AE18               	btfss	_a_frame_dif+3,7,c
  3517  000A64  D006               	goto	l2868
  3518  000A66  0EF8               	movlw	248
  3519  000A68  5C17               	subwf	_a_frame_dif+2,w,c
  3520  000A6A  0EFF               	movlw	255
  3521  000A6C  5818               	subwfb	_a_frame_dif+3,w,c
  3522  000A6E  A0D8               	btfss	status,0,c
  3523  000A70  D00F               	goto	l2874
  3524  000A72                     l2868:
  3525                           
  3526                           ;position.c: 98: if (a_frame_dif[0].dif_pos_x >= -1) {
  3527  000A72  AE18               	btfss	_a_frame_dif+3,7,c
  3528  000A74  D005               	goto	l2870
  3529  000A76  2817               	incf	_a_frame_dif+2,w,c
  3530  000A78  0EFF               	movlw	255
  3531  000A7A  5818               	subwfb	_a_frame_dif+3,w,c
  3532  000A7C  A0D8               	btfss	status,0,c
  3533  000A7E  D004               	goto	l2872
  3534  000A80                     l2870:
  3535                           
  3536                           ;position.c: 100: ActAileron(3);
  3537  000A80  0E03               	movlw	3
  3538  000A82  ECB0  F007         	call	_ActAileron
  3539                           
  3540                           ;position.c: 101: } else {
  3541  000A86  0012               	return	
  3542  000A88                     l2872:
  3543                           
  3544                           ;position.c: 103: ActAileron(0);
  3545  000A88  0E00               	movlw	0
  3546  000A8A  ECB0  F007         	call	_ActAileron
  3547                           
  3548                           ;position.c: 104: }
  3549                           ;position.c: 105: } else {
  3550  000A8E  0012               	return	
  3551  000A90                     l2874:
  3552                           
  3553                           ;position.c: 107: ActAileron(-3);
  3554  000A90  0EFD               	movlw	253
  3555  000A92  ECB0  F007         	call	_ActAileron
  3556                           
  3557                           ;position.c: 108: }
  3558                           ;position.c: 109: } else {
  3559  000A96  0012               	return	
  3560  000A98                     l2876:
  3561                           
  3562                           ;position.c: 115: ActAileron(3);
  3563  000A98  0E03               	movlw	3
  3564  000A9A  ECB0  F007         	call	_ActAileron
  3565  000A9E  0012               	return	
  3566  000AA0                     __end_of_CheckAileron:
  3567                           	opt stack 0
  3568                           tblptru	equ	0xFF8
  3569                           tblptrh	equ	0xFF7
  3570                           tblptrl	equ	0xFF6
  3571                           tablat	equ	0xFF5
  3572                           prodh	equ	0xFF4
  3573                           prodl	equ	0xFF3
  3574                           intcon	equ	0xFF2
  3575                           postinc0	equ	0xFEE
  3576                           wreg	equ	0xFE8
  3577                           postdec1	equ	0xFE5
  3578                           fsr1l	equ	0xFE1
  3579                           postinc2	equ	0xFDE
  3580                           postdec2	equ	0xFDD
  3581                           fsr2h	equ	0xFDA
  3582                           fsr2l	equ	0xFD9
  3583                           status	equ	0xFD8
  3584                           
  3585 ;; *************** function _ActAileron *****************
  3586 ;; Defined at:
  3587 ;;		line 71 in file "actors.c"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;  change          1    wreg     unsigned char 
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;  change          1    0[BANK0 ] unsigned char 
  3592 ;; Return value:  Size  Location     Type
  3593 ;;		None               void
  3594 ;; Registers used:
  3595 ;;		wreg, status,2, status,0
  3596 ;; Tracked objects:
  3597 ;;		On entry : 0/0
  3598 ;;		On exit  : 0/0
  3599 ;;		Unchanged: 0/0
  3600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3604 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3605 ;;Total ram usage:        1 bytes
  3606 ;; Hardware stack levels used:    1
  3607 ;; Hardware stack levels required when called:    3
  3608 ;; This function calls:
  3609 ;;		Nothing
  3610 ;; This function is called by:
  3611 ;;		_CheckAileron
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           
  3615                           	psect	text24
  3616  000F60                     __ptext24:
  3617                           	opt stack 0
  3618  000F60                     _ActAileron:
  3619                           	opt stack 25
  3620                           
  3621                           ;incstack = 0
  3622                           ;ActAileron@change stored from wreg
  3623  000F60  0100               	movlb	0	; () banked
  3624  000F62  6FD8               	movwf	ActAileron@change& (0+255),b
  3625                           
  3626                           ;actors.c: 72: a_actors[0].aile += change;
  3627  000F64  0100               	movlb	0	; () banked
  3628  000F66  51D8               	movf	ActAileron@change& (0+255),w,b
  3629  000F68  0100               	movlb	0	; () banked
  3630  000F6A  27D0               	addwf	_a_actors& (0+255),f,b
  3631  000F6C  0E00               	movlw	0
  3632  000F6E  23D1               	addwfc	(_a_actors+1)& (0+255),f,b
  3633                           
  3634                           ; BSR set to: 0
  3635  000F70  0012               	return		;funcret
  3636  000F72                     __end_of_ActAileron:
  3637                           	opt stack 0
  3638                           tblptru	equ	0xFF8
  3639                           tblptrh	equ	0xFF7
  3640                           tblptrl	equ	0xFF6
  3641                           tablat	equ	0xFF5
  3642                           prodh	equ	0xFF4
  3643                           prodl	equ	0xFF3
  3644                           intcon	equ	0xFF2
  3645                           postinc0	equ	0xFEE
  3646                           wreg	equ	0xFE8
  3647                           postdec1	equ	0xFE5
  3648                           fsr1l	equ	0xFE1
  3649                           postinc2	equ	0xFDE
  3650                           postdec2	equ	0xFDD
  3651                           fsr2h	equ	0xFDA
  3652                           fsr2l	equ	0xFD9
  3653                           status	equ	0xFD8
  3654                           
  3655 ;; *************** function _CheckThrottle *****************
  3656 ;; Defined at:
  3657 ;;		line 237 in file "position.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;		None
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  i               2    6[BANK0 ] int 
  3662 ;;  i               2   12[BANK0 ] int 
  3663 ;;  i               2   10[BANK0 ] int 
  3664 ;;  tmp             2    8[BANK0 ] int 
  3665 ;; Return value:  Size  Location     Type
  3666 ;;		None               void
  3667 ;; Registers used:
  3668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;Total ram usage:       13 bytes
  3679 ;; Hardware stack levels used:    1
  3680 ;; Hardware stack levels required when called:    5
  3681 ;; This function calls:
  3682 ;;		_ActThrottle
  3683 ;;		_BeneathFloor
  3684 ;;		_BeneathTable
  3685 ;; This function is called by:
  3686 ;;		_main
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           	psect	text25
  3691  0000CE                     __ptext25:
  3692                           	opt stack 0
  3693  0000CE                     _CheckThrottle:
  3694                           	opt stack 25
  3695                           
  3696                           ;position.c: 239: if (id_current_cc == 0) {
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;incstack = 0
  3700  0000CE  5025               	movf	_id_current_cc,w,c
  3701  0000D0  1026               	iorwf	_id_current_cc+1,w,c
  3702  0000D2  A4D8               	btfss	status,2,c
  3703  0000D4  D020               	goto	l3150
  3704                           
  3705                           ;position.c: 241: if (a_frame_dif[0].dif_height < -cm50) {
  3706  0000D6  C04A  F0D9         	movff	_cm50,??_CheckThrottle
  3707  0000DA  C04B  F0DA         	movff	_cm50+1,??_CheckThrottle+1
  3708  0000DE  0100               	movlb	0	; () banked
  3709  0000E0  1FD9               	comf	??_CheckThrottle& (0+255),f,b
  3710  0000E2  1FDA               	comf	(??_CheckThrottle+1)& (0+255),f,b
  3711  0000E4  4BD9               	infsnz	??_CheckThrottle& (0+255),f,b
  3712  0000E6  2BDA               	incf	(??_CheckThrottle+1)& (0+255),f,b
  3713  0000E8  0100               	movlb	0	; () banked
  3714  0000EA  51D9               	movf	??_CheckThrottle& (0+255),w,b
  3715  0000EC  5C1B               	subwf	_a_frame_dif+6,w,c
  3716  0000EE  0100               	movlb	0	; () banked
  3717  0000F0  51DA               	movf	(??_CheckThrottle+1)& (0+255),w,b
  3718  0000F2  581C               	subwfb	_a_frame_dif+7,w,c
  3719  0000F4  B0D8               	btfsc	status,0,c
  3720  0000F6  D006               	goto	l1010
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;position.c: 242: if (storedif) {
  3724  0000F8  AA4F               	btfss	_storedif/(0+8),_storedif& (0+7),c
  3725  0000FA  D002               	goto	l1011
  3726                           
  3727                           ; BSR set to: 0
  3728                           ;position.c: 243: table = 0;
  3729  0000FC  9C4F               	bcf	_table/(0+8),_table& (0+7),c
  3730                           
  3731                           ;position.c: 244: } else {
  3732  0000FE  D003               	goto	l1013
  3733  000100                     l1011:
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;position.c: 245: storedif = 1;
  3737  000100  8A4F               	bsf	_storedif/(0+8),_storedif& (0+7),c
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;position.c: 246: }
  3741                           ;position.c: 247: }else{
  3742  000102  D001               	goto	l1013
  3743  000104                     l1010:
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;position.c: 248: storedif = 0;
  3747  000104  9A4F               	bcf	_storedif/(0+8),_storedif& (0+7),c
  3748  000106                     l1013:
  3749                           
  3750                           ; BSR set to: 0
  3751                           ;position.c: 249: }
  3752                           ;position.c: 250: if (table) {
  3753  000106  AC4F               	btfss	_table/(0+8),_table& (0+7),c
  3754  000108  D003               	goto	l3148
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;position.c: 251: BeneathTable();
  3758  00010A  ECA5  F006         	call	_BeneathTable	;wreg free
  3759                           
  3760                           ;position.c: 252: } else {
  3761  00010E  0012               	return	
  3762  000110                     l3148:
  3763                           
  3764                           ;position.c: 253: BeneathFloor();
  3765  000110  ECCD  F006         	call	_BeneathFloor	;wreg free
  3766                           
  3767                           ;position.c: 254: }
  3768                           ;position.c: 255: } else if (id_current_cc > 0 && id_current_cc < (c_path - 1)) {
  3769  000114  0012               	return	
  3770  000116                     l3150:
  3771  000116  BE26               	btfsc	_id_current_cc+1,7,c
  3772  000118  D028               	goto	l3156
  3773  00011A  5026               	movf	_id_current_cc+1,w,c
  3774  00011C  E103               	bnz	u2420
  3775  00011E  0425               	decf	_id_current_cc,w,c
  3776  000120  A0D8               	btfss	status,0,c
  3777  000122  D023               	goto	l3156
  3778  000124                     u2420:
  3779  000124  0EFF               	movlw	255
  3780  000126  0100               	movlb	0	; () banked
  3781  000128  6FD9               	movwf	??_CheckThrottle& (0+255),b
  3782  00012A  0EFF               	movlw	255
  3783  00012C  0100               	movlb	0	; () banked
  3784  00012E  6FDA               	movwf	(??_CheckThrottle+1)& (0+255),b
  3785  000130  C040  F0DB         	movff	_c_path,??_CheckThrottle+2
  3786  000134  C041  F0DC         	movff	_c_path+1,??_CheckThrottle+3
  3787  000138  0100               	movlb	0	; () banked
  3788  00013A  51D9               	movf	??_CheckThrottle& (0+255),w,b
  3789  00013C  0100               	movlb	0	; () banked
  3790  00013E  27DB               	addwf	(??_CheckThrottle+2)& (0+255),f,b
  3791  000140  0100               	movlb	0	; () banked
  3792  000142  51DA               	movf	(??_CheckThrottle+1)& (0+255),w,b
  3793  000144  0100               	movlb	0	; () banked
  3794  000146  23DC               	addwfc	(??_CheckThrottle+3)& (0+255),f,b
  3795  000148  0100               	movlb	0	; () banked
  3796  00014A  51DB               	movf	(??_CheckThrottle+2)& (0+255),w,b
  3797  00014C  5C25               	subwf	_id_current_cc,w,c
  3798  00014E  5026               	movf	_id_current_cc+1,w,c
  3799  000150  0A80               	xorlw	128
  3800  000152  0100               	movlb	0	; () banked
  3801  000154  6FDD               	movwf	(??_CheckThrottle+4)& (0+255),b
  3802  000156  0100               	movlb	0	; () banked
  3803  000158  51DC               	movf	(??_CheckThrottle+3)& (0+255),w,b
  3804  00015A  0A80               	xorlw	128
  3805  00015C  0100               	movlb	0	; () banked
  3806  00015E  59DD               	subwfb	(??_CheckThrottle+4)& (0+255),w,b
  3807  000160  B0D8               	btfsc	status,0,c
  3808  000162  D003               	goto	l3156
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;position.c: 256: BeneathFloor();
  3812  000164  ECCD  F006         	call	_BeneathFloor	;wreg free
  3813                           
  3814                           ;position.c: 257: } else if (id_current_cc == (c_path - 1)) {
  3815  000168  0012               	return	
  3816  00016A                     l3156:
  3817  00016A  0EFF               	movlw	255
  3818  00016C  0100               	movlb	0	; () banked
  3819  00016E  6FD9               	movwf	??_CheckThrottle& (0+255),b
  3820  000170  0EFF               	movlw	255
  3821  000172  0100               	movlb	0	; () banked
  3822  000174  6FDA               	movwf	(??_CheckThrottle+1)& (0+255),b
  3823  000176  C040  F0DB         	movff	_c_path,??_CheckThrottle+2
  3824  00017A  C041  F0DC         	movff	_c_path+1,??_CheckThrottle+3
  3825  00017E  0100               	movlb	0	; () banked
  3826  000180  51D9               	movf	??_CheckThrottle& (0+255),w,b
  3827  000182  0100               	movlb	0	; () banked
  3828  000184  27DB               	addwf	(??_CheckThrottle+2)& (0+255),f,b
  3829  000186  0100               	movlb	0	; () banked
  3830  000188  51DA               	movf	(??_CheckThrottle+1)& (0+255),w,b
  3831  00018A  0100               	movlb	0	; () banked
  3832  00018C  23DC               	addwfc	(??_CheckThrottle+3)& (0+255),f,b
  3833  00018E  5025               	movf	_id_current_cc,w,c
  3834  000190  0100               	movlb	0	; () banked
  3835  000192  19DB               	xorwf	(??_CheckThrottle+2)& (0+255),w,b
  3836  000194  E11A               	bnz	l3168
  3837  000196  5026               	movf	_id_current_cc+1,w,c
  3838  000198  0100               	movlb	0	; () banked
  3839  00019A  19DC               	xorwf	(??_CheckThrottle+3)& (0+255),w,b
  3840  00019C  A4D8               	btfss	status,2,c
  3841  00019E  D015               	goto	l3168
  3842                           
  3843                           ; BSR set to: 0
  3844                           ;position.c: 259: if (a_frame_dif[0].dif_height > cm50) {
  3845  0001A0  501B               	movf	_a_frame_dif+6,w,c
  3846  0001A2  5C4A               	subwf	_cm50,w,c
  3847  0001A4  501C               	movf	_a_frame_dif+7,w,c
  3848  0001A6  584B               	subwfb	_cm50+1,w,c
  3849  0001A8  B0D8               	btfsc	status,0,c
  3850  0001AA  D006               	goto	l1020
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;position.c: 260: if (storedif) {
  3854  0001AC  AA4F               	btfss	_storedif/(0+8),_storedif& (0+7),c
  3855  0001AE  D002               	goto	l1021
  3856                           
  3857                           ; BSR set to: 0
  3858                           ;position.c: 261: table = 1;
  3859  0001B0  8C4F               	bsf	_table/(0+8),_table& (0+7),c
  3860                           
  3861                           ;position.c: 262: } else {
  3862  0001B2  D003               	goto	l1023
  3863  0001B4                     l1021:
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;position.c: 263: storedif = 1;
  3867  0001B4  8A4F               	bsf	_storedif/(0+8),_storedif& (0+7),c
  3868                           
  3869                           ; BSR set to: 0
  3870                           ;position.c: 264: }
  3871                           ;position.c: 265: }else{
  3872  0001B6  D001               	goto	l1023
  3873  0001B8                     l1020:
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;position.c: 266: storedif = 0;
  3877  0001B8  9A4F               	bcf	_storedif/(0+8),_storedif& (0+7),c
  3878  0001BA                     l1023:
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;position.c: 267: }
  3882                           ;position.c: 268: if (table) {
  3883  0001BA  AC4F               	btfss	_table/(0+8),_table& (0+7),c
  3884  0001BC  D003               	goto	l3166
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;position.c: 269: BeneathTable();
  3888  0001BE  ECA5  F006         	call	_BeneathTable	;wreg free
  3889                           
  3890                           ;position.c: 270: } else {
  3891  0001C2  0012               	return	
  3892  0001C4                     l3166:
  3893                           
  3894                           ;position.c: 271: BeneathFloor();
  3895  0001C4  ECCD  F006         	call	_BeneathFloor	;wreg free
  3896                           
  3897                           ;position.c: 272: }
  3898                           ;position.c: 273: } else {
  3899  0001C8  0012               	return	
  3900  0001CA                     l3168:
  3901                           
  3902                           ;position.c: 278: if (a_frame[0].height >= 30) {
  3903  0001CA  5008               	movf	_a_frame+7,w,c
  3904  0001CC  E104               	bnz	u2480
  3905  0001CE  0E1E               	movlw	30
  3906  0001D0  5C07               	subwf	_a_frame+6,w,c
  3907  0001D2  A0D8               	btfss	status,0,c
  3908  0001D4  D026               	goto	l1027
  3909  0001D6                     u2480:
  3910                           
  3911                           ;position.c: 279: if (a_frame[1].height > a_frame[0].height) {
  3912  0001D6  5011               	movf	_a_frame+16,w,c
  3913  0001D8  5C07               	subwf	_a_frame+6,w,c
  3914  0001DA  5012               	movf	_a_frame+17,w,c
  3915  0001DC  5808               	subwfb	_a_frame+7,w,c
  3916  0001DE  B0D8               	btfsc	status,0,c
  3917  0001E0  D01C               	goto	l3182
  3918                           
  3919                           ;position.c: 281: if (a_frame_dif[0].dif_height <= 46) {
  3920  0001E2  BE1C               	btfsc	_a_frame_dif+7,7,c
  3921  0001E4  D006               	goto	l3174
  3922  0001E6  501C               	movf	_a_frame_dif+7,w,c
  3923  0001E8  E114               	bnz	l3180
  3924  0001EA  0E2F               	movlw	47
  3925  0001EC  5C1B               	subwf	_a_frame_dif+6,w,c
  3926  0001EE  B0D8               	btfsc	status,0,c
  3927  0001F0  D010               	goto	l3180
  3928  0001F2                     l3174:
  3929                           
  3930                           ;position.c: 282: if (a_frame_dif[0].dif_pos_x <= 23) {
  3931  0001F2  BE18               	btfsc	_a_frame_dif+3,7,c
  3932  0001F4  D006               	goto	l3176
  3933  0001F6  5018               	movf	_a_frame_dif+3,w,c
  3934  0001F8  E108               	bnz	l3178
  3935  0001FA  0E18               	movlw	24
  3936  0001FC  5C17               	subwf	_a_frame_dif+2,w,c
  3937  0001FE  B0D8               	btfsc	status,0,c
  3938  000200  D004               	goto	l3178
  3939  000202                     l3176:
  3940                           
  3941                           ;position.c: 284: ActThrottle(-3);
  3942  000202  0EFD               	movlw	253
  3943  000204  ECB9  F007         	call	_ActThrottle
  3944                           
  3945                           ;position.c: 285: } else {
  3946  000208  0012               	return	
  3947  00020A                     l3178:
  3948                           
  3949                           ;position.c: 286: ActThrottle(0);
  3950  00020A  0E00               	movlw	0
  3951  00020C  ECB9  F007         	call	_ActThrottle
  3952                           
  3953                           ;position.c: 287: }
  3954                           ;position.c: 288: } else {
  3955  000210  0012               	return	
  3956  000212                     l3180:
  3957                           
  3958                           ;position.c: 289: ActThrottle(3);
  3959  000212  0E03               	movlw	3
  3960  000214  ECB9  F007         	call	_ActThrottle
  3961                           
  3962                           ;position.c: 290: }
  3963                           ;position.c: 291: } else {
  3964  000218  0012               	return	
  3965  00021A                     l3182:
  3966                           
  3967                           ;position.c: 293: ActThrottle(-3);
  3968  00021A  0EFD               	movlw	253
  3969  00021C  ECB9  F007         	call	_ActThrottle
  3970                           
  3971                           ;position.c: 294: }
  3972                           ;position.c: 295: } else {
  3973  000220  0012               	return	
  3974  000222                     l1027:
  3975                           
  3976                           ;position.c: 300: if(direction){
  3977  000222  A04F               	btfss	_direction/(0+8),_direction& (0+7),c
  3978  000224  D002               	goto	l1035
  3979                           
  3980                           ;position.c: 301: direction = 0;
  3981  000226  904F               	bcf	_direction/(0+8),_direction& (0+7),c
  3982                           
  3983                           ;position.c: 302: }else{
  3984  000228  D001               	goto	l3186
  3985  00022A                     l1035:
  3986                           
  3987                           ;position.c: 303: direction = 1;
  3988  00022A  804F               	bsf	_direction/(0+8),_direction& (0+7),c
  3989  00022C                     l3186:
  3990                           
  3991                           ;position.c: 304: }
  3992                           ;position.c: 305: int tmp = c_path - 1;
  3993  00022C  0EFF               	movlw	255
  3994  00022E  2440               	addwf	_c_path,w,c
  3995  000230  0100               	movlb	0	; () banked
  3996  000232  6FE0               	movwf	CheckThrottle@tmp& (0+255),b
  3997  000234  0EFF               	movlw	255
  3998  000236  2041               	addwfc	_c_path+1,w,c
  3999  000238  0100               	movlb	0	; () banked
  4000  00023A  6FE1               	movwf	(CheckThrottle@tmp+1)& (0+255),b
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;position.c: 306: for (int i = 0; i <= tmp; i++) {
  4004  00023C  0E00               	movlw	0
  4005  00023E  0100               	movlb	0	; () banked
  4006  000240  6FE3               	movwf	(CheckThrottle@i+1)& (0+255),b
  4007  000242  0E00               	movlw	0
  4008  000244  6FE2               	movwf	CheckThrottle@i& (0+255),b
  4009  000246  D047               	goto	l1037
  4010  000248                     l3190:
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;position.c: 307: a_path_old[i].higher_cc = a_path[i].higher_cc;
  4014  000248  C0E2  F0D9         	movff	CheckThrottle@i,??_CheckThrottle
  4015  00024C  C0E3  F0DA         	movff	CheckThrottle@i+1,??_CheckThrottle+1
  4016  000250  90D8               	bcf	status,0,c
  4017  000252  0100               	movlb	0	; () banked
  4018  000254  37D9               	rlcf	??_CheckThrottle& (0+255),f,b
  4019  000256  37DA               	rlcf	(??_CheckThrottle+1)& (0+255),f,b
  4020  000258  0E01               	movlw	1
  4021  00025A  0100               	movlb	0	; () banked
  4022  00025C  27D9               	addwf	??_CheckThrottle& (0+255),f,b
  4023  00025E  0E00               	movlw	0
  4024  000260  23DA               	addwfc	(??_CheckThrottle+1)& (0+255),f,b
  4025  000262  0EA6               	movlw	low _a_path
  4026  000264  0100               	movlb	0	; () banked
  4027  000266  25D9               	addwf	??_CheckThrottle& (0+255),w,b
  4028  000268  6ED9               	movwf	fsr2l,c
  4029  00026A  0E00               	movlw	high _a_path
  4030  00026C  0100               	movlb	0	; () banked
  4031  00026E  21DA               	addwfc	(??_CheckThrottle+1)& (0+255),w,b
  4032  000270  6EDA               	movwf	fsr2h,c
  4033  000272  C0E2  F0DB         	movff	CheckThrottle@i,??_CheckThrottle+2
  4034  000276  C0E3  F0DC         	movff	CheckThrottle@i+1,??_CheckThrottle+3
  4035  00027A  90D8               	bcf	status,0,c
  4036  00027C  0100               	movlb	0	; () banked
  4037  00027E  37DB               	rlcf	(??_CheckThrottle+2)& (0+255),f,b
  4038  000280  37DC               	rlcf	(??_CheckThrottle+3)& (0+255),f,b
  4039  000282  0E01               	movlw	1
  4040  000284  0100               	movlb	0	; () banked
  4041  000286  27DB               	addwf	(??_CheckThrottle+2)& (0+255),f,b
  4042  000288  0E00               	movlw	0
  4043  00028A  23DC               	addwfc	(??_CheckThrottle+3)& (0+255),f,b
  4044  00028C  0E00               	movlw	low _a_path_old
  4045  00028E  0100               	movlb	0	; () banked
  4046  000290  25DB               	addwf	(??_CheckThrottle+2)& (0+255),w,b
  4047  000292  6EE1               	movwf	fsr1l,c
  4048  000294  0E01               	movlw	high _a_path_old
  4049  000296  0100               	movlb	0	; () banked
  4050  000298  21DC               	addwfc	(??_CheckThrottle+3)& (0+255),w,b
  4051  00029A  6EE2               	movwf	fsr1h,c
  4052  00029C  CFDF FFE7          	movff	indf2,indf1
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;position.c: 308: a_path_old[i].lower_cc = a_path[i].lower_cc;
  4056  0002A0  90D8               	bcf	status,0,c
  4057  0002A2  0100               	movlb	0	; () banked
  4058  0002A4  35E2               	rlcf	CheckThrottle@i& (0+255),w,b
  4059  0002A6  6ED9               	movwf	fsr2l,c
  4060  0002A8  0100               	movlb	0	; () banked
  4061  0002AA  35E3               	rlcf	(CheckThrottle@i+1)& (0+255),w,b
  4062  0002AC  6EDA               	movwf	fsr2h,c
  4063  0002AE  0EA6               	movlw	low _a_path
  4064  0002B0  26D9               	addwf	fsr2l,f,c
  4065  0002B2  0E00               	movlw	high _a_path
  4066  0002B4  22DA               	addwfc	fsr2h,f,c
  4067  0002B6  90D8               	bcf	status,0,c
  4068  0002B8  0100               	movlb	0	; () banked
  4069  0002BA  35E2               	rlcf	CheckThrottle@i& (0+255),w,b
  4070  0002BC  6EE1               	movwf	fsr1l,c
  4071  0002BE  0100               	movlb	0	; () banked
  4072  0002C0  35E3               	rlcf	(CheckThrottle@i+1)& (0+255),w,b
  4073  0002C2  6EE2               	movwf	fsr1h,c
  4074  0002C4  0E00               	movlw	low _a_path_old
  4075  0002C6  26E1               	addwf	fsr1l,f,c
  4076  0002C8  0E01               	movlw	high _a_path_old
  4077  0002CA  22E2               	addwfc	fsr1h,f,c
  4078  0002CC  CFDF FFE7          	movff	indf2,indf1
  4079                           
  4080                           ; BSR set to: 0
  4081  0002D0  0100               	movlb	0	; () banked
  4082  0002D2  4BE2               	infsnz	CheckThrottle@i& (0+255),f,b
  4083  0002D4  2BE3               	incf	(CheckThrottle@i+1)& (0+255),f,b
  4084  0002D6                     l1037:
  4085                           
  4086                           ; BSR set to: 0
  4087  0002D6  0100               	movlb	0	; () banked
  4088  0002D8  51E2               	movf	CheckThrottle@i& (0+255),w,b
  4089  0002DA  0100               	movlb	0	; () banked
  4090  0002DC  5DE0               	subwf	CheckThrottle@tmp& (0+255),w,b
  4091  0002DE  0100               	movlb	0	; () banked
  4092  0002E0  51E1               	movf	(CheckThrottle@tmp+1)& (0+255),w,b
  4093  0002E2  0A80               	xorlw	128
  4094  0002E4  0100               	movlb	0	; () banked
  4095  0002E6  6FD9               	movwf	??_CheckThrottle& (0+255),b
  4096  0002E8  0100               	movlb	0	; () banked
  4097  0002EA  51E3               	movf	(CheckThrottle@i+1)& (0+255),w,b
  4098  0002EC  0A80               	xorlw	128
  4099  0002EE  0100               	movlb	0	; () banked
  4100  0002F0  59D9               	subwfb	??_CheckThrottle& (0+255),w,b
  4101  0002F2  B0D8               	btfsc	status,0,c
  4102  0002F4  D7A9               	goto	l3190
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;position.c: 309: }
  4106                           ;position.c: 310: for (int i = 0; i <= tmp; i++) {
  4107                           
  4108                           ; BSR set to: 0
  4109  0002F6  0E00               	movlw	0
  4110  0002F8  0100               	movlb	0	; () banked
  4111  0002FA  6FE5               	movwf	(CheckThrottle@i_1742+1)& (0+255),b
  4112  0002FC  0E00               	movlw	0
  4113  0002FE  6FE4               	movwf	CheckThrottle@i_1742& (0+255),b
  4114  000300  D066               	goto	l3202
  4115  000302                     l3198:
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;position.c: 311: a_path[(tmp - i)].higher_cc = a_path_old[i].higher_cc;
  4119  000302  C0E4  F0D9         	movff	CheckThrottle@i_1742,??_CheckThrottle
  4120  000306  C0E5  F0DA         	movff	CheckThrottle@i_1742+1,??_CheckThrottle+1
  4121  00030A  90D8               	bcf	status,0,c
  4122  00030C  0100               	movlb	0	; () banked
  4123  00030E  37D9               	rlcf	??_CheckThrottle& (0+255),f,b
  4124  000310  37DA               	rlcf	(??_CheckThrottle+1)& (0+255),f,b
  4125  000312  0E01               	movlw	1
  4126  000314  0100               	movlb	0	; () banked
  4127  000316  27D9               	addwf	??_CheckThrottle& (0+255),f,b
  4128  000318  0E00               	movlw	0
  4129  00031A  23DA               	addwfc	(??_CheckThrottle+1)& (0+255),f,b
  4130  00031C  0E00               	movlw	low _a_path_old
  4131  00031E  0100               	movlb	0	; () banked
  4132  000320  25D9               	addwf	??_CheckThrottle& (0+255),w,b
  4133  000322  6ED9               	movwf	fsr2l,c
  4134  000324  0E01               	movlw	high _a_path_old
  4135  000326  0100               	movlb	0	; () banked
  4136  000328  21DA               	addwfc	(??_CheckThrottle+1)& (0+255),w,b
  4137  00032A  6EDA               	movwf	fsr2h,c
  4138  00032C  C0E4  F0DB         	movff	CheckThrottle@i_1742,??_CheckThrottle+2
  4139  000330  C0E5  F0DC         	movff	CheckThrottle@i_1742+1,??_CheckThrottle+3
  4140  000334  0100               	movlb	0	; () banked
  4141  000336  1FDB               	comf	(??_CheckThrottle+2)& (0+255),f,b
  4142  000338  1FDC               	comf	(??_CheckThrottle+3)& (0+255),f,b
  4143  00033A  4BDB               	infsnz	(??_CheckThrottle+2)& (0+255),f,b
  4144  00033C  2BDC               	incf	(??_CheckThrottle+3)& (0+255),f,b
  4145  00033E  0100               	movlb	0	; () banked
  4146  000340  51E0               	movf	CheckThrottle@tmp& (0+255),w,b
  4147  000342  0100               	movlb	0	; () banked
  4148  000344  27DB               	addwf	(??_CheckThrottle+2)& (0+255),f,b
  4149  000346  0100               	movlb	0	; () banked
  4150  000348  51E1               	movf	(CheckThrottle@tmp+1)& (0+255),w,b
  4151  00034A  0100               	movlb	0	; () banked
  4152  00034C  23DC               	addwfc	(??_CheckThrottle+3)& (0+255),f,b
  4153  00034E  90D8               	bcf	status,0,c
  4154  000350  0100               	movlb	0	; () banked
  4155  000352  37DB               	rlcf	(??_CheckThrottle+2)& (0+255),f,b
  4156  000354  37DC               	rlcf	(??_CheckThrottle+3)& (0+255),f,b
  4157  000356  0E01               	movlw	1
  4158  000358  0100               	movlb	0	; () banked
  4159  00035A  27DB               	addwf	(??_CheckThrottle+2)& (0+255),f,b
  4160  00035C  0E00               	movlw	0
  4161  00035E  23DC               	addwfc	(??_CheckThrottle+3)& (0+255),f,b
  4162  000360  0EA6               	movlw	low _a_path
  4163  000362  0100               	movlb	0	; () banked
  4164  000364  25DB               	addwf	(??_CheckThrottle+2)& (0+255),w,b
  4165  000366  6EE1               	movwf	fsr1l,c
  4166  000368  0E00               	movlw	high _a_path
  4167  00036A  0100               	movlb	0	; () banked
  4168  00036C  21DC               	addwfc	(??_CheckThrottle+3)& (0+255),w,b
  4169  00036E  6EE2               	movwf	fsr1h,c
  4170  000370  CFDF FFE7          	movff	indf2,indf1
  4171                           
  4172                           ;position.c: 312: a_path[(tmp - i)].lower_cc = a_path_old[i].lower_cc;
  4173  000374  90D8               	bcf	status,0,c
  4174  000376  0100               	movlb	0	; () banked
  4175  000378  35E4               	rlcf	CheckThrottle@i_1742& (0+255),w,b
  4176  00037A  6ED9               	movwf	fsr2l,c
  4177  00037C  0100               	movlb	0	; () banked
  4178  00037E  35E5               	rlcf	(CheckThrottle@i_1742+1)& (0+255),w,b
  4179  000380  6EDA               	movwf	fsr2h,c
  4180  000382  0E00               	movlw	low _a_path_old
  4181  000384  26D9               	addwf	fsr2l,f,c
  4182  000386  0E01               	movlw	high _a_path_old
  4183  000388  22DA               	addwfc	fsr2h,f,c
  4184  00038A  C0E4  F0D9         	movff	CheckThrottle@i_1742,??_CheckThrottle
  4185  00038E  C0E5  F0DA         	movff	CheckThrottle@i_1742+1,??_CheckThrottle+1
  4186  000392  0100               	movlb	0	; () banked
  4187  000394  1FD9               	comf	??_CheckThrottle& (0+255),f,b
  4188  000396  1FDA               	comf	(??_CheckThrottle+1)& (0+255),f,b
  4189  000398  4BD9               	infsnz	??_CheckThrottle& (0+255),f,b
  4190  00039A  2BDA               	incf	(??_CheckThrottle+1)& (0+255),f,b
  4191  00039C  0100               	movlb	0	; () banked
  4192  00039E  51E0               	movf	CheckThrottle@tmp& (0+255),w,b
  4193  0003A0  0100               	movlb	0	; () banked
  4194  0003A2  27D9               	addwf	??_CheckThrottle& (0+255),f,b
  4195  0003A4  0100               	movlb	0	; () banked
  4196  0003A6  51E1               	movf	(CheckThrottle@tmp+1)& (0+255),w,b
  4197  0003A8  0100               	movlb	0	; () banked
  4198  0003AA  23DA               	addwfc	(??_CheckThrottle+1)& (0+255),f,b
  4199  0003AC  90D8               	bcf	status,0,c
  4200  0003AE  0100               	movlb	0	; () banked
  4201  0003B0  37D9               	rlcf	??_CheckThrottle& (0+255),f,b
  4202  0003B2  37DA               	rlcf	(??_CheckThrottle+1)& (0+255),f,b
  4203  0003B4  0EA6               	movlw	low _a_path
  4204  0003B6  0100               	movlb	0	; () banked
  4205  0003B8  25D9               	addwf	??_CheckThrottle& (0+255),w,b
  4206  0003BA  6EE1               	movwf	fsr1l,c
  4207  0003BC  0E00               	movlw	high _a_path
  4208  0003BE  0100               	movlb	0	; () banked
  4209  0003C0  21DA               	addwfc	(??_CheckThrottle+1)& (0+255),w,b
  4210  0003C2  6EE2               	movwf	fsr1h,c
  4211  0003C4  CFDF FFE7          	movff	indf2,indf1
  4212                           
  4213                           ; BSR set to: 0
  4214  0003C8  0100               	movlb	0	; () banked
  4215  0003CA  4BE4               	infsnz	CheckThrottle@i_1742& (0+255),f,b
  4216  0003CC  2BE5               	incf	(CheckThrottle@i_1742+1)& (0+255),f,b
  4217  0003CE                     l3202:
  4218                           
  4219                           ; BSR set to: 0
  4220  0003CE  0100               	movlb	0	; () banked
  4221  0003D0  51E4               	movf	CheckThrottle@i_1742& (0+255),w,b
  4222  0003D2  0100               	movlb	0	; () banked
  4223  0003D4  5DE0               	subwf	CheckThrottle@tmp& (0+255),w,b
  4224  0003D6  0100               	movlb	0	; () banked
  4225  0003D8  51E1               	movf	(CheckThrottle@tmp+1)& (0+255),w,b
  4226  0003DA  0A80               	xorlw	128
  4227  0003DC  0100               	movlb	0	; () banked
  4228  0003DE  6FD9               	movwf	??_CheckThrottle& (0+255),b
  4229  0003E0  0100               	movlb	0	; () banked
  4230  0003E2  51E5               	movf	(CheckThrottle@i_1742+1)& (0+255),w,b
  4231  0003E4  0A80               	xorlw	128
  4232  0003E6  0100               	movlb	0	; () banked
  4233  0003E8  59D9               	subwfb	??_CheckThrottle& (0+255),w,b
  4234  0003EA  B0D8               	btfsc	status,0,c
  4235  0003EC  D78A               	goto	l3198
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;position.c: 313: }
  4239                           ;position.c: 315: for (int i = 0; i <= 10000; i++) {
  4240                           
  4241                           ; BSR set to: 0
  4242  0003EE  0E00               	movlw	0
  4243  0003F0  0100               	movlb	0	; () banked
  4244  0003F2  6FDF               	movwf	(CheckThrottle@i_1743+1)& (0+255),b
  4245  0003F4  0E00               	movlw	0
  4246  0003F6  6FDE               	movwf	CheckThrottle@i_1743& (0+255),b
  4247  0003F8                     l3206:
  4248                           
  4249                           ; BSR set to: 0
  4250  0003F8  0100               	movlb	0	; () banked
  4251  0003FA  BFDF               	btfsc	(CheckThrottle@i_1743+1)& (0+255),7,b
  4252  0003FC  D008               	goto	l3210
  4253  0003FE  0E11               	movlw	17
  4254  000400  0100               	movlb	0	; () banked
  4255  000402  5DDE               	subwf	CheckThrottle@i_1743& (0+255),w,b
  4256  000404  0E27               	movlw	39
  4257  000406  0100               	movlb	0	; () banked
  4258  000408  59DF               	subwfb	(CheckThrottle@i_1743+1)& (0+255),w,b
  4259  00040A  B0D8               	btfsc	status,0,c
  4260  00040C  0012               	return	
  4261  00040E                     l3210:
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;position.c: 316: _delay((unsigned long)((3)*(64000000/4000.0)));
  4265  00040E  0E3F               	movlw	63
  4266  000410  0100               	movlb	0	; () banked
  4267  000412  6FD9               	movwf	??_CheckThrottle& (0+255),b
  4268  000414  0E55               	movlw	85
  4269  000416                     u2587:
  4270  000416  2EE8               	decfsz	wreg,f,c
  4271  000418  D7FE               	goto	u2587
  4272  00041A  2FD9               	decfsz	??_CheckThrottle& (0+255),f,b
  4273  00041C  D7FC               	goto	u2587
  4274  00041E  F000               	nop	
  4275  000420  0100               	movlb	0	; () banked
  4276  000422  4BDE               	infsnz	CheckThrottle@i_1743& (0+255),f,b
  4277  000424  2BDF               	incf	(CheckThrottle@i_1743+1)& (0+255),f,b
  4278  000426  D7E8               	goto	l3206
  4279  000428                     __end_of_CheckThrottle:
  4280                           	opt stack 0
  4281                           tblptru	equ	0xFF8
  4282                           tblptrh	equ	0xFF7
  4283                           tblptrl	equ	0xFF6
  4284                           tablat	equ	0xFF5
  4285                           prodh	equ	0xFF4
  4286                           prodl	equ	0xFF3
  4287                           intcon	equ	0xFF2
  4288                           postinc0	equ	0xFEE
  4289                           wreg	equ	0xFE8
  4290                           indf1	equ	0xFE7
  4291                           postdec1	equ	0xFE5
  4292                           fsr1h	equ	0xFE2
  4293                           fsr1l	equ	0xFE1
  4294                           indf2	equ	0xFDF
  4295                           postinc2	equ	0xFDE
  4296                           postdec2	equ	0xFDD
  4297                           fsr2h	equ	0xFDA
  4298                           fsr2l	equ	0xFD9
  4299                           status	equ	0xFD8
  4300                           
  4301 ;; *************** function _BeneathTable *****************
  4302 ;; Defined at:
  4303 ;;		line 196 in file "position.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;		None
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;		None
  4308 ;; Return value:  Size  Location     Type
  4309 ;;		None               void
  4310 ;; Registers used:
  4311 ;;		wreg, status,2, status,0, cstack
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4321 ;;Total ram usage:        0 bytes
  4322 ;; Hardware stack levels used:    1
  4323 ;; Hardware stack levels required when called:    4
  4324 ;; This function calls:
  4325 ;;		_ActThrottle
  4326 ;; This function is called by:
  4327 ;;		_CheckThrottle
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           	psect	text26
  4332  000D4A                     __ptext26:
  4333                           	opt stack 0
  4334  000D4A                     _BeneathTable:
  4335                           	opt stack 25
  4336                           
  4337                           ;position.c: 197: if (a_frame[0].height <= cm120 && a_frame[0].height >= cm80) {
  4338                           
  4339                           ;incstack = 0
  4340  000D4A  5007               	movf	_a_frame+6,w,c
  4341  000D4C  5C44               	subwf	_cm120,w,c
  4342  000D4E  5008               	movf	_a_frame+7,w,c
  4343  000D50  5845               	subwfb	_cm120+1,w,c
  4344  000D52  A0D8               	btfss	status,0,c
  4345  000D54  D00A               	goto	l2994
  4346  000D56  504C               	movf	_cm80,w,c
  4347  000D58  5C07               	subwf	_a_frame+6,w,c
  4348  000D5A  504D               	movf	_cm80+1,w,c
  4349  000D5C  5808               	subwfb	_a_frame+7,w,c
  4350  000D5E  A0D8               	btfss	status,0,c
  4351  000D60  D004               	goto	l2994
  4352                           
  4353                           ;position.c: 198: ActThrottle(0);
  4354  000D62  0E00               	movlw	0
  4355  000D64  ECB9  F007         	call	_ActThrottle
  4356                           
  4357                           ;position.c: 199: } else if (a_frame[0].height < cm80) {
  4358  000D68  0012               	return	
  4359  000D6A                     l2994:
  4360  000D6A  504C               	movf	_cm80,w,c
  4361  000D6C  5C07               	subwf	_a_frame+6,w,c
  4362  000D6E  504D               	movf	_cm80+1,w,c
  4363  000D70  5808               	subwfb	_a_frame+7,w,c
  4364  000D72  B0D8               	btfsc	status,0,c
  4365  000D74  D00E               	goto	l3002
  4366                           
  4367                           ;position.c: 200: if (a_frame[0].height < cm50) {
  4368  000D76  504A               	movf	_cm50,w,c
  4369  000D78  5C07               	subwf	_a_frame+6,w,c
  4370  000D7A  504B               	movf	_cm50+1,w,c
  4371  000D7C  5808               	subwfb	_a_frame+7,w,c
  4372  000D7E  B0D8               	btfsc	status,0,c
  4373  000D80  D004               	goto	l3000
  4374                           
  4375                           ;position.c: 201: ActThrottle(6);
  4376  000D82  0E06               	movlw	6
  4377  000D84  ECB9  F007         	call	_ActThrottle
  4378                           
  4379                           ;position.c: 202: } else {
  4380  000D88  0012               	return	
  4381  000D8A                     l3000:
  4382                           
  4383                           ;position.c: 203: ActThrottle(3);
  4384  000D8A  0E03               	movlw	3
  4385  000D8C  ECB9  F007         	call	_ActThrottle
  4386                           
  4387                           ;position.c: 204: }
  4388                           ;position.c: 205: } else {
  4389  000D90  0012               	return	
  4390  000D92                     l3002:
  4391                           
  4392                           ;position.c: 206: ActThrottle(-3);
  4393  000D92  0EFD               	movlw	253
  4394  000D94  ECB9  F007         	call	_ActThrottle
  4395  000D98  0012               	return	
  4396  000D9A                     __end_of_BeneathTable:
  4397                           	opt stack 0
  4398                           tblptru	equ	0xFF8
  4399                           tblptrh	equ	0xFF7
  4400                           tblptrl	equ	0xFF6
  4401                           tablat	equ	0xFF5
  4402                           prodh	equ	0xFF4
  4403                           prodl	equ	0xFF3
  4404                           intcon	equ	0xFF2
  4405                           postinc0	equ	0xFEE
  4406                           wreg	equ	0xFE8
  4407                           indf1	equ	0xFE7
  4408                           postdec1	equ	0xFE5
  4409                           fsr1h	equ	0xFE2
  4410                           fsr1l	equ	0xFE1
  4411                           indf2	equ	0xFDF
  4412                           postinc2	equ	0xFDE
  4413                           postdec2	equ	0xFDD
  4414                           fsr2h	equ	0xFDA
  4415                           fsr2l	equ	0xFD9
  4416                           status	equ	0xFD8
  4417                           
  4418 ;; *************** function _BeneathFloor *****************
  4419 ;; Defined at:
  4420 ;;		line 216 in file "position.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;		None
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;		None
  4425 ;; Return value:  Size  Location     Type
  4426 ;;		None               void
  4427 ;; Registers used:
  4428 ;;		wreg, status,2, status,0, cstack
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4438 ;;Total ram usage:        0 bytes
  4439 ;; Hardware stack levels used:    1
  4440 ;; Hardware stack levels required when called:    4
  4441 ;; This function calls:
  4442 ;;		_ActThrottle
  4443 ;; This function is called by:
  4444 ;;		_CheckThrottle
  4445 ;; This function uses a non-reentrant model
  4446 ;;
  4447                           
  4448                           	psect	text27
  4449  000D9A                     __ptext27:
  4450                           	opt stack 0
  4451  000D9A                     _BeneathFloor:
  4452                           	opt stack 25
  4453                           
  4454                           ;position.c: 217: if (a_frame[0].height <= cm220 && a_frame[0].height >= cm180) {
  4455                           
  4456                           ;incstack = 0
  4457  000D9A  5007               	movf	_a_frame+6,w,c
  4458  000D9C  5C48               	subwf	_cm220,w,c
  4459  000D9E  5008               	movf	_a_frame+7,w,c
  4460  000DA0  5849               	subwfb	_cm220+1,w,c
  4461  000DA2  A0D8               	btfss	status,0,c
  4462  000DA4  D00A               	goto	l3010
  4463  000DA6  5046               	movf	_cm180,w,c
  4464  000DA8  5C07               	subwf	_a_frame+6,w,c
  4465  000DAA  5047               	movf	_cm180+1,w,c
  4466  000DAC  5808               	subwfb	_a_frame+7,w,c
  4467  000DAE  A0D8               	btfss	status,0,c
  4468  000DB0  D004               	goto	l3010
  4469                           
  4470                           ;position.c: 218: ActThrottle(0);
  4471  000DB2  0E00               	movlw	0
  4472  000DB4  ECB9  F007         	call	_ActThrottle
  4473                           
  4474                           ;position.c: 219: } else if (a_frame[0].height < cm180) {
  4475  000DB8  0012               	return	
  4476  000DBA                     l3010:
  4477  000DBA  5046               	movf	_cm180,w,c
  4478  000DBC  5C07               	subwf	_a_frame+6,w,c
  4479  000DBE  5047               	movf	_cm180+1,w,c
  4480  000DC0  5808               	subwfb	_a_frame+7,w,c
  4481  000DC2  B0D8               	btfsc	status,0,c
  4482  000DC4  D00E               	goto	l3018
  4483                           
  4484                           ;position.c: 220: if (a_frame[0].height < cm100) {
  4485  000DC6  5042               	movf	_cm100,w,c
  4486  000DC8  5C07               	subwf	_a_frame+6,w,c
  4487  000DCA  5043               	movf	_cm100+1,w,c
  4488  000DCC  5808               	subwfb	_a_frame+7,w,c
  4489  000DCE  B0D8               	btfsc	status,0,c
  4490  000DD0  D004               	goto	l3016
  4491                           
  4492                           ;position.c: 221: ActThrottle(6);
  4493  000DD2  0E06               	movlw	6
  4494  000DD4  ECB9  F007         	call	_ActThrottle
  4495                           
  4496                           ;position.c: 222: } else {
  4497  000DD8  0012               	return	
  4498  000DDA                     l3016:
  4499                           
  4500                           ;position.c: 223: ActThrottle(3);
  4501  000DDA  0E03               	movlw	3
  4502  000DDC  ECB9  F007         	call	_ActThrottle
  4503                           
  4504                           ;position.c: 224: }
  4505                           ;position.c: 225: } else {
  4506  000DE0  0012               	return	
  4507  000DE2                     l3018:
  4508                           
  4509                           ;position.c: 226: ActThrottle(-3);
  4510  000DE2  0EFD               	movlw	253
  4511  000DE4  ECB9  F007         	call	_ActThrottle
  4512  000DE8  0012               	return	
  4513  000DEA                     __end_of_BeneathFloor:
  4514                           	opt stack 0
  4515                           tblptru	equ	0xFF8
  4516                           tblptrh	equ	0xFF7
  4517                           tblptrl	equ	0xFF6
  4518                           tablat	equ	0xFF5
  4519                           prodh	equ	0xFF4
  4520                           prodl	equ	0xFF3
  4521                           intcon	equ	0xFF2
  4522                           postinc0	equ	0xFEE
  4523                           wreg	equ	0xFE8
  4524                           indf1	equ	0xFE7
  4525                           postdec1	equ	0xFE5
  4526                           fsr1h	equ	0xFE2
  4527                           fsr1l	equ	0xFE1
  4528                           indf2	equ	0xFDF
  4529                           postinc2	equ	0xFDE
  4530                           postdec2	equ	0xFDD
  4531                           fsr2h	equ	0xFDA
  4532                           fsr2l	equ	0xFD9
  4533                           status	equ	0xFD8
  4534                           
  4535 ;; *************** function _ActThrottle *****************
  4536 ;; Defined at:
  4537 ;;		line 89 in file "actors.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;  change          1    wreg     unsigned char 
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;  change          1    0[BANK0 ] unsigned char 
  4542 ;; Return value:  Size  Location     Type
  4543 ;;		None               void
  4544 ;; Registers used:
  4545 ;;		wreg, status,2, status,0
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4552 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4554 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4555 ;;Total ram usage:        1 bytes
  4556 ;; Hardware stack levels used:    1
  4557 ;; Hardware stack levels required when called:    3
  4558 ;; This function calls:
  4559 ;;		Nothing
  4560 ;; This function is called by:
  4561 ;;		_BeneathTable
  4562 ;;		_BeneathFloor
  4563 ;;		_CheckThrottle
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           	psect	text28
  4568  000F72                     __ptext28:
  4569                           	opt stack 0
  4570  000F72                     _ActThrottle:
  4571                           	opt stack 25
  4572                           
  4573                           ;incstack = 0
  4574                           ;ActThrottle@change stored from wreg
  4575  000F72  0100               	movlb	0	; () banked
  4576  000F74  6FD8               	movwf	ActThrottle@change& (0+255),b
  4577                           
  4578                           ;actors.c: 90: a_actors[0].thro += change;
  4579  000F76  0100               	movlb	0	; () banked
  4580  000F78  51D8               	movf	ActThrottle@change& (0+255),w,b
  4581  000F7A  0100               	movlb	0	; () banked
  4582  000F7C  27D4               	addwf	(_a_actors+4)& (0+255),f,b
  4583  000F7E  0E00               	movlw	0
  4584  000F80  23D5               	addwfc	(_a_actors+5)& (0+255),f,b
  4585                           
  4586                           ; BSR set to: 0
  4587  000F82  0012               	return		;funcret
  4588  000F84                     __end_of_ActThrottle:
  4589                           	opt stack 0
  4590                           tblptru	equ	0xFF8
  4591                           tblptrh	equ	0xFF7
  4592                           tblptrl	equ	0xFF6
  4593                           tablat	equ	0xFF5
  4594                           prodh	equ	0xFF4
  4595                           prodl	equ	0xFF3
  4596                           intcon	equ	0xFF2
  4597                           postinc0	equ	0xFEE
  4598                           wreg	equ	0xFE8
  4599                           indf1	equ	0xFE7
  4600                           postdec1	equ	0xFE5
  4601                           fsr1h	equ	0xFE2
  4602                           fsr1l	equ	0xFE1
  4603                           indf2	equ	0xFDF
  4604                           postinc2	equ	0xFDE
  4605                           postdec2	equ	0xFDD
  4606                           fsr2h	equ	0xFDA
  4607                           fsr2l	equ	0xFD9
  4608                           status	equ	0xFD8
  4609                           
  4610 ;; *************** function _Isr *****************
  4611 ;; Defined at:
  4612 ;;		line 30 in file "interrupt.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;		None
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;		None
  4617 ;; Return value:  Size  Location     Type
  4618 ;;		None               void
  4619 ;; Registers used:
  4620 ;;		wreg, status,2, status,0, cstack
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4628 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4629 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4630 ;;Total ram usage:       14 bytes
  4631 ;; Hardware stack levels used:    1
  4632 ;; Hardware stack levels required when called:    2
  4633 ;; This function calls:
  4634 ;;		_ModeCheck
  4635 ;;		_SignalOut
  4636 ;; This function is called by:
  4637 ;;		Interrupt level 2
  4638 ;; This function uses a non-reentrant model
  4639 ;;
  4640                           
  4641                           	psect	intcode
  4642  000008                     __pintcode:
  4643                           	opt stack 0
  4644  000008                     _Isr:
  4645                           	opt stack 25
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;incstack = 0
  4649  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4650  00000A  CFFA F032          	movff	pclath,??_Isr
  4651  00000E  CFFB F033          	movff	pclatu,??_Isr+1
  4652  000012  CFE9 F034          	movff	fsr0l,??_Isr+2
  4653  000016  CFEA F035          	movff	fsr0h,??_Isr+3
  4654  00001A  CFE1 F036          	movff	fsr1l,??_Isr+4
  4655  00001E  CFE2 F037          	movff	fsr1h,??_Isr+5
  4656  000022  CFD9 F038          	movff	fsr2l,??_Isr+6
  4657  000026  CFDA F039          	movff	fsr2h,??_Isr+7
  4658  00002A  CFF3 F03A          	movff	prodl,??_Isr+8
  4659  00002E  CFF4 F03B          	movff	prodh,??_Isr+9
  4660  000032  CFF6 F03C          	movff	tblptrl,??_Isr+10
  4661  000036  CFF7 F03D          	movff	tblptrh,??_Isr+11
  4662  00003A  CFF8 F03E          	movff	tblptru,??_Isr+12
  4663  00003E  CFF5 F03F          	movff	tablat,??_Isr+13
  4664                           
  4665                           ;interrupt.c: 31: if(CCP1IF == 1) {
  4666  000042  A49E               	btfss	3998,2,c	;volatile
  4667  000044  D006               	goto	i2l2722
  4668                           
  4669                           ;interrupt.c: 32: CCP1IF = 0;
  4670  000046  949E               	bcf	3998,2,c	;volatile
  4671                           
  4672                           ;interrupt.c: 33: T1CONbits.TMR1ON = 0;
  4673  000048  90CD               	bcf	4045,0,c	;volatile
  4674                           
  4675                           ;interrupt.c: 34: SignalOut();
  4676  00004A  ECB0  F005         	call	_SignalOut	;wreg free
  4677                           
  4678                           ;interrupt.c: 35: __nop();
  4679  00004E  F000               	nop	
  4680                           
  4681                           ;interrupt.c: 36: __nop();
  4682  000050  F000               	nop	
  4683  000052                     i2l2722:
  4684                           
  4685                           ;interrupt.c: 37: }
  4686                           ;interrupt.c: 38: if(TMR3GIF == 1 && pin_out =='A') {
  4687  000052  A2A4               	btfss	4004,1,c	;volatile
  4688  000054  D01C               	goto	i2l488
  4689  000056  0E41               	movlw	65
  4690  000058  184E               	xorwf	_pin_out,w,c
  4691  00005A  A4D8               	btfss	status,2,c
  4692  00005C  D018               	goto	i2l488
  4693                           
  4694                           ;interrupt.c: 39: TMR3GIF = 0;
  4695  00005E  92A4               	bcf	4004,1,c	;volatile
  4696                           
  4697                           ;interrupt.c: 40: time_gear = 0;
  4698  000060  0E00               	movlw	0
  4699  000062  6E2A               	movwf	_time_gear+1,c
  4700  000064  0E00               	movlw	0
  4701  000066  6E29               	movwf	_time_gear,c
  4702                           
  4703                           ;interrupt.c: 41: time_gear = TMR3H;
  4704  000068  CFB3 F029          	movff	4019,_time_gear	;volatile
  4705  00006C  6A2A               	clrf	_time_gear+1,c
  4706                           
  4707                           ;interrupt.c: 42: time_gear <<= 8;
  4708  00006E  5029               	movf	_time_gear,w,c
  4709  000070  6E2A               	movwf	_time_gear+1,c
  4710  000072  6A29               	clrf	_time_gear,c
  4711                           
  4712                           ;interrupt.c: 43: time_gear |= TMR3L;
  4713  000074  50B2               	movf	4018,w,c	;volatile
  4714  000076  1229               	iorwf	_time_gear,f,c
  4715                           
  4716                           ;interrupt.c: 44: __nop();
  4717  000078  F000               	nop	
  4718                           
  4719                           ;interrupt.c: 45: __nop();
  4720  00007A  F000               	nop	
  4721                           
  4722                           ;interrupt.c: 46: TMR3H = 0;
  4723  00007C  0E00               	movlw	0
  4724  00007E  6EB3               	movwf	4019,c	;volatile
  4725                           
  4726                           ;interrupt.c: 47: TMR3L = 0;
  4727  000080  0E00               	movlw	0
  4728  000082  6EB2               	movwf	4018,c	;volatile
  4729                           
  4730                           ;interrupt.c: 48: ModeCheck();
  4731  000084  EC23  F007         	call	_ModeCheck	;wreg free
  4732                           
  4733                           ;interrupt.c: 49: SignalOut();
  4734  000088  ECB0  F005         	call	_SignalOut	;wreg free
  4735                           
  4736                           ;interrupt.c: 53: pulsecounter++;
  4737  00008C  2A2F               	incf	_pulsecounter,f,c
  4738  00008E                     i2l488:
  4739  00008E  C03F  FFF5         	movff	??_Isr+13,tablat
  4740  000092  C03E  FFF8         	movff	??_Isr+12,tblptru
  4741  000096  C03D  FFF7         	movff	??_Isr+11,tblptrh
  4742  00009A  C03C  FFF6         	movff	??_Isr+10,tblptrl
  4743  00009E  C03B  FFF4         	movff	??_Isr+9,prodh
  4744  0000A2  C03A  FFF3         	movff	??_Isr+8,prodl
  4745  0000A6  C039  FFDA         	movff	??_Isr+7,fsr2h
  4746  0000AA  C038  FFD9         	movff	??_Isr+6,fsr2l
  4747  0000AE  C037  FFE2         	movff	??_Isr+5,fsr1h
  4748  0000B2  C036  FFE1         	movff	??_Isr+4,fsr1l
  4749  0000B6  C035  FFEA         	movff	??_Isr+3,fsr0h
  4750  0000BA  C034  FFE9         	movff	??_Isr+2,fsr0l
  4751  0000BE  C033  FFFB         	movff	??_Isr+1,pclatu
  4752  0000C2  C032  FFFA         	movff	??_Isr,pclath
  4753  0000C6  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4754  0000C8  0011               	retfie		f
  4755  0000CA                     __end_of_Isr:
  4756                           	opt stack 0
  4757                           pclatu	equ	0xFFB
  4758                           pclath	equ	0xFFA
  4759                           tblptru	equ	0xFF8
  4760                           tblptrh	equ	0xFF7
  4761                           tblptrl	equ	0xFF6
  4762                           tablat	equ	0xFF5
  4763                           prodh	equ	0xFF4
  4764                           prodl	equ	0xFF3
  4765                           intcon	equ	0xFF2
  4766                           postinc0	equ	0xFEE
  4767                           fsr0h	equ	0xFEA
  4768                           fsr0l	equ	0xFE9
  4769                           wreg	equ	0xFE8
  4770                           indf1	equ	0xFE7
  4771                           postdec1	equ	0xFE5
  4772                           fsr1h	equ	0xFE2
  4773                           fsr1l	equ	0xFE1
  4774                           indf2	equ	0xFDF
  4775                           postinc2	equ	0xFDE
  4776                           postdec2	equ	0xFDD
  4777                           fsr2h	equ	0xFDA
  4778                           fsr2l	equ	0xFD9
  4779                           status	equ	0xFD8
  4780                           
  4781 ;; *************** function _SignalOut *****************
  4782 ;; Defined at:
  4783 ;;		line 32 in file "actors.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;		None
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;		None
  4788 ;; Return value:  Size  Location     Type
  4789 ;;		None               void
  4790 ;; Registers used:
  4791 ;;		wreg, status,2, status,0, cstack
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4801 ;;Total ram usage:        0 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; Hardware stack levels required when called:    1
  4804 ;; This function calls:
  4805 ;;		_Delay
  4806 ;; This function is called by:
  4807 ;;		_Isr
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           	psect	text30
  4812  000B60                     __ptext30:
  4813                           	opt stack 0
  4814  000B60                     _SignalOut:
  4815                           	opt stack 25
  4816                           
  4817                           ;actors.c: 33: switch(pin_out) {
  4818                           
  4819                           ;incstack = 0
  4820  000B60  D02F               	goto	i2l2538
  4821  000B62                     i2l77:
  4822                           
  4823                           ;actors.c: 35: PORTAbits.RA0 = 1;
  4824  000B62  8080               	bsf	3968,0,c	;volatile
  4825                           
  4826                           ;actors.c: 36: Delay(a_actors[0].aile);
  4827  000B64  C0D0  F030         	movff	_a_actors,Delay@del
  4828  000B68  C0D1  F031         	movff	_a_actors+1,Delay@del+1
  4829  000B6C  EC0D  F007         	call	_Delay	;wreg free
  4830                           
  4831                           ;actors.c: 37: pin_out = 'E';
  4832  000B70  0E45               	movlw	69
  4833  000B72  6E4E               	movwf	_pin_out,c
  4834                           
  4835                           ;actors.c: 38: break;
  4836  000B74  0012               	return	
  4837  000B76                     i2l79:
  4838                           
  4839                           ;actors.c: 40: PORTAbits.RA0 = 0;
  4840  000B76  9080               	bcf	3968,0,c	;volatile
  4841                           
  4842                           ;actors.c: 41: PORTAbits.RA1 = 1;
  4843  000B78  8280               	bsf	3968,1,c	;volatile
  4844                           
  4845                           ;actors.c: 42: Delay(a_actors[0].elev);
  4846  000B7A  C0D2  F030         	movff	_a_actors+2,Delay@del
  4847  000B7E  C0D3  F031         	movff	_a_actors+3,Delay@del+1
  4848  000B82  EC0D  F007         	call	_Delay	;wreg free
  4849                           
  4850                           ;actors.c: 43: pin_out = 'T';
  4851  000B86  0E54               	movlw	84
  4852  000B88  6E4E               	movwf	_pin_out,c
  4853                           
  4854                           ;actors.c: 44: break;
  4855  000B8A  0012               	return	
  4856  000B8C                     i2l80:
  4857                           
  4858                           ;actors.c: 46: PORTAbits.RA1 = 0;
  4859  000B8C  9280               	bcf	3968,1,c	;volatile
  4860                           
  4861                           ;actors.c: 47: PORTAbits.RA3 = 1;
  4862  000B8E  8680               	bsf	3968,3,c	;volatile
  4863                           
  4864                           ;actors.c: 48: Delay(a_actors[0].thro);
  4865  000B90  C0D4  F030         	movff	_a_actors+4,Delay@del
  4866  000B94  C0D5  F031         	movff	_a_actors+5,Delay@del+1
  4867  000B98  EC0D  F007         	call	_Delay	;wreg free
  4868                           
  4869                           ;actors.c: 49: pin_out = 'R';
  4870  000B9C  0E52               	movlw	82
  4871  000B9E  6E4E               	movwf	_pin_out,c
  4872                           
  4873                           ;actors.c: 50: break;
  4874  000BA0  0012               	return	
  4875  000BA2                     i2l81:
  4876                           
  4877                           ;actors.c: 52: PORTAbits.RA2 = 0;
  4878  000BA2  9480               	bcf	3968,2,c	;volatile
  4879                           
  4880                           ;actors.c: 53: PORTAbits.RA2 = 1;
  4881  000BA4  8480               	bsf	3968,2,c	;volatile
  4882                           
  4883                           ;actors.c: 54: Delay(a_actors[0].rudd);
  4884  000BA6  C0D6  F030         	movff	_a_actors+6,Delay@del
  4885  000BAA  C0D7  F031         	movff	_a_actors+7,Delay@del+1
  4886  000BAE  EC0D  F007         	call	_Delay	;wreg free
  4887                           
  4888                           ;actors.c: 55: pin_out = 0;
  4889  000BB2  0E00               	movlw	0
  4890  000BB4  6E4E               	movwf	_pin_out,c
  4891                           
  4892                           ;actors.c: 56: break;
  4893  000BB6  0012               	return	
  4894  000BB8                     i2l82:
  4895                           
  4896                           ;actors.c: 58: PORTAbits.RA2 = 0;
  4897  000BB8  9480               	bcf	3968,2,c	;volatile
  4898                           
  4899                           ;actors.c: 59: pin_out = 'A';
  4900  000BBA  0E41               	movlw	65
  4901  000BBC  6E4E               	movwf	_pin_out,c
  4902                           
  4903                           ;actors.c: 61: }
  4904                           ;actors.c: 62: }
  4905                           
  4906                           ;actors.c: 60: break;
  4907  000BBE  0012               	return	
  4908  000BC0                     i2l2538:
  4909  000BC0  504E               	movf	_pin_out,w,c
  4910                           
  4911                           ; Switch size 1, requested type "space"
  4912                           ; Number of cases is 5, Range of values is 0 to 84
  4913                           ; switch strategies available:
  4914                           ; Name         Instructions Cycles
  4915                           ; simple_byte           16     9 (average)
  4916                           ;	Chosen strategy is simple_byte
  4917  000BC2  0A00               	xorlw	0	; case 0
  4918  000BC4  B4D8               	btfsc	status,2,c
  4919  000BC6  D7F8               	goto	i2l82
  4920  000BC8  0A41               	xorlw	65	; case 65
  4921  000BCA  B4D8               	btfsc	status,2,c
  4922  000BCC  D7CA               	goto	i2l77
  4923  000BCE  0A04               	xorlw	4	; case 69
  4924  000BD0  B4D8               	btfsc	status,2,c
  4925  000BD2  D7D1               	goto	i2l79
  4926  000BD4  0A17               	xorlw	23	; case 82
  4927  000BD6  B4D8               	btfsc	status,2,c
  4928  000BD8  D7E4               	goto	i2l81
  4929  000BDA  0A06               	xorlw	6	; case 84
  4930  000BDC  A4D8               	btfss	status,2,c
  4931  000BDE  0012               	return	
  4932  000BE0  D7D5               	goto	i2l80
  4933  000BE2                     __end_of_SignalOut:
  4934                           	opt stack 0
  4935                           pclatu	equ	0xFFB
  4936                           pclath	equ	0xFFA
  4937                           tblptru	equ	0xFF8
  4938                           tblptrh	equ	0xFF7
  4939                           tblptrl	equ	0xFF6
  4940                           tablat	equ	0xFF5
  4941                           prodh	equ	0xFF4
  4942                           prodl	equ	0xFF3
  4943                           intcon	equ	0xFF2
  4944                           postinc0	equ	0xFEE
  4945                           fsr0h	equ	0xFEA
  4946                           fsr0l	equ	0xFE9
  4947                           wreg	equ	0xFE8
  4948                           indf1	equ	0xFE7
  4949                           postdec1	equ	0xFE5
  4950                           fsr1h	equ	0xFE2
  4951                           fsr1l	equ	0xFE1
  4952                           indf2	equ	0xFDF
  4953                           postinc2	equ	0xFDE
  4954                           postdec2	equ	0xFDD
  4955                           fsr2h	equ	0xFDA
  4956                           fsr2l	equ	0xFD9
  4957                           status	equ	0xFD8
  4958                           
  4959 ;; *************** function _Delay *****************
  4960 ;; Defined at:
  4961 ;;		line 20 in file "actors.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;  del             2    0[COMRAM] unsigned int 
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;		None
  4966 ;; Return value:  Size  Location     Type
  4967 ;;		None               void
  4968 ;; Registers used:
  4969 ;;		wreg, status,2, status,0
  4970 ;; Tracked objects:
  4971 ;;		On entry : 0/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4978 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4979 ;;Total ram usage:        2 bytes
  4980 ;; Hardware stack levels used:    1
  4981 ;; This function calls:
  4982 ;;		Nothing
  4983 ;; This function is called by:
  4984 ;;		_SignalOut
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           	psect	text31
  4989  000E1A                     __ptext31:
  4990                           	opt stack 0
  4991  000E1A                     _Delay:
  4992                           	opt stack 25
  4993                           
  4994                           ;actors.c: 21: del <<= 1;
  4995                           
  4996                           ;incstack = 0
  4997  000E1A  90D8               	bcf	status,0,c
  4998  000E1C  3630               	rlcf	Delay@del,f,c
  4999  000E1E  3631               	rlcf	Delay@del+1,f,c
  5000                           
  5001                           ;actors.c: 22: del = 1000 + del;
  5002  000E20  0EE8               	movlw	232
  5003  000E22  2430               	addwf	Delay@del,w,c
  5004  000E24  6E30               	movwf	Delay@del,c
  5005  000E26  0E03               	movlw	3
  5006  000E28  2031               	addwfc	Delay@del+1,w,c
  5007  000E2A  6E31               	movwf	Delay@del+1,c
  5008                           
  5009                           ;actors.c: 23: TMR1L = 0;
  5010  000E2C  0E00               	movlw	0
  5011  000E2E  6ECE               	movwf	4046,c	;volatile
  5012                           
  5013                           ;actors.c: 24: TMR1H = 0;
  5014  000E30  0E00               	movlw	0
  5015  000E32  6ECF               	movwf	4047,c	;volatile
  5016                           
  5017                           ;actors.c: 25: CCPR1L = del;
  5018  000E34  C030  FFBE         	movff	Delay@del,4030	;volatile
  5019                           
  5020                           ;actors.c: 26: del >>= 8;
  5021  000E38  5031               	movf	Delay@del+1,w,c
  5022  000E3A  6E30               	movwf	Delay@del,c
  5023  000E3C  6A31               	clrf	Delay@del+1,c
  5024                           
  5025                           ;actors.c: 27: CCPR1H = del;
  5026  000E3E  C030  FFBF         	movff	Delay@del,4031	;volatile
  5027                           
  5028                           ;actors.c: 28: T1CONbits.TMR1ON = 1;
  5029  000E42  80CD               	bsf	4045,0,c	;volatile
  5030  000E44  0012               	return		;funcret
  5031  000E46                     __end_of_Delay:
  5032                           	opt stack 0
  5033                           pclatu	equ	0xFFB
  5034                           pclath	equ	0xFFA
  5035                           tblptru	equ	0xFF8
  5036                           tblptrh	equ	0xFF7
  5037                           tblptrl	equ	0xFF6
  5038                           tablat	equ	0xFF5
  5039                           prodh	equ	0xFF4
  5040                           prodl	equ	0xFF3
  5041                           intcon	equ	0xFF2
  5042                           postinc0	equ	0xFEE
  5043                           fsr0h	equ	0xFEA
  5044                           fsr0l	equ	0xFE9
  5045                           wreg	equ	0xFE8
  5046                           indf1	equ	0xFE7
  5047                           postdec1	equ	0xFE5
  5048                           fsr1h	equ	0xFE2
  5049                           fsr1l	equ	0xFE1
  5050                           indf2	equ	0xFDF
  5051                           postinc2	equ	0xFDE
  5052                           postdec2	equ	0xFDD
  5053                           fsr2h	equ	0xFDA
  5054                           fsr2l	equ	0xFD9
  5055                           status	equ	0xFD8
  5056                           
  5057 ;; *************** function _ModeCheck *****************
  5058 ;; Defined at:
  5059 ;;		line 30 in file "gear.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;		None
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;		None
  5064 ;; Return value:  Size  Location     Type
  5065 ;;		None               void
  5066 ;; Registers used:
  5067 ;;		wreg, status,2, status,0
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5077 ;;Total ram usage:        0 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; This function calls:
  5080 ;;		Nothing
  5081 ;; This function is called by:
  5082 ;;		_Isr
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086                           	psect	text32
  5087  000E46                     __ptext32:
  5088                           	opt stack 0
  5089  000E46                     _ModeCheck:
  5090                           	opt stack 26
  5091                           
  5092                           ;gear.c: 31: __nop();
  5093                           
  5094                           ;incstack = 0
  5095  000E46  F000               	nop	
  5096                           
  5097                           ;gear.c: 32: if(time_gear < 6800){
  5098  000E48  0E90               	movlw	144
  5099  000E4A  5C29               	subwf	_time_gear,w,c
  5100  000E4C  0E1A               	movlw	26
  5101  000E4E  582A               	subwfb	_time_gear+1,w,c
  5102  000E50  B0D8               	btfsc	status,0,c
  5103  000E52  D004               	goto	i2l2008
  5104                           
  5105                           ;gear.c: 34: PORTBbits.RB2 = 0;
  5106  000E54  9481               	bcf	3969,2,c	;volatile
  5107                           
  5108                           ;gear.c: 35: PORTAbits.RA5 = 1;
  5109  000E56  8A80               	bsf	3968,5,c	;volatile
  5110                           
  5111                           ;gear.c: 36: set_ret = 0;
  5112  000E58  984F               	bcf	_set_ret/(0+8),_set_ret& (0+7),c
  5113                           
  5114                           ;gear.c: 37: }else if(time_gear >= 6800) {
  5115  000E5A  D009               	goto	i2l228
  5116  000E5C                     i2l2008:
  5117  000E5C  0E90               	movlw	144
  5118  000E5E  5C29               	subwf	_time_gear,w,c
  5119  000E60  0E1A               	movlw	26
  5120  000E62  582A               	subwfb	_time_gear+1,w,c
  5121  000E64  A0D8               	btfss	status,0,c
  5122  000E66  D003               	goto	i2l228
  5123                           
  5124                           ;gear.c: 38: PORTBbits.RB2 = 1;
  5125  000E68  8481               	bsf	3969,2,c	;volatile
  5126                           
  5127                           ;gear.c: 39: PORTAbits.RA5 = 0;
  5128  000E6A  9A80               	bcf	3968,5,c	;volatile
  5129                           
  5130                           ;gear.c: 40: set_ret = 1;
  5131  000E6C  884F               	bsf	_set_ret/(0+8),_set_ret& (0+7),c
  5132  000E6E                     i2l228:
  5133                           
  5134                           ;gear.c: 41: }
  5135                           ;gear.c: 42: __nop();
  5136  000E6E  F000               	nop	
  5137                           
  5138                           ;gear.c: 43: return set_ret;
  5139                           ;	Return value of _ModeCheck is never used
  5140  000E70  0012               	return		;funcret
  5141  000E72                     __end_of_ModeCheck:
  5142                           	opt stack 0
  5143  0000                     pclatu	equ	0xFFB
  5144                           pclath	equ	0xFFA
  5145                           tblptru	equ	0xFF8
  5146                           tblptrh	equ	0xFF7
  5147                           tblptrl	equ	0xFF6
  5148                           tablat	equ	0xFF5
  5149                           prodh	equ	0xFF4
  5150                           prodl	equ	0xFF3
  5151                           intcon	equ	0xFF2
  5152                           postinc0	equ	0xFEE
  5153                           fsr0h	equ	0xFEA
  5154                           fsr0l	equ	0xFE9
  5155                           wreg	equ	0xFE8
  5156                           indf1	equ	0xFE7
  5157                           postdec1	equ	0xFE5
  5158                           fsr1h	equ	0xFE2
  5159                           fsr1l	equ	0xFE1
  5160                           indf2	equ	0xFDF
  5161                           postinc2	equ	0xFDE
  5162                           postdec2	equ	0xFDD
  5163                           fsr2h	equ	0xFDA
  5164                           fsr2l	equ	0xFD9
  5165                           status	equ	0xFD8
  5166                           pclatu	equ	0xFFB
  5167                           pclath	equ	0xFFA
  5168                           tblptru	equ	0xFF8
  5169                           tblptrh	equ	0xFF7
  5170                           tblptrl	equ	0xFF6
  5171                           tablat	equ	0xFF5
  5172                           prodh	equ	0xFF4
  5173                           prodl	equ	0xFF3
  5174                           intcon	equ	0xFF2
  5175                           postinc0	equ	0xFEE
  5176                           fsr0h	equ	0xFEA
  5177                           fsr0l	equ	0xFE9
  5178                           wreg	equ	0xFE8
  5179                           indf1	equ	0xFE7
  5180                           postdec1	equ	0xFE5
  5181                           fsr1h	equ	0xFE2
  5182                           fsr1l	equ	0xFE1
  5183                           indf2	equ	0xFDF
  5184                           postinc2	equ	0xFDE
  5185                           postdec2	equ	0xFDD
  5186                           fsr2h	equ	0xFDA
  5187                           fsr2l	equ	0xFD9
  5188                           status	equ	0xFD8
  5189                           
  5190                           	psect	rparam
  5191  0000                     pclatu	equ	0xFFB
  5192                           pclath	equ	0xFFA
  5193                           tblptru	equ	0xFF8
  5194                           tblptrh	equ	0xFF7
  5195                           tblptrl	equ	0xFF6
  5196                           tablat	equ	0xFF5
  5197                           prodh	equ	0xFF4
  5198                           prodl	equ	0xFF3
  5199                           intcon	equ	0xFF2
  5200                           postinc0	equ	0xFEE
  5201                           fsr0h	equ	0xFEA
  5202                           fsr0l	equ	0xFE9
  5203                           wreg	equ	0xFE8
  5204                           indf1	equ	0xFE7
  5205                           postdec1	equ	0xFE5
  5206                           fsr1h	equ	0xFE2
  5207                           fsr1l	equ	0xFE1
  5208                           indf2	equ	0xFDF
  5209                           postinc2	equ	0xFDE
  5210                           postdec2	equ	0xFDD
  5211                           fsr2h	equ	0xFDA
  5212                           fsr2l	equ	0xFD9
  5213                           status	equ	0xFD8
  5214                           
  5215                           	psect	temp
  5216  000050                     btemp:
  5217                           	opt stack 0
  5218  000050                     	ds	1
  5219  0000                     int$flags	set	btemp
  5220                           pclatu	equ	0xFFB
  5221                           pclath	equ	0xFFA
  5222                           tblptru	equ	0xFF8
  5223                           tblptrh	equ	0xFF7
  5224                           tblptrl	equ	0xFF6
  5225                           tablat	equ	0xFF5
  5226                           prodh	equ	0xFF4
  5227                           prodl	equ	0xFF3
  5228                           intcon	equ	0xFF2
  5229                           postinc0	equ	0xFEE
  5230                           fsr0h	equ	0xFEA
  5231                           fsr0l	equ	0xFE9
  5232                           wreg	equ	0xFE8
  5233                           indf1	equ	0xFE7
  5234                           postdec1	equ	0xFE5
  5235                           fsr1h	equ	0xFE2
  5236                           fsr1l	equ	0xFE1
  5237                           indf2	equ	0xFDF
  5238                           postinc2	equ	0xFDE
  5239                           postdec2	equ	0xFDD
  5240                           fsr2h	equ	0xFDA
  5241                           fsr2l	equ	0xFD9
  5242                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        15
    BSS         209
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     16      79
    BANK0           160     14     134
    BANK1           256      0      42
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Isr in COMRAM

    _SignalOut->_Delay

Critical Paths under _main in BANK0

    _main->_CheckThrottle
    _main->_ReadObject
    _ReadObject->_ExchangeSpiWord
    _CompareFrames->_CheckRudderAhead
    _CompareFrames->_CheckRudderBack
    _CheckRudderBack->_ActRudder
    _CheckRudderAhead->_ActRudder
    _CheckElevator->_ActElevator
    _CheckAileron->_ActAileron
    _CheckThrottle->_ActThrottle
    _BeneathTable->_ActThrottle
    _BeneathFloor->_ActThrottle

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2037
                      _CheckThrottle
                      _CompareFrames
                               _Init
                         _ReadHeight
                         _ReadObject
                 _StartHeightMeasure
                         _StoreAsOld
 ---------------------------------------------------------------------------------
 (1) _StoreAsOld                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _StartHeightMeasure                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadObject                                          10     7      3    1303
                                              5 BANK0      9     6      3
                    _ExchangeSpiWord
 ---------------------------------------------------------------------------------
 (2) _ExchangeSpiWord                                      5     3      2     591
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ReadHeight                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                         _InitActors
                          _InitAnsel
                           _InitComp
                      _InitInterrupt
                            _InitOsc
                           _InitPort
                            _InitSpi
                          _InitTimer
                           _InitTris
                           _InitUart
 ---------------------------------------------------------------------------------
 (2) _InitUart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitSpi                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitOsc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitComp                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitActors                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CompareFrames                                        2     2      0     124
                                              2 BANK0      2     2      0
                       _CheckAileron
                      _CheckElevator
                   _CheckRudderAhead
                    _CheckRudderBack
 ---------------------------------------------------------------------------------
 (2) _CheckRudderBack                                      1     1      0      31
                                              1 BANK0      1     1      0
                          _ActRudder
 ---------------------------------------------------------------------------------
 (2) _CheckRudderAhead                                     1     1      0      31
                                              1 BANK0      1     1      0
                          _ActRudder
 ---------------------------------------------------------------------------------
 (3) _ActRudder                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CheckElevator                                        0     0      0      31
                        _ActElevator
 ---------------------------------------------------------------------------------
 (3) _ActElevator                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CheckAileron                                         0     0      0      31
                         _ActAileron
 ---------------------------------------------------------------------------------
 (3) _ActAileron                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CheckThrottle                                       13    13      0     610
                                              1 BANK0     13    13      0
                        _ActThrottle
                       _BeneathFloor
                       _BeneathTable
 ---------------------------------------------------------------------------------
 (2) _BeneathTable                                         0     0      0      31
                        _ActThrottle
 ---------------------------------------------------------------------------------
 (2) _BeneathFloor                                         0     0      0      31
                        _ActThrottle
 ---------------------------------------------------------------------------------
 (3) _ActThrottle                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Isr                                                 14    14      0     241
                                              2 COMRAM    14    14      0
                          _ModeCheck
                          _SignalOut
 ---------------------------------------------------------------------------------
 (5) _SignalOut                                            0     0      0     241
                              _Delay
 ---------------------------------------------------------------------------------
 (6) _Delay                                                2     0      2     241
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ModeCheck                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CheckThrottle
     _ActThrottle
     _BeneathFloor
       _ActThrottle
     _BeneathTable
       _ActThrottle
   _CompareFrames
     _CheckAileron
       _ActAileron
     _CheckElevator
       _ActElevator
     _CheckRudderAhead
       _ActRudder
     _CheckRudderBack
       _ActRudder
   _Init
     _InitActors
     _InitAnsel
     _InitComp
     _InitInterrupt
     _InitOsc
     _InitPort
     _InitSpi
     _InitTimer
     _InitTris
     _InitUart
   _ReadHeight
   _ReadObject
     _ExchangeSpiWord
   _StartHeightMeasure
   _StoreAsOld

 _Isr (ROOT)
   _ModeCheck
   _SignalOut
     _Delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      2A       7       16.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      E      86       5       83.8%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     10      4F       1       84.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FF      12        0.0%
DATA                 0      0      FF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Feb 01 14:03:12 2016

                 _ActAileron 0F60              _highpassallowed 027A                            _w 002D  
                         _lw 0027       ReadObject@des_obj_type 0030                 __CFG_CP0$OFF 000000  
                _ActElevator 0F4E                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                          l630 0438                          l635 0548  
                        l563 0DEE                          l638 0534                          l861 0CC4  
                        l950 0B5E                          l776 0BE2                          l864 0CDE  
                        _GIE 007F97                 __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000  
                        _Isr 0008            ActThrottle@change 00D8                          prod 000FF3  
                        wreg 000FE8            ReadObject@des_obj 00DD                 __CFG_LVP$OFF 000000  
          ReadObject@max_obj 00DF                         ?_Isr 0030                         l1010 0104  
                       l1011 0100                         l1020 01B8                         l1021 01B4  
                       l1013 0106                         l1023 01BA                         l1035 022A  
                       l1027 0222                         l1037 02D6                         l3000 0D8A  
                       l3010 0DBA                         l3002 0D92                         l3100 0742  
                       l3102 0746                         l3016 0DDA                         l3018 0DE2  
                       l3210 040E                         l3202 03CE                         l3050 049E  
                       l3060 04E8                         l3206 03F8                         l3150 0116  
                       l3118 0B58                         l3046 0474                 _pulsecounter 002F  
                       l3180 0212                         l3156 016A                         l3148 0110  
                       l3068 0524                         l3190 0248                         l3174 01F2  
                       l3182 021A                         l3166 01C4                         l3176 0202  
                       l3168 01CA                         l3186 022C                         l3178 020A  
                       l2900 098A                         l3198 0302                         l2910 09C6  
                       l2902 0992                         l2912 09CE                         l2920 0858  
                       l2906 09AE                         l2914 09D6                         l2930 08A8  
                       l2922 0860                         l2860 0A46                         l2908 09BE  
                       l2932 08B0                         l2828 0CC0                         l2870 0A80  
                       l2854 0A26                         l2862 0A4E                         l2950 0914  
                       l2934 08B8                         l2918 0848                         l2872 0A88  
                       l2856 0A36                         l2864 0A56                         l2848 09FE  
                       l2928 0898                         l2936 08C0                         l2960 078C  
                       l2874 0A90                         l2858 0A3E                         l2946 0904  
                       l2938 08C8                         l2970 07D4                         l2954 0764  
                       l2868 0A72                         l2876 0A98                         l2892 0964  
                       l2948 090C                         l2964 07B4                         l2972 07DC  
                       l2956 0774                         l2894 0972                         l2886 093C  
                       l2982 0820                         l2966 07C4                         l2974 07E4  
                       l2958 077C                         l2896 097A                         l2984 0828  
                       l2968 07CC                         l2994 0D6A                         l2898 0982  
                       l2986 0830                         u2420 0124                         u1800 0A0A  
                       u2480 01D6                         u1780 09EA                         u1870 0928  
                       u2577 0CB2                         u1890 0948                         u2587 0416  
                       _PEIE 007F96                         u1980 0870                         i2l80 0B8C  
                       i2l81 0BA2                         i2l82 0BB8                         i2l77 0B62  
                       i2l79 0B76              _ExchangeSpiWord 0C9C                         _Init 0E9C  
                       _cm50 004A                         _cm80 004C                  _ActThrottle 0F72  
                       _main 0DEA                         fsr0h 000FEA                         fsr1h 000FE2  
                       fsr0l 000FE9                         fsr2h 000FDA                         indf1 000FE7  
                       fsr1l 000FE1                         indf2 000FDF                         fsr2l 000FD9  
                       btemp 0050                __CFG_BORV$190 000000                         pclat 000FFA  
                       prodh 000FF4                         prodl 000FF3           ReadObject@checksum 00E2  
                       start 00CA            ??_CheckRudderBack 00D9                __CFG_IESO$OFF 000000  
               ___param_bank 000010                _InitInterrupt 0FA4              __end_of_InitOsc 0FC6  
            __end_of_InitSpi 0FBC                        ??_Isr 0032                        ?_Init 0030  
                      ?_main 0030               __CFG_DEBUG$OFF 000000                        i2l228 0E6E  
                      i2l488 008E                        _TMR1H 000FCF                        _TMR3H 000FB3  
                      _TMR1L 000FCE                        _TMR3L 000FB2                        _TMR5H 000F50  
                      _TMR5L 000F4F                        _PORTA 000F80                        _PORTB 000F81  
                      _PORTC 000F82                        _PORTD 000F83                        _PORTE 000F84  
      __size_of_CheckAileron 00C2                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TRISE 000F96  
                      _Delay 0E1A                __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000  
              __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000                        _cm100 0042  
                      _cm120 0044                        _cm220 0048                        _cm180 0046  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000  
                      _frame 0279                        _table 027E           __CFG_MCLRE$EXTMCLR 000000  
                ReadObject@c 00E4            ?_CheckRudderAhead 0030               __pbitbssCOMRAM 0278  
                      tablat 000FF5        __size_of_BeneathFloor 0050        __size_of_BeneathTable 0050  
                      status 000FD8           ??_CheckRudderAhead 00D9               __CFG_HFOFST$ON 000000  
             __CFG_PBADEN$ON 000000                   _InitActors 0EC6           __size_of_ActRudder 0012  
             ?_InitInterrupt 0030                   _ReadHeight 0BE2              __initialization 0CF6  
               __end_of_Init 0EC6           _StartHeightMeasure 0F84                   _ReadObject 0428  
                ?_ActAileron 0030                 __end_of_main 0E1A                 _CheckAileron 09DE  
           __end_of_InitComp 0FD0             __end_of_InitUart 0FD2             __end_of_InitPort 0F3C  
           __end_of_InitTris 0F26                       ??_Init 00D8          ?_StartHeightMeasure 0030  
                     ??_main 00E6                __activetblptr 000002               __CFG_PLLCFG$ON 000000  
                     ?_Delay 0030      __end_of_ExchangeSpiWord 0CF6                 _BeneathFloor 0D9A  
               _BeneathTable 0D4A                       _CCP1IE 007CEA                       _CCP1IF 007CF2  
                     _CCPR1H 000FBF                       _CCPR1L 000FBE                       _ANSELA 000F38  
                     _ANSELB 000F39                       _ANSELC 000F3A                       _ANSELD 000F3B  
                     _ANSELE 000F3C                       i2l2008 0E5C               __CFG_WDTEN$OFF 000000  
                     i2l2538 0BC0                       i2l2722 0052                       _OSCCON 000FD3  
         __size_of_InitAnsel 0020         ??_StartHeightMeasure 00D8                       _TMR3IF 007D09  
                     _SSP1IF 007CF3           __size_of_InitTimer 005C           __size_of_ModeCheck 002C  
                  ??_InitOsc 00D8                    ??_InitSpi 00D8       __size_of_CheckElevator 00C2  
             __CFG_XINST$OFF 000000                       _a_path 00A6                       _c_path 0040  
             __CFG_STVREN$ON 000000                       clear_0 0CFC                       clear_1 0D08  
                     clear_2 0D16           __size_of_SignalOut 0082                 __pdataCOMRAM 0040  
     __size_of_CheckThrottle 035A                       tblptrh 000FF7                       tblptrl 000FF6  
          __end_of_ActRudder 0F4E                       tblptru 000FF8          __size_of_ActAileron 0012  
                 __accesstop 0060      __end_of__initialization 0D3C                   _StoreAsOld 0E72  
            ??_InitInterrupt 00D8                ___rparam_used 000001                  ?_InitActors 0030  
              __end_of_Delay 0E46                  ?_ReadHeight 0030                  ?_ReadObject 00DD  
             __pcstackCOMRAM 0030                 ?_ActElevator 0030            __end_of_InitAnsel 0F10  
                 _a_path_old 0100            __end_of_InitTimer 0C9C            __end_of_ModeCheck 0E72  
              _CheckElevator 091C                      ??_Delay 0032             ?_ExchangeSpiWord 00D8  
            _CheckRudderBack 0754                   __pbssBANK0 0060                   __pbssBANK1 0100  
                  ?_InitComp 0030                    ?_InitUart 0030                    ?_InitPort 0030  
                 _changerate 001F            __end_of_SignalOut 0BE2                    ?_InitTris 0030  
               ?_ActThrottle 0030                _CheckThrottle 00CE           __CFG_CCP2MX$PORTC1 000000  
      __end_of_CompareFrames 0B60           __CFG_CCP3MX$PORTB5 000000               ?_CheckElevator 0030  
        __size_of_InitActors 002A            __CFG_PRICLKEN$OFF 000000                      _TMR3GIE 007D19  
                    _TMR3GIF 007D21                      _TMR5GIF 007D22                      _SSP1BUF 000FC9  
        __size_of_ReadHeight 005E          __size_of_ReadObject 032C                   ??_InitComp 00D8  
                 ??_InitUart 00D8                   ??_InitPort 00D8                   ??_InitTris 00D8  
                ?_StoreAsOld 0030                      _InitOsc 0FBC                      _InitSpi 0FB2  
             ?_CheckThrottle 0030              __CFG_PWRTEN$OFF 000000                      __Hparam 0000  
                    __Lparam 0000                 ??_ActAileron 00D8    __size_of_CheckRudderAhead 00E4  
                    _a_color 0060                      _a_frame 0001                      __pcinit 0CF6  
                    __ramtop 1000                      __ptext0 0DEA                      __ptext1 0E72  
                    __ptext2 0F84                      __ptext3 0428                      __ptext4 0C9C  
                    __ptext5 0BE2                      __ptext6 0E9C                      __ptext7 0FD0  
                    __ptext8 0F10                      __ptext9 0C40      __end_of_CheckRudderBack 0838  
                  _T1CONbits 000FCD                 __size_of_Isr 00C2                    _T3CONbits 000FB1  
                    _pin_out 004E                    _T5CONbits 000F4E                      _set_ret 027C  
           CheckThrottle@tmp 00E0         end_of_initialization 0D3C           __end_of_ActAileron 0F72  
              __Lmediumconst 0000                      postdec1 000FE5                      postdec2 000FDD  
                    postinc0 000FEE                      postinc2 000FDE              ??_CheckElevator 00D9  
                  _PORTAbits 000F80                    _PORTBbits 000F81          __size_of_StoreAsOld 002A  
       __size_of_ActElevator 0012         ExchangeSpiWord@byte1 00DA         ExchangeSpiWord@byte2 00D8  
        CheckThrottle@i_1742 00E4          CheckThrottle@i_1743 00DE                    _ActRudder 0F3C  
__size_of_StartHeightMeasure 0010              ??_CheckThrottle 00D9                  _CCP1CONbits 000FBD  
               ??_InitActors 00D8         __size_of_ActThrottle 0012                 ??_ReadHeight 00D8  
               ??_ReadObject 00E0                  _a_frame_dif 0015                __pidataCOMRAM 0F94  
           ?_CheckRudderBack 0030          start_initialization 0CF6                    _InitAnsel 0EF0  
                __end_of_Isr 00CA           __end_of_InitActors 0EF0                    _InitTimer 0C40  
                  _ModeCheck 0E46           __end_of_ReadHeight 0C40           __end_of_ReadObject 0754  
                 ?_ActRudder 0030            ActElevator@change 00D8             ActAileron@change 00D8  
          __size_of_InitComp 000A            __size_of_InitUart 0002            __size_of_InitPort 0016  
          __size_of_InitTris 0016                    _SignalOut 0B60        __end_of_InitInterrupt 0FB2  
           _CheckRudderAhead 0838              ActRudder@change 00D8                  __pbssCOMRAM 0001  
                 ?_InitAnsel 0030                __pcstackBANK0 00D8                   ?_InitTimer 0030  
                 ?_ModeCheck 0030     __size_of_ExchangeSpiWord 005A                 ??_StoreAsOld 00D8  
                   ?_InitOsc 0030                     ?_InitSpi 0030                   ?_SignalOut 0030  
                  __pintcode 0008                ?_CheckAileron 0030                    _direction 0278  
         __end_of_StoreAsOld 0E9C               __size_of_Delay 002C                ?_BeneathFloor 0030  
              ?_BeneathTable 0030       __size_of_CompareFrames 00C0                  ??_ActRudder 00D8  
                   Delay@del 0030               ??_CheckAileron 00D9             __CFG_WDTPS$32768 000000  
                  _time_gear 0029                     _SSP1CON1 000FC6                     _SSP1STAT 000FC7  
            ReadObject@c_obj 00E5               ??_BeneathFloor 00D9               ??_BeneathTable 00D9  
                ??_InitAnsel 00D8                  ??_InitTimer 00D8                  ??_ModeCheck 0030  
              _id_current_cc 0025                    copy_data0 0D30                     _InitComp 0FC6  
                   _InitUart 0FD0                     _InitPort 0F26                     _InitTris 0F10  
                   __Hrparam 0000                  ??_SignalOut 0032             __size_of_InitOsc 000A  
           __size_of_InitSpi 000A                     __Lrparam 0000            ??_ExchangeSpiWord 00DA  
         __CFG_BOREN$SBORDIS 000000                _CompareFrames 0AA0            __CFG_P2BMX$PORTD2 000000  
              ??_ActElevator 00D8                     _a_actors 00D0        __end_of_CheckElevator 09DE  
                   __ptext10 0FB2                     __ptext11 0F26                     __ptext20 0F3C  
                   __ptext12 0FBC                     __ptext21 091C                     __ptext13 0FA4  
                   __ptext30 0B60                     __ptext22 0F4E                     __ptext14 0FC6  
                   __ptext31 0E1A                     __ptext23 09DE                     __ptext15 0EF0  
                   __ptext32 0E46                     __ptext24 0F60                     __ptext16 0EC6  
                   __ptext25 00CE                     __ptext17 0AA0                     __ptext26 0D4A  
                   __ptext18 0754                     __ptext27 0D9A                     __ptext19 0838  
                   __ptext28 0F72     __end_of_CheckRudderAhead 091C   __end_of_StartHeightMeasure 0F94  
                 _T3GCONbits 000FB4                  _OSCCON2bits 000FD2                __size_of_Init 002A  
              ??_ActThrottle 00D8                     _obj_type 027B                __size_of_main 0030  
                 _T5GCONbits 000F4D        __end_of_CheckThrottle 0428               CheckThrottle@i 00E2  
             ?_CompareFrames 0030      ExchangeSpiWord@SPI_word 00DB                     int$flags 0050  
                   _outgoing 0022                     _storedif 027D                  _OSCTUNEbits 000F9B  
        __end_of_ActElevator 0F60         __end_of_CheckAileron 0AA0     __size_of_CheckRudderBack 00E4  
                   intlevel2 0000         __end_of_BeneathFloor 0DEA         __end_of_BeneathTable 0D9A  
        __end_of_ActThrottle 0F84                  _time_height 002B            __CFG_T3CMX$PORTC0 000000  
     __size_of_InitInterrupt 000E            __CFG_FOSC$INTIO67 000000              ??_CompareFrames 00DA  
