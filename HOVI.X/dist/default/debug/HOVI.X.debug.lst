

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Jan 20 18:48:37 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    50                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    51  0000                     
    52                           	psect	idataCOMRAM
    53  000FA6                     __pidataCOMRAM:
    54                           	opt stack 0
    55                           
    56                           ;initializer for _c_path
    57  000FA6  000A               	dw	10
    58                           
    59                           ;initializer for _cm100
    60  000FA8  5B1B               	dw	23323
    61                           
    62                           ;initializer for _cm120
    63  000FAA  6D53               	dw	27987
    64                           
    65                           ;initializer for _cm180
    66  000FAC  A3FE               	dw	41982
    67                           
    68                           ;initializer for _cm220
    69  000FAE  C86E               	dw	51310
    70                           
    71                           ;initializer for _cm50
    72  000FB0  2D8E               	dw	11662
    73                           
    74                           ;initializer for _cm80
    75  000FB2  48E3               	dw	18659
    76                           
    77                           ;initializer for _pin_out
    78  000FB4  41                 	db	65
    79  0000                     _ANSELA	set	3896
    80  0000                     _ANSELB	set	3897
    81  0000                     _ANSELC	set	3898
    82  0000                     _ANSELD	set	3899
    83  0000                     _ANSELE	set	3900
    84  0000                     _T5CONbits	set	3918
    85  0000                     _T5GCONbits	set	3917
    86  0000                     _TMR5H	set	3920
    87  0000                     _TMR5L	set	3919
    88  0000                     _CCP1CONbits	set	4029
    89  0000                     _CCPR1H	set	4031
    90  0000                     _CCPR1L	set	4030
    91  0000                     _OSCCON	set	4051
    92  0000                     _PORTA	set	3968
    93  0000                     _PORTAbits	set	3968
    94  0000                     _PORTB	set	3969
    95  0000                     _PORTBbits	set	3969
    96  0000                     _PORTC	set	3970
    97  0000                     _PORTD	set	3971
    98  0000                     _PORTE	set	3972
    99  0000                     _SSP1BUF	set	4041
   100  0000                     _SSP1CON1	set	4038
   101  0000                     _SSP1STAT	set	4039
   102  0000                     _T1CONbits	set	4045
   103  0000                     _T3CONbits	set	4017
   104  0000                     _T3GCONbits	set	4020
   105  0000                     _TMR1H	set	4047
   106  0000                     _TMR1L	set	4046
   107  0000                     _TMR3H	set	4019
   108  0000                     _TMR3L	set	4018
   109  0000                     _TRISA	set	3986
   110  0000                     _TRISB	set	3987
   111  0000                     _TRISC	set	3988
   112  0000                     _TRISD	set	3989
   113  0000                     _TRISE	set	3990
   114  0000                     _CCP1IE	set	31978
   115  0000                     _CCP1IF	set	31986
   116  0000                     _GIE	set	32663
   117  0000                     _PEIE	set	32662
   118  0000                     _SSP1IF	set	31987
   119  0000                     _TMR3GIE	set	32025
   120  0000                     _TMR3GIF	set	32033
   121  0000                     _TMR5GIF	set	32034
   122                           
   123                           ; #config settings
   124  0000                     
   125                           	psect	cinit
   126  000CDC                     __pcinit:
   127                           	opt stack 0
   128  000CDC                     start_initialization:
   129                           	opt stack 0
   130  000CDC                     __initialization:
   131                           	opt stack 0
   132                           
   133                           ; Clear objects allocated to BANK1 (42 bytes)
   134  000CDC  EE01  F000         	lfsr	0,__pbssBANK1
   135  000CE0  0E2A               	movlw	42
   136  000CE2                     clear_0:
   137  000CE2  6AEE               	clrf	postinc0,c
   138  000CE4  06E8               	decf	wreg,f,c
   139  000CE6  E1FD               	bnz	clear_0
   140                           
   141                           ; Clear objects allocated to BANK0 (120 bytes)
   142  000CE8  EE00  F060         	lfsr	0,__pbssBANK0
   143  000CEC  0E78               	movlw	120
   144  000CEE                     clear_1:
   145  000CEE  6AEE               	clrf	postinc0,c
   146  000CF0  06E8               	decf	wreg,f,c
   147  000CF2  E1FD               	bnz	clear_1
   148                           
   149                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   150  000CF4  6A4F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   151                           
   152                           ; Clear objects allocated to COMRAM (47 bytes)
   153  000CF6  EE00  F001         	lfsr	0,__pbssCOMRAM
   154  000CFA  0E2F               	movlw	47
   155  000CFC                     clear_2:
   156  000CFC  6AEE               	clrf	postinc0,c
   157  000CFE  06E8               	decf	wreg,f,c
   158  000D00  E1FD               	bnz	clear_2
   159                           
   160                           ; Initialize objects allocated to COMRAM (15 bytes)
   161                           ; load TBLPTR registers with __pidataCOMRAM
   162  000D02  0EA6               	movlw	low __pidataCOMRAM
   163  000D04  6EF6               	movwf	tblptrl,c
   164  000D06  0E0F               	movlw	high __pidataCOMRAM
   165  000D08  6EF7               	movwf	tblptrh,c
   166  000D0A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   167  000D0C  6EF8               	movwf	tblptru,c
   168  000D0E  EE00  F040         	lfsr	0,__pdataCOMRAM
   169  000D12  EE10 F00F          	lfsr	1,15
   170  000D16                     copy_data0:
   171  000D16  0009               	tblrd		*+
   172  000D18  CFF5 FFEE          	movff	tablat,postinc0
   173  000D1C  50E5               	movf	postdec1,w,c
   174  000D1E  50E1               	movf	fsr1l,w,c
   175  000D20  E1FA               	bnz	copy_data0
   176  000D22                     end_of_initialization:
   177                           	opt stack 0
   178  000D22                     __end_of__initialization:
   179                           	opt stack 0
   180  000D22  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   181  000D24  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   182  000D26  0E00               	movlw	low (__Lmediumconst shr (0+16))
   183  000D28  6EF8               	movwf	tblptru,c
   184  000D2A  0100               	movlb	0
   185  000D2C  EFE8  F006         	goto	_main	;jump to C main() function
   186                           tblptru	equ	0xFF8
   187                           tblptrh	equ	0xFF7
   188                           tblptrl	equ	0xFF6
   189                           tablat	equ	0xFF5
   190                           postinc0	equ	0xFEE
   191                           wreg	equ	0xFE8
   192                           postdec1	equ	0xFE5
   193                           fsr1l	equ	0xFE1
   194                           
   195                           	psect	bitbssCOMRAM
   196  000278                     __pbitbssCOMRAM:
   197                           	opt stack 0
   198  000278                     _direction:
   199                           	opt stack 0
   200  000278                     	ds	1
   201  000279                     _frame:
   202                           	opt stack 0
   203  000279                     	ds	1
   204  00027A                     _highpassallowed:
   205                           	opt stack 0
   206  00027A                     	ds	1
   207  00027B                     _obj_type:
   208                           	opt stack 0
   209  00027B                     	ds	1
   210  00027C                     _set_ret:
   211                           	opt stack 0
   212  00027C                     	ds	1
   213  00027D                     _storedif:
   214                           	opt stack 0
   215  00027D                     	ds	1
   216  00027E                     _table:
   217                           	opt stack 0
   218  00027E                     	ds	1
   219                           tblptru	equ	0xFF8
   220                           tblptrh	equ	0xFF7
   221                           tblptrl	equ	0xFF6
   222                           tablat	equ	0xFF5
   223                           postinc0	equ	0xFEE
   224                           wreg	equ	0xFE8
   225                           postdec1	equ	0xFE5
   226                           fsr1l	equ	0xFE1
   227                           
   228                           	psect	bssCOMRAM
   229  000001                     __pbssCOMRAM:
   230                           	opt stack 0
   231  000001                     _a_frame:
   232                           	opt stack 0
   233  000001                     	ds	20
   234  000015                     _a_frame_dif:
   235                           	opt stack 0
   236  000015                     	ds	10
   237  00001F                     _changerate:
   238                           	opt stack 0
   239  00001F                     	ds	3
   240  000022                     _outgoing:
   241                           	opt stack 0
   242  000022                     	ds	3
   243  000025                     _id_current_cc:
   244                           	opt stack 0
   245  000025                     	ds	2
   246  000027                     _lw:
   247                           	opt stack 0
   248  000027                     	ds	2
   249  000029                     _time_gear:
   250                           	opt stack 0
   251  000029                     	ds	2
   252  00002B                     _time_height:
   253                           	opt stack 0
   254  00002B                     	ds	2
   255  00002D                     _w:
   256                           	opt stack 0
   257  00002D                     	ds	2
   258  00002F                     _pulsecounter:
   259                           	opt stack 0
   260  00002F                     	ds	1
   261                           tblptru	equ	0xFF8
   262                           tblptrh	equ	0xFF7
   263                           tblptrl	equ	0xFF6
   264                           tablat	equ	0xFF5
   265                           postinc0	equ	0xFEE
   266                           wreg	equ	0xFE8
   267                           postdec1	equ	0xFE5
   268                           fsr1l	equ	0xFE1
   269                           
   270                           	psect	dataCOMRAM
   271  000040                     __pdataCOMRAM:
   272                           	opt stack 0
   273  000040                     _c_path:
   274                           	opt stack 0
   275  000040                     	ds	2
   276  000042                     _cm100:
   277                           	opt stack 0
   278  000042                     	ds	2
   279  000044                     _cm120:
   280                           	opt stack 0
   281  000044                     	ds	2
   282  000046                     _cm180:
   283                           	opt stack 0
   284  000046                     	ds	2
   285  000048                     _cm220:
   286                           	opt stack 0
   287  000048                     	ds	2
   288  00004A                     _cm50:
   289                           	opt stack 0
   290  00004A                     	ds	2
   291  00004C                     _cm80:
   292                           	opt stack 0
   293  00004C                     	ds	2
   294  00004E                     _pin_out:
   295                           	opt stack 0
   296  00004E                     	ds	1
   297                           tblptru	equ	0xFF8
   298                           tblptrh	equ	0xFF7
   299                           tblptrl	equ	0xFF6
   300                           tablat	equ	0xFF5
   301                           postinc0	equ	0xFEE
   302                           wreg	equ	0xFE8
   303                           postdec1	equ	0xFE5
   304                           fsr1l	equ	0xFE1
   305                           
   306                           	psect	bssBANK0
   307  000060                     __pbssBANK0:
   308                           	opt stack 0
   309  000060                     _a_color:
   310                           	opt stack 0
   311  000060                     	ds	70
   312  0000A6                     _a_path:
   313                           	opt stack 0
   314  0000A6                     	ds	42
   315  0000D0                     _a_actors:
   316                           	opt stack 0
   317  0000D0                     	ds	8
   318                           tblptru	equ	0xFF8
   319                           tblptrh	equ	0xFF7
   320                           tblptrl	equ	0xFF6
   321                           tablat	equ	0xFF5
   322                           postinc0	equ	0xFEE
   323                           wreg	equ	0xFE8
   324                           postdec1	equ	0xFE5
   325                           fsr1l	equ	0xFE1
   326                           
   327                           	psect	bssBANK1
   328  000100                     __pbssBANK1:
   329                           	opt stack 0
   330  000100                     _a_path_old:
   331                           	opt stack 0
   332  000100                     	ds	42
   333                           tblptru	equ	0xFF8
   334                           tblptrh	equ	0xFF7
   335                           tblptrl	equ	0xFF6
   336                           tablat	equ	0xFF5
   337                           postinc0	equ	0xFEE
   338                           wreg	equ	0xFE8
   339                           postdec1	equ	0xFE5
   340                           fsr1l	equ	0xFE1
   341                           
   342                           	psect	cstackBANK0
   343  0000D8                     __pcstackBANK0:
   344                           	opt stack 0
   345  0000D8                     ??_ReadHeight:
   346  0000D8                     ?_ExchangeSpiWord:
   347                           	opt stack 0
   348  0000D8                     ActAileron@change:
   349                           	opt stack 0
   350  0000D8                     ActElevator@change:
   351                           	opt stack 0
   352  0000D8                     ActThrottle@change:
   353                           	opt stack 0
   354  0000D8                     ActRudder@change:
   355                           	opt stack 0
   356  0000D8                     ExchangeSpiWord@byte2:
   357                           	opt stack 0
   358                           
   359                           ; 1 bytes @ 0x0
   360  0000D8                     	ds	1
   361  0000D9                     ??_CheckThrottle:
   362  0000D9                     ??_CheckRudderAhead:
   363  0000D9                     ??_CheckRudderBack:
   364  0000D9                     
   365                           ; 0 bytes @ 0x1
   366  0000D9                     	ds	1
   367  0000DA                     ??_CompareFrames:
   368  0000DA                     ExchangeSpiWord@byte1:
   369                           	opt stack 0
   370                           
   371                           ; 1 bytes @ 0x2
   372  0000DA                     	ds	1
   373  0000DB                     ExchangeSpiWord@SPI_word:
   374                           	opt stack 0
   375                           
   376                           ; 2 bytes @ 0x3
   377  0000DB                     	ds	2
   378  0000DD                     ReadObject@des_obj:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x5
   382  0000DD                     	ds	1
   383  0000DE                     CheckThrottle@i_1681:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x6
   387  0000DE                     	ds	1
   388  0000DF                     ReadObject@max_obj:
   389                           	opt stack 0
   390                           
   391                           ; 1 bytes @ 0x7
   392  0000DF                     	ds	1
   393  0000E0                     CheckThrottle@tmp:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0x8
   397  0000E0                     	ds	2
   398  0000E2                     ReadObject@checksum:
   399                           	opt stack 0
   400  0000E2                     CheckThrottle@i:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0xA
   404  0000E2                     	ds	2
   405  0000E4                     ReadObject@c:
   406                           	opt stack 0
   407  0000E4                     CheckThrottle@i_1680:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0xC
   411  0000E4                     	ds	1
   412  0000E5                     ReadObject@c_obj:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0xD
   416  0000E5                     	ds	1
   417  0000E6                     tblptru	equ	0xFF8
   418                           tblptrh	equ	0xFF7
   419                           tblptrl	equ	0xFF6
   420                           tablat	equ	0xFF5
   421                           postinc0	equ	0xFEE
   422                           wreg	equ	0xFE8
   423                           postdec1	equ	0xFE5
   424                           fsr1l	equ	0xFE1
   425                           
   426                           ; 0 bytes @ 0xE
   427                           
   428                           	psect	cstackCOMRAM
   429  000030                     __pcstackCOMRAM:
   430                           	opt stack 0
   431  000030                     Delay@del:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x0
   435  000030                     	ds	2
   436  000032                     ??_Isr:
   437                           
   438                           ; 0 bytes @ 0x2
   439  000032                     	ds	14
   440                           tblptru	equ	0xFF8
   441                           tblptrh	equ	0xFF7
   442                           tblptrl	equ	0xFF6
   443                           tablat	equ	0xFF5
   444                           postinc0	equ	0xFEE
   445                           wreg	equ	0xFE8
   446                           postdec1	equ	0xFE5
   447                           fsr1l	equ	0xFE1
   448                           
   449 ;;
   450 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   451 ;;
   452 ;; *************** function _main *****************
   453 ;; Defined at:
   454 ;;		line 85 in file "main.c"
   455 ;; Parameters:    Size  Location     Type
   456 ;;		None
   457 ;; Auto vars:     Size  Location     Type
   458 ;;		None
   459 ;; Return value:  Size  Location     Type
   460 ;;		None               void
   461 ;; Registers used:
   462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   463 ;; Tracked objects:
   464 ;;		On entry : 0/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   472 ;;Total ram usage:        0 bytes
   473 ;; Hardware stack levels required when called:    6
   474 ;; This function calls:
   475 ;;		_CheckThrottle
   476 ;;		_CompareFrames
   477 ;;		_Init
   478 ;;		_ModeCheck
   479 ;;		_ReadHeight
   480 ;;		_ReadObject
   481 ;;		_StartHeightMeasure
   482 ;;		_StoreAsOld
   483 ;; This function is called by:
   484 ;;		Startup code after reset
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           	psect	text0
   489  000DD0                     __ptext0:
   490                           	opt stack 0
   491  000DD0                     _main:
   492                           	opt stack 25
   493                           
   494                           ;main.c: 86: Init();
   495                           
   496                           ;incstack = 0
   497  000DD0  EC42  F007         	call	_Init	;wreg free
   498  000DD4                     l551:
   499                           
   500                           ;main.c: 88: StartHeightMeasure();
   501  000DD4  ECCB  F007         	call	_StartHeightMeasure	;wreg free
   502                           
   503                           ;main.c: 89: ModeCheck();
   504  000DD8  EC2D  F007         	call	_ModeCheck	;wreg free
   505                           
   506                           ;main.c: 90: ReadObject(1, 10, 5);
   507  000DDC  0E00               	movlw	0
   508  000DDE  0100               	movlb	0	; () banked
   509  000DE0  6FDE               	movwf	(ReadObject@des_obj+1)& (0+255),b
   510  000DE2  0E0A               	movlw	10
   511  000DE4  6FDD               	movwf	ReadObject@des_obj& (0+255),b
   512  000DE6  0E05               	movlw	5
   513  000DE8  0100               	movlb	0	; () banked
   514  000DEA  6FDF               	movwf	ReadObject@max_obj& (0+255),b
   515  000DEC  0E01               	movlw	1
   516  000DEE  EC09  F002         	call	_ReadObject
   517                           
   518                           ;main.c: 91: CompareFrames();
   519  000DF2  EC45  F005         	call	_CompareFrames	;wreg free
   520                           
   521                           ;main.c: 92: ReadHeight();
   522  000DF6  ECE6  F005         	call	_ReadHeight	;wreg free
   523                           
   524                           ;main.c: 93: CheckThrottle();
   525  000DFA  EC5C  F000         	call	_CheckThrottle	;wreg free
   526                           
   527                           ;main.c: 94: StoreAsOld();
   528  000DFE  EC18  F007         	call	_StoreAsOld	;wreg free
   529  000E02  D7E8               	goto	l551
   530  000E04                     __end_of_main:
   531                           	opt stack 0
   532                           tblptru	equ	0xFF8
   533                           tblptrh	equ	0xFF7
   534                           tblptrl	equ	0xFF6
   535                           tablat	equ	0xFF5
   536                           postinc0	equ	0xFEE
   537                           wreg	equ	0xFE8
   538                           postdec1	equ	0xFE5
   539                           fsr1l	equ	0xFE1
   540                           
   541 ;; *************** function _StoreAsOld *****************
   542 ;; Defined at:
   543 ;;		line 447 in file "position.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;		None
   548 ;; Return value:  Size  Location     Type
   549 ;;		None               void
   550 ;; Registers used:
   551 ;;		None
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   561 ;;Total ram usage:        0 bytes
   562 ;; Hardware stack levels used:    1
   563 ;; Hardware stack levels required when called:    3
   564 ;; This function calls:
   565 ;;		Nothing
   566 ;; This function is called by:
   567 ;;		_main
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           	psect	text1
   572  000E30                     __ptext1:
   573                           	opt stack 0
   574  000E30                     _StoreAsOld:
   575                           	opt stack 27
   576                           
   577                           ;position.c: 448: a_frame[1].num = a_frame[0].num;
   578                           
   579                           ;incstack = 0
   580  000E30  C001  F00B         	movff	_a_frame,_a_frame+10
   581  000E34  C002  F00C         	movff	_a_frame+1,_a_frame+11
   582                           
   583                           ;position.c: 449: a_frame[1].pos_x = a_frame[0].pos_x;
   584  000E38  C003  F00D         	movff	_a_frame+2,_a_frame+12
   585  000E3C  C004  F00E         	movff	_a_frame+3,_a_frame+13
   586                           
   587                           ;position.c: 450: a_frame[1].pos_y = a_frame[0].pos_y;
   588  000E40  C005  F00F         	movff	_a_frame+4,_a_frame+14
   589  000E44  C006  F010         	movff	_a_frame+5,_a_frame+15
   590                           
   591                           ;position.c: 451: a_frame[1].height = a_frame[0].height;
   592  000E48  C007  F011         	movff	_a_frame+6,_a_frame+16
   593  000E4C  C008  F012         	movff	_a_frame+7,_a_frame+17
   594                           
   595                           ;position.c: 452: a_frame[1].angle = a_frame[0].angle;
   596  000E50  C009  F013         	movff	_a_frame+8,_a_frame+18
   597  000E54  C00A  F014         	movff	_a_frame+9,_a_frame+19
   598  000E58  0012               	return		;funcret
   599  000E5A                     __end_of_StoreAsOld:
   600                           	opt stack 0
   601                           tblptru	equ	0xFF8
   602                           tblptrh	equ	0xFF7
   603                           tblptrl	equ	0xFF6
   604                           tablat	equ	0xFF5
   605                           postinc0	equ	0xFEE
   606                           wreg	equ	0xFE8
   607                           postdec1	equ	0xFE5
   608                           fsr1l	equ	0xFE1
   609                           
   610 ;; *************** function _StartHeightMeasure *****************
   611 ;; Defined at:
   612 ;;		line 21 in file "ultrasonic.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;		None
   615 ;; Auto vars:     Size  Location     Type
   616 ;;		None
   617 ;; Return value:  Size  Location     Type
   618 ;;		None               void
   619 ;; Registers used:
   620 ;;		wreg, status,2
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;Total ram usage:        0 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; Hardware stack levels required when called:    3
   633 ;; This function calls:
   634 ;;		Nothing
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           	psect	text2
   641  000F96                     __ptext2:
   642                           	opt stack 0
   643  000F96                     _StartHeightMeasure:
   644                           	opt stack 27
   645                           
   646                           ;ultrasonic.c: 22: TMR5L = 0;
   647                           
   648                           ;incstack = 0
   649  000F96  0E00               	movlw	0
   650  000F98  010F               	movlb	15	; () banked
   651  000F9A  6F4F               	movwf	79,b	;volatile
   652                           
   653                           ;ultrasonic.c: 23: TMR5H = 0;
   654  000F9C  0E00               	movlw	0
   655  000F9E  010F               	movlb	15	; () banked
   656  000FA0  6F50               	movwf	80,b	;volatile
   657                           
   658                           ; BSR set to: 15
   659                           ;ultrasonic.c: 24: PORTBbits.RB3 = 0;
   660  000FA2  9681               	bcf	3969,3,c	;volatile
   661                           
   662                           ; BSR set to: 15
   663  000FA4  0012               	return		;funcret
   664  000FA6                     __end_of_StartHeightMeasure:
   665                           	opt stack 0
   666                           tblptru	equ	0xFF8
   667                           tblptrh	equ	0xFF7
   668                           tblptrl	equ	0xFF6
   669                           tablat	equ	0xFF5
   670                           postinc0	equ	0xFEE
   671                           wreg	equ	0xFE8
   672                           postdec1	equ	0xFE5
   673                           fsr1l	equ	0xFE1
   674                           
   675 ;; *************** function _ReadObject *****************
   676 ;; Defined at:
   677 ;;		line 27 in file "pixy.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;  des_obj_type    1    wreg     unsigned char 
   680 ;;  des_obj         2    5[BANK0 ] unsigned int 
   681 ;;  max_obj         1    7[BANK0 ] unsigned char 
   682 ;; Auto vars:     Size  Location     Type
   683 ;;  des_obj_type    1    0[COMRAM] unsigned char 
   684 ;;  checksum        2   10[BANK0 ] unsigned int 
   685 ;;  c_obj           1   13[BANK0 ] unsigned char 
   686 ;;  c               1   12[BANK0 ] unsigned char 
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      unsigned char 
   689 ;; Registers used:
   690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   696 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   698 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   699 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   700 ;;Total ram usage:        9 bytes
   701 ;; Hardware stack levels used:    1
   702 ;; Hardware stack levels required when called:    4
   703 ;; This function calls:
   704 ;;		_ExchangeSpiWord
   705 ;; This function is called by:
   706 ;;		_main
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text3
   711  000412                     __ptext3:
   712                           	opt stack 0
   713  000412                     _ReadObject:
   714                           	opt stack 26
   715                           
   716                           ;pixy.c: 28: frame = 0;
   717                           
   718                           ; BSR set to: 15
   719                           ;incstack = 0
   720  000412  924F               	bcf	_frame/(0+8),_frame& (0+7),c
   721                           
   722                           ;pixy.c: 29: unsigned char c = 0;
   723  000414  0E00               	movlw	0
   724  000416  0100               	movlb	0	; () banked
   725  000418  6FE4               	movwf	ReadObject@c& (0+255),b
   726                           
   727                           ;pixy.c: 30: for(unsigned char c_obj = 0; c_obj < max_obj; c_obj++) {
   728  00041A  0E00               	movlw	0
   729  00041C  0100               	movlb	0	; () banked
   730  00041E  6FE5               	movwf	ReadObject@c_obj& (0+255),b
   731  000420  D187               	goto	l3076
   732  000422                     l618:
   733                           
   734                           ; BSR set to: 0
   735                           ;pixy.c: 34: if(frame == 1) {
   736  000422  A24F               	btfss	_frame/(0+8),_frame& (0+7),c
   737  000424  D086               	goto	l623
   738                           
   739                           ; BSR set to: 0
   740                           ;pixy.c: 35: w = ExchangeSpiWord(0x5a, 0);
   741  000426  0E00               	movlw	0
   742  000428  0100               	movlb	0	; () banked
   743  00042A  6FD8               	movwf	ExchangeSpiWord@byte2& (0+255),b
   744  00042C  0E5A               	movlw	90
   745  00042E  EC15  F006         	call	_ExchangeSpiWord
   746  000432  C0D8  F02D         	movff	?_ExchangeSpiWord,_w
   747  000436  C0D9  F02E         	movff	?_ExchangeSpiWord+1,_w+1
   748                           
   749                           ;pixy.c: 36: if(w == 0xaa55) {
   750  00043A  0E55               	movlw	85
   751  00043C  182D               	xorwf	_w,w,c
   752  00043E  E10F               	bnz	l3020
   753  000440  0EAA               	movlw	170
   754  000442  182E               	xorwf	_w+1,w,c
   755  000444  A4D8               	btfss	status,2,c
   756  000446  D00B               	goto	l3020
   757                           
   758                           ;pixy.c: 37: a_color[c_obj].type = 0xaa55;
   759  000448  0100               	movlb	0	; () banked
   760  00044A  51E5               	movf	ReadObject@c_obj& (0+255),w,b
   761  00044C  0D0E               	mullw	14
   762  00044E  0E60               	movlw	low _a_color
   763  000450  24F3               	addwf	prodl,w,c
   764  000452  6ED9               	movwf	fsr2l,c
   765  000454  0E00               	movlw	high _a_color
   766  000456  20F4               	addwfc	prodh,w,c
   767  000458  6EDA               	movwf	fsr2h,c
   768  00045A  0E55               	movlw	85
   769  00045C  D011               	goto	L1
   770  00045E                     l3020:
   771  00045E  0E56               	movlw	86
   772  000460  182D               	xorwf	_w,w,c
   773  000462  E167               	bnz	l623
   774  000464  0EAA               	movlw	170
   775  000466  182E               	xorwf	_w+1,w,c
   776  000468  A4D8               	btfss	status,2,c
   777  00046A  D063               	goto	l623
   778                           
   779                           ;pixy.c: 39: a_color[c_obj].type = 0xaa56;
   780  00046C  0100               	movlb	0	; () banked
   781  00046E  51E5               	movf	ReadObject@c_obj& (0+255),w,b
   782  000470  0D0E               	mullw	14
   783  000472  0E60               	movlw	low _a_color
   784  000474  24F3               	addwf	prodl,w,c
   785  000476  6ED9               	movwf	fsr2l,c
   786  000478  0E00               	movlw	high _a_color
   787  00047A  20F4               	addwfc	prodh,w,c
   788  00047C  6EDA               	movwf	fsr2h,c
   789  00047E  0E56               	movlw	86
   790  000480                     L1:
   791  000480  6EDE               	movwf	postinc2,c
   792  000482  0EAA               	movlw	170
   793  000484  6EDD               	movwf	postdec2,c
   794                           
   795                           ; BSR set to: 0
   796                           ;pixy.c: 40: }
   797                           ;pixy.c: 41: }
   798                           ;pixy.c: 42: while(frame == 0) {
   799                           
   800                           ; BSR set to: 0
   801                           
   802                           ; BSR set to: 0
   803  000486  D055               	goto	l623
   804  000488                     l3024:
   805                           
   806                           ;pixy.c: 43: w = ExchangeSpiWord(0x5a, 0);
   807  000488  0E00               	movlw	0
   808  00048A  0100               	movlb	0	; () banked
   809  00048C  6FD8               	movwf	ExchangeSpiWord@byte2& (0+255),b
   810  00048E  0E5A               	movlw	90
   811  000490  EC15  F006         	call	_ExchangeSpiWord
   812  000494  C0D8  F02D         	movff	?_ExchangeSpiWord,_w
   813  000498  C0D9  F02E         	movff	?_ExchangeSpiWord+1,_w+1
   814                           
   815                           ;pixy.c: 44: if(lw == 0xaa55 && w == 0xaa55) {
   816  00049C  0E55               	movlw	85
   817  00049E  1827               	xorwf	_lw,w,c
   818  0004A0  E118               	bnz	l3034
   819  0004A2  0EAA               	movlw	170
   820  0004A4  1828               	xorwf	_lw+1,w,c
   821  0004A6  A4D8               	btfss	status,2,c
   822  0004A8  D014               	goto	l3034
   823  0004AA  0E55               	movlw	85
   824  0004AC  182D               	xorwf	_w,w,c
   825  0004AE  E111               	bnz	l3034
   826  0004B0  0EAA               	movlw	170
   827  0004B2  182E               	xorwf	_w+1,w,c
   828  0004B4  A4D8               	btfss	status,2,c
   829  0004B6  D00D               	goto	l3034
   830                           
   831                           ;pixy.c: 45: frame = 1;
   832  0004B8  824F               	bsf	_frame/(0+8),_frame& (0+7),c
   833                           
   834                           ;pixy.c: 46: obj_type = 0;
   835  0004BA  964F               	bcf	_obj_type/(0+8),_obj_type& (0+7),c
   836                           
   837                           ;pixy.c: 47: a_color[c_obj].type = 0xaa55;
   838  0004BC  0100               	movlb	0	; () banked
   839  0004BE  51E5               	movf	ReadObject@c_obj& (0+255),w,b
   840  0004C0  0D0E               	mullw	14
   841  0004C2  0E60               	movlw	low _a_color
   842  0004C4  24F3               	addwf	prodl,w,c
   843  0004C6  6ED9               	movwf	fsr2l,c
   844  0004C8  0E00               	movlw	high _a_color
   845  0004CA  20F4               	addwfc	prodh,w,c
   846  0004CC  6EDA               	movwf	fsr2h,c
   847  0004CE  0E55               	movlw	85
   848  0004D0  D01A               	goto	L2
   849  0004D2                     l3034:
   850  0004D2  0E55               	movlw	85
   851  0004D4  1827               	xorwf	_lw,w,c
   852  0004D6  E11B               	bnz	l3042
   853  0004D8  0EAA               	movlw	170
   854  0004DA  1828               	xorwf	_lw+1,w,c
   855  0004DC  A4D8               	btfss	status,2,c
   856  0004DE  D017               	goto	l3042
   857  0004E0  0E56               	movlw	86
   858  0004E2  182D               	xorwf	_w,w,c
   859  0004E4  E114               	bnz	l3042
   860  0004E6  0EAA               	movlw	170
   861  0004E8  182E               	xorwf	_w+1,w,c
   862  0004EA  A4D8               	btfss	status,2,c
   863  0004EC  D010               	goto	l3042
   864                           
   865                           ;pixy.c: 49: frame = 1;
   866  0004EE  824F               	bsf	_frame/(0+8),_frame& (0+7),c
   867                           
   868                           ;pixy.c: 50: obj_type = 1;
   869  0004F0  864F               	bsf	_obj_type/(0+8),_obj_type& (0+7),c
   870                           
   871                           ;pixy.c: 51: a_color[c_obj].type = 0xaa56;
   872  0004F2  0100               	movlb	0	; () banked
   873  0004F4  51E5               	movf	ReadObject@c_obj& (0+255),w,b
   874  0004F6  0D0E               	mullw	14
   875  0004F8  0E60               	movlw	low _a_color
   876  0004FA  24F3               	addwf	prodl,w,c
   877  0004FC  6ED9               	movwf	fsr2l,c
   878  0004FE  0E00               	movlw	high _a_color
   879  000500  20F4               	addwfc	prodh,w,c
   880  000502  6EDA               	movwf	fsr2h,c
   881  000504  0E56               	movlw	86
   882  000506                     L2:
   883  000506  6EDE               	movwf	postinc2,c
   884  000508  0EAA               	movlw	170
   885  00050A  6EDD               	movwf	postdec2,c
   886                           
   887                           ;pixy.c: 52: } else if(w == 0 && lw == 0){
   888  00050C  D008               	goto	l626
   889  00050E                     l3042:
   890  00050E  502D               	movf	_w,w,c
   891  000510  102E               	iorwf	_w+1,w,c
   892  000512  A4D8               	btfss	status,2,c
   893  000514  D004               	goto	l626
   894  000516  5027               	movf	_lw,w,c
   895  000518  1028               	iorwf	_lw+1,w,c
   896  00051A  B4D8               	btfsc	status,2,c
   897                           
   898                           ;pixy.c: 53: frame = 0;
   899  00051C  924F               	bcf	_frame/(0+8),_frame& (0+7),c
   900  00051E                     l626:
   901                           
   902                           ;pixy.c: 54: }
   903                           ;pixy.c: 55: lw = w;
   904  00051E  C02D  F027         	movff	_w,_lw
   905  000522  C02E  F028         	movff	_w+1,_lw+1
   906                           
   907                           ;pixy.c: 56: c++;
   908  000526  0100               	movlb	0	; () banked
   909  000528  2BE4               	incf	ReadObject@c& (0+255),f,b
   910                           
   911                           ; BSR set to: 0
   912                           ;pixy.c: 57: if(c > 254) {
   913  00052A  0100               	movlb	0	; () banked
   914  00052C  29E4               	incf	ReadObject@c& (0+255),w,b
   915  00052E  B4D8               	btfsc	status,2,c
   916  000530  0012               	return	
   917  000532                     l623:
   918  000532  A24F               	btfss	_frame/(0+8),_frame& (0+7),c
   919  000534  D7A9               	goto	l3024
   920                           
   921                           ;pixy.c: 59: }
   922                           ;pixy.c: 60: }
   923                           ;pixy.c: 62: unsigned int checksum = ExchangeSpiWord(0x5a, 0);
   924  000536  0E00               	movlw	0
   925  000538  0100               	movlb	0	; () banked
   926  00053A  6FD8               	movwf	ExchangeSpiWord@byte2& (0+255),b
   927  00053C  0E5A               	movlw	90
   928  00053E  EC15  F006         	call	_ExchangeSpiWord
   929  000542  C0D8  F0E2         	movff	?_ExchangeSpiWord,ReadObject@checksum
   930  000546  C0D9  F0E3         	movff	?_ExchangeSpiWord+1,ReadObject@checksum+1
   931                           
   932                           ;pixy.c: 64: a_color[c_obj].num = ExchangeSpiWord(0x5a, 0);
   933  00054A  0E00               	movlw	0
   934  00054C  0100               	movlb	0	; () banked
   935  00054E  6FD8               	movwf	ExchangeSpiWord@byte2& (0+255),b
   936  000550  0E5A               	movlw	90
   937  000552  EC15  F006         	call	_ExchangeSpiWord
   938  000556  0100               	movlb	0	; () banked
   939  000558  51E5               	movf	ReadObject@c_obj& (0+255),w,b
   940  00055A  0D0E               	mullw	14
   941  00055C  0E02               	movlw	2
   942  00055E  26F3               	addwf	prodl,f,c
   943  000560  0E00               	movlw	0
   944  000562  22F4               	addwfc	prodh,f,c
   945  000564  0E60               	movlw	low _a_color
   946  000566  24F3               	addwf	prodl,w,c
   947  000568  6ED9               	movwf	fsr2l,c
   948  00056A  0E00               	movlw	high _a_color
   949  00056C  20F4               	addwfc	prodh,w,c
   950  00056E  6EDA               	movwf	fsr2h,c
   951  000570  0100               	movlb	0	; () banked
   952  000572  C0D8  FFDE         	movff	?_ExchangeSpiWord,postinc2
   953  000576  0100               	movlb	0	; () banked
   954  000578  C0D9  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
   955                           
   956                           ; BSR set to: 0
   957                           ;pixy.c: 65: a_color[c_obj].pos_x = ExchangeSpiWord(0x5a, 0);
   958  00057C  0E00               	movlw	0
   959  00057E  0100               	movlb	0	; () banked
   960  000580  6FD8               	movwf	ExchangeSpiWord@byte2& (0+255),b
   961  000582  0E5A               	movlw	90
   962  000584  EC15  F006         	call	_ExchangeSpiWord
   963  000588  0100               	movlb	0	; () banked
   964  00058A  51E5               	movf	ReadObject@c_obj& (0+255),w,b
   965  00058C  0D0E               	mullw	14
   966  00058E  0E04               	movlw	4
   967  000590  26F3               	addwf	prodl,f,c
   968  000592  0E00               	movlw	0
   969  000594  22F4               	addwfc	prodh,f,c
   970  000596  0E60               	movlw	low _a_color
   971  000598  24F3               	addwf	prodl,w,c
   972  00059A  6ED9               	movwf	fsr2l,c
   973  00059C  0E00               	movlw	high _a_color
   974  00059E  20F4               	addwfc	prodh,w,c
   975  0005A0  6EDA               	movwf	fsr2h,c
   976  0005A2  0100               	movlb	0	; () banked
   977  0005A4  C0D8  FFDE         	movff	?_ExchangeSpiWord,postinc2
   978  0005A8  0100               	movlb	0	; () banked
   979  0005AA  C0D9  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
   980                           
   981                           ; BSR set to: 0
   982                           ;pixy.c: 66: a_color[c_obj].pos_y = ExchangeSpiWord(0x5a, 0);
   983  0005AE  0E00               	movlw	0
   984  0005B0  0100               	movlb	0	; () banked
   985  0005B2  6FD8               	movwf	ExchangeSpiWord@byte2& (0+255),b
   986  0005B4  0E5A               	movlw	90
   987  0005B6  EC15  F006         	call	_ExchangeSpiWord
   988  0005BA  0100               	movlb	0	; () banked
   989  0005BC  51E5               	movf	ReadObject@c_obj& (0+255),w,b
   990  0005BE  0D0E               	mullw	14
   991  0005C0  0E06               	movlw	6
   992  0005C2  26F3               	addwf	prodl,f,c
   993  0005C4  0E00               	movlw	0
   994  0005C6  22F4               	addwfc	prodh,f,c
   995  0005C8  0E60               	movlw	low _a_color
   996  0005CA  24F3               	addwf	prodl,w,c
   997  0005CC  6ED9               	movwf	fsr2l,c
   998  0005CE  0E00               	movlw	high _a_color
   999  0005D0  20F4               	addwfc	prodh,w,c
  1000  0005D2  6EDA               	movwf	fsr2h,c
  1001  0005D4  0100               	movlb	0	; () banked
  1002  0005D6  C0D8  FFDE         	movff	?_ExchangeSpiWord,postinc2
  1003  0005DA  0100               	movlb	0	; () banked
  1004  0005DC  C0D9  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
  1005                           
  1006                           ; BSR set to: 0
  1007                           ;pixy.c: 67: a_color[c_obj].obj_width = ExchangeSpiWord(0x5a, 0);
  1008  0005E0  0E00               	movlw	0
  1009  0005E2  0100               	movlb	0	; () banked
  1010  0005E4  6FD8               	movwf	ExchangeSpiWord@byte2& (0+255),b
  1011  0005E6  0E5A               	movlw	90
  1012  0005E8  EC15  F006         	call	_ExchangeSpiWord
  1013  0005EC  0100               	movlb	0	; () banked
  1014  0005EE  51E5               	movf	ReadObject@c_obj& (0+255),w,b
  1015  0005F0  0D0E               	mullw	14
  1016  0005F2  0E08               	movlw	8
  1017  0005F4  26F3               	addwf	prodl,f,c
  1018  0005F6  0E00               	movlw	0
  1019  0005F8  22F4               	addwfc	prodh,f,c
  1020  0005FA  0E60               	movlw	low _a_color
  1021  0005FC  24F3               	addwf	prodl,w,c
  1022  0005FE  6ED9               	movwf	fsr2l,c
  1023  000600  0E00               	movlw	high _a_color
  1024  000602  20F4               	addwfc	prodh,w,c
  1025  000604  6EDA               	movwf	fsr2h,c
  1026  000606  0100               	movlb	0	; () banked
  1027  000608  C0D8  FFDE         	movff	?_ExchangeSpiWord,postinc2
  1028  00060C  0100               	movlb	0	; () banked
  1029  00060E  C0D9  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
  1030                           
  1031                           ; BSR set to: 0
  1032                           ;pixy.c: 68: a_color[c_obj].obj_height = ExchangeSpiWord(0x5a, 0);
  1033  000612  0E00               	movlw	0
  1034  000614  0100               	movlb	0	; () banked
  1035  000616  6FD8               	movwf	ExchangeSpiWord@byte2& (0+255),b
  1036  000618  0E5A               	movlw	90
  1037  00061A  EC15  F006         	call	_ExchangeSpiWord
  1038  00061E  0100               	movlb	0	; () banked
  1039  000620  51E5               	movf	ReadObject@c_obj& (0+255),w,b
  1040  000622  0D0E               	mullw	14
  1041  000624  0E0A               	movlw	10
  1042  000626  26F3               	addwf	prodl,f,c
  1043  000628  0E00               	movlw	0
  1044  00062A  22F4               	addwfc	prodh,f,c
  1045  00062C  0E60               	movlw	low _a_color
  1046  00062E  24F3               	addwf	prodl,w,c
  1047  000630  6ED9               	movwf	fsr2l,c
  1048  000632  0E00               	movlw	high _a_color
  1049  000634  20F4               	addwfc	prodh,w,c
  1050  000636  6EDA               	movwf	fsr2h,c
  1051  000638  0100               	movlb	0	; () banked
  1052  00063A  C0D8  FFDE         	movff	?_ExchangeSpiWord,postinc2
  1053  00063E  0100               	movlb	0	; () banked
  1054  000640  C0D9  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
  1055                           
  1056                           ; BSR set to: 0
  1057                           ;pixy.c: 69: a_color[c_obj].angle = ExchangeSpiWord(0x5a, 0);
  1058  000644  0E00               	movlw	0
  1059  000646  0100               	movlb	0	; () banked
  1060  000648  6FD8               	movwf	ExchangeSpiWord@byte2& (0+255),b
  1061  00064A  0E5A               	movlw	90
  1062  00064C  EC15  F006         	call	_ExchangeSpiWord
  1063  000650  0100               	movlb	0	; () banked
  1064  000652  51E5               	movf	ReadObject@c_obj& (0+255),w,b
  1065  000654  0D0E               	mullw	14
  1066  000656  0E0C               	movlw	12
  1067  000658  26F3               	addwf	prodl,f,c
  1068  00065A  0E00               	movlw	0
  1069  00065C  22F4               	addwfc	prodh,f,c
  1070  00065E  0E60               	movlw	low _a_color
  1071  000660  24F3               	addwf	prodl,w,c
  1072  000662  6ED9               	movwf	fsr2l,c
  1073  000664  0E00               	movlw	high _a_color
  1074  000666  20F4               	addwfc	prodh,w,c
  1075  000668  6EDA               	movwf	fsr2h,c
  1076  00066A  0100               	movlb	0	; () banked
  1077  00066C  C0D8  FFDE         	movff	?_ExchangeSpiWord,postinc2
  1078  000670  0100               	movlb	0	; () banked
  1079  000672  C0D9  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;pixy.c: 71: if(a_color[c_obj].num == des_obj) {
  1083  000676  0100               	movlb	0	; () banked
  1084  000678  51E5               	movf	ReadObject@c_obj& (0+255),w,b
  1085  00067A  0D0E               	mullw	14
  1086  00067C  0E02               	movlw	2
  1087  00067E  26F3               	addwf	prodl,f,c
  1088  000680  0E00               	movlw	0
  1089  000682  22F4               	addwfc	prodh,f,c
  1090  000684  0E60               	movlw	low _a_color
  1091  000686  24F3               	addwf	prodl,w,c
  1092  000688  6ED9               	movwf	fsr2l,c
  1093  00068A  0E00               	movlw	high _a_color
  1094  00068C  20F4               	addwfc	prodh,w,c
  1095  00068E  6EDA               	movwf	fsr2h,c
  1096  000690  0100               	movlb	0	; () banked
  1097  000692  51DD               	movf	ReadObject@des_obj& (0+255),w,b
  1098  000694  18DE               	xorwf	postinc2,w,c
  1099  000696  E14A               	bnz	l3074
  1100  000698  0100               	movlb	0	; () banked
  1101  00069A  51DE               	movf	(ReadObject@des_obj+1)& (0+255),w,b
  1102  00069C  18DE               	xorwf	postinc2,w,c
  1103  00069E  A4D8               	btfss	status,2,c
  1104  0006A0  D045               	goto	l3074
  1105                           
  1106                           ; BSR set to: 0
  1107                           ;pixy.c: 72: a_frame[0].num = a_color[c_obj].num;
  1108  0006A2  0100               	movlb	0	; () banked
  1109  0006A4  51E5               	movf	ReadObject@c_obj& (0+255),w,b
  1110  0006A6  0D0E               	mullw	14
  1111  0006A8  0E02               	movlw	2
  1112  0006AA  26F3               	addwf	prodl,f,c
  1113  0006AC  0E00               	movlw	0
  1114  0006AE  22F4               	addwfc	prodh,f,c
  1115  0006B0  0E60               	movlw	low _a_color
  1116  0006B2  24F3               	addwf	prodl,w,c
  1117  0006B4  6ED9               	movwf	fsr2l,c
  1118  0006B6  0E00               	movlw	high _a_color
  1119  0006B8  20F4               	addwfc	prodh,w,c
  1120  0006BA  6EDA               	movwf	fsr2h,c
  1121  0006BC  CFDE F001          	movff	postinc2,_a_frame
  1122  0006C0  CFDD F002          	movff	postdec2,_a_frame+1
  1123                           
  1124                           ;pixy.c: 73: a_frame[0].pos_x = a_color[c_obj].pos_x;
  1125  0006C4  0100               	movlb	0	; () banked
  1126  0006C6  51E5               	movf	ReadObject@c_obj& (0+255),w,b
  1127  0006C8  0D0E               	mullw	14
  1128  0006CA  0E04               	movlw	4
  1129  0006CC  26F3               	addwf	prodl,f,c
  1130  0006CE  0E00               	movlw	0
  1131  0006D0  22F4               	addwfc	prodh,f,c
  1132  0006D2  0E60               	movlw	low _a_color
  1133  0006D4  24F3               	addwf	prodl,w,c
  1134  0006D6  6ED9               	movwf	fsr2l,c
  1135  0006D8  0E00               	movlw	high _a_color
  1136  0006DA  20F4               	addwfc	prodh,w,c
  1137  0006DC  6EDA               	movwf	fsr2h,c
  1138  0006DE  CFDE F003          	movff	postinc2,_a_frame+2
  1139  0006E2  CFDD F004          	movff	postdec2,_a_frame+3
  1140                           
  1141                           ;pixy.c: 74: a_frame[0].pos_y = a_color[c_obj].pos_y;
  1142  0006E6  0100               	movlb	0	; () banked
  1143  0006E8  51E5               	movf	ReadObject@c_obj& (0+255),w,b
  1144  0006EA  0D0E               	mullw	14
  1145  0006EC  0E06               	movlw	6
  1146  0006EE  26F3               	addwf	prodl,f,c
  1147  0006F0  0E00               	movlw	0
  1148  0006F2  22F4               	addwfc	prodh,f,c
  1149  0006F4  0E60               	movlw	low _a_color
  1150  0006F6  24F3               	addwf	prodl,w,c
  1151  0006F8  6ED9               	movwf	fsr2l,c
  1152  0006FA  0E00               	movlw	high _a_color
  1153  0006FC  20F4               	addwfc	prodh,w,c
  1154  0006FE  6EDA               	movwf	fsr2h,c
  1155  000700  CFDE F005          	movff	postinc2,_a_frame+4
  1156  000704  CFDD F006          	movff	postdec2,_a_frame+5
  1157                           
  1158                           ;pixy.c: 75: a_frame[0].angle = a_color[c_obj].angle;
  1159  000708  0100               	movlb	0	; () banked
  1160  00070A  51E5               	movf	ReadObject@c_obj& (0+255),w,b
  1161  00070C  0D0E               	mullw	14
  1162  00070E  0E0C               	movlw	12
  1163  000710  26F3               	addwf	prodl,f,c
  1164  000712  0E00               	movlw	0
  1165  000714  22F4               	addwfc	prodh,f,c
  1166  000716  0E60               	movlw	low _a_color
  1167  000718  24F3               	addwf	prodl,w,c
  1168  00071A  6ED9               	movwf	fsr2l,c
  1169  00071C  0E00               	movlw	high _a_color
  1170  00071E  20F4               	addwfc	prodh,w,c
  1171  000720  6EDA               	movwf	fsr2h,c
  1172  000722  CFDE F009          	movff	postinc2,_a_frame+8
  1173  000726  CFDD F00A          	movff	postdec2,_a_frame+9
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;pixy.c: 76: return 1;
  1177                           ;	Return value of _ReadObject is never used
  1178  00072A  0012               	return	
  1179  00072C                     l3074:
  1180                           
  1181                           ; BSR set to: 0
  1182  00072C  0100               	movlb	0	; () banked
  1183  00072E  2BE5               	incf	ReadObject@c_obj& (0+255),f,b
  1184  000730                     l3076:
  1185                           
  1186                           ; BSR set to: 0
  1187  000730  0100               	movlb	0	; () banked
  1188  000732  51DF               	movf	ReadObject@max_obj& (0+255),w,b
  1189  000734  0100               	movlb	0	; () banked
  1190  000736  5DE5               	subwf	ReadObject@c_obj& (0+255),w,b
  1191  000738  B0D8               	btfsc	status,0,c
  1192  00073A  0012               	return	
  1193  00073C  D672               	goto	l618
  1194  00073E                     __end_of_ReadObject:
  1195                           	opt stack 0
  1196                           tblptru	equ	0xFF8
  1197                           tblptrh	equ	0xFF7
  1198                           tblptrl	equ	0xFF6
  1199                           tablat	equ	0xFF5
  1200                           prodh	equ	0xFF4
  1201                           prodl	equ	0xFF3
  1202                           postinc0	equ	0xFEE
  1203                           wreg	equ	0xFE8
  1204                           postdec1	equ	0xFE5
  1205                           fsr1l	equ	0xFE1
  1206                           postinc2	equ	0xFDE
  1207                           postdec2	equ	0xFDD
  1208                           fsr2h	equ	0xFDA
  1209                           fsr2l	equ	0xFD9
  1210                           status	equ	0xFD8
  1211                           
  1212 ;; *************** function _ExchangeSpiWord *****************
  1213 ;; Defined at:
  1214 ;;		line 27 in file "communication.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  byte1           1    wreg     unsigned char 
  1217 ;;  byte2           1    0[BANK0 ] unsigned char 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  byte1           1    2[BANK0 ] unsigned char 
  1220 ;;  SPI_word        2    3[BANK0 ] unsigned int 
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  2    0[BANK0 ] unsigned int 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, status,0, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1230 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;Total ram usage:        5 bytes
  1235 ;; Hardware stack levels used:    1
  1236 ;; Hardware stack levels required when called:    3
  1237 ;; This function calls:
  1238 ;;		Nothing
  1239 ;; This function is called by:
  1240 ;;		_ReadObject
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text4
  1245  000C2A                     __ptext4:
  1246                           	opt stack 0
  1247  000C2A                     _ExchangeSpiWord:
  1248                           	opt stack 26
  1249                           
  1250                           ; BSR set to: 0
  1251                           ;incstack = 0
  1252                           ;ExchangeSpiWord@byte1 stored from wreg
  1253  000C2A  0100               	movlb	0	; () banked
  1254  000C2C  6FDA               	movwf	ExchangeSpiWord@byte1& (0+255),b
  1255                           
  1256                           ;communication.c: 28: __nop();
  1257  000C2E  F000               	nop	
  1258                           
  1259                           ;communication.c: 29: unsigned int SPI_word = 0;
  1260  000C30  0E00               	movlw	0
  1261  000C32  0100               	movlb	0	; () banked
  1262  000C34  6FDC               	movwf	(ExchangeSpiWord@SPI_word+1)& (0+255),b
  1263  000C36  0E00               	movlw	0
  1264  000C38  6FDB               	movwf	ExchangeSpiWord@SPI_word& (0+255),b
  1265                           
  1266                           ; BSR set to: 0
  1267                           ;communication.c: 30: if(SSP1IF == 1) {
  1268  000C3A  A69E               	btfss	3998,3,c	;volatile
  1269  000C3C  D008               	goto	l2794
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;communication.c: 31: _delay((unsigned long)((100)*(64000000/4000000.0)));
  1273  000C3E  0EE4               	movlw	228
  1274  000C40                     u2597:
  1275  000C40  D000               	nop2	
  1276  000C42  D000               	nop2	
  1277  000C44  2EE8               	decfsz	wreg,f,c
  1278  000C46  D7FC               	goto	u2597
  1279  000C48  D000               	nop2		;nop
  1280  000C4A  D000               	nop2		;nop
  1281                           
  1282                           ;communication.c: 32: SSP1IF = 0;
  1283  000C4C  969E               	bcf	3998,3,c	;volatile
  1284  000C4E                     l2794:
  1285                           
  1286                           ;communication.c: 33: }
  1287                           ;communication.c: 34: SSP1BUF = byte1;
  1288  000C4E  C0DA  FFC9         	movff	ExchangeSpiWord@byte1,4041	;volatile
  1289  000C52                     l849:
  1290  000C52  A69E               	btfss	3998,3,c	;volatile
  1291  000C54  D7FE               	goto	l849
  1292                           
  1293                           ;communication.c: 36: SSP1IF = 0;
  1294  000C56  969E               	bcf	3998,3,c	;volatile
  1295                           
  1296                           ;communication.c: 37: SPI_word = SSP1BUF;
  1297  000C58  CFC9 F0DB          	movff	4041,ExchangeSpiWord@SPI_word	;volatile
  1298  000C5C  0100               	movlb	0	; () banked
  1299  000C5E  6BDC               	clrf	(ExchangeSpiWord@SPI_word+1)& (0+255),b
  1300                           
  1301                           ; BSR set to: 0
  1302                           ;communication.c: 38: SPI_word <<= 8;
  1303  000C60  0100               	movlb	0	; () banked
  1304  000C62  51DB               	movf	ExchangeSpiWord@SPI_word& (0+255),w,b
  1305  000C64  6FDC               	movwf	(ExchangeSpiWord@SPI_word+1)& (0+255),b
  1306  000C66  6BDB               	clrf	ExchangeSpiWord@SPI_word& (0+255),b
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;communication.c: 39: SSP1BUF = byte2;
  1310  000C68  C0D8  FFC9         	movff	ExchangeSpiWord@byte2,4041	;volatile
  1311  000C6C                     l852:
  1312  000C6C  A69E               	btfss	3998,3,c	;volatile
  1313  000C6E  D7FE               	goto	l852
  1314                           
  1315                           ;communication.c: 41: SSP1IF = 0;
  1316  000C70  969E               	bcf	3998,3,c	;volatile
  1317                           
  1318                           ;communication.c: 42: SPI_word |= SSP1BUF;
  1319  000C72  50C9               	movf	4041,w,c	;volatile
  1320  000C74  0100               	movlb	0	; () banked
  1321  000C76  13DB               	iorwf	ExchangeSpiWord@SPI_word& (0+255),f,b
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;communication.c: 43: __nop();
  1325  000C78  F000               	nop	
  1326                           
  1327                           ;communication.c: 44: return (SPI_word);
  1328  000C7A  C0DB  F0D8         	movff	ExchangeSpiWord@SPI_word,?_ExchangeSpiWord
  1329  000C7E  C0DC  F0D9         	movff	ExchangeSpiWord@SPI_word+1,?_ExchangeSpiWord+1
  1330  000C82  0012               	return	
  1331  000C84                     __end_of_ExchangeSpiWord:
  1332                           	opt stack 0
  1333                           tblptru	equ	0xFF8
  1334                           tblptrh	equ	0xFF7
  1335                           tblptrl	equ	0xFF6
  1336                           tablat	equ	0xFF5
  1337                           prodh	equ	0xFF4
  1338                           prodl	equ	0xFF3
  1339                           postinc0	equ	0xFEE
  1340                           wreg	equ	0xFE8
  1341                           postdec1	equ	0xFE5
  1342                           fsr1l	equ	0xFE1
  1343                           postinc2	equ	0xFDE
  1344                           postdec2	equ	0xFDD
  1345                           fsr2h	equ	0xFDA
  1346                           fsr2l	equ	0xFD9
  1347                           status	equ	0xFD8
  1348                           
  1349 ;; *************** function _ReadHeight *****************
  1350 ;; Defined at:
  1351 ;;		line 27 in file "ultrasonic.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;		None
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;		None
  1356 ;; Return value:  Size  Location     Type
  1357 ;;		None               void
  1358 ;; Registers used:
  1359 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1368 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1369 ;;Total ram usage:        2 bytes
  1370 ;; Hardware stack levels used:    1
  1371 ;; Hardware stack levels required when called:    3
  1372 ;; This function calls:
  1373 ;;		Nothing
  1374 ;; This function is called by:
  1375 ;;		_main
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text5
  1380  000BCC                     __ptext5:
  1381                           	opt stack 0
  1382  000BCC                     _ReadHeight:
  1383                           	opt stack 27
  1384  000BCC                     l764:
  1385  000BCC  A4A4               	btfss	4004,2,c	;volatile
  1386  000BCE  D7FE               	goto	l764
  1387                           
  1388                           ;ultrasonic.c: 29: TMR5GIF = 0;
  1389  000BD0  94A4               	bcf	4004,2,c	;volatile
  1390                           
  1391                           ;ultrasonic.c: 30: time_height = 0;
  1392  000BD2  0E00               	movlw	0
  1393  000BD4  6E2C               	movwf	_time_height+1,c
  1394  000BD6  0E00               	movlw	0
  1395  000BD8  6E2B               	movwf	_time_height,c
  1396                           
  1397                           ;ultrasonic.c: 31: time_height = TMR5H;
  1398  000BDA  CF50 F02B          	movff	3920,_time_height	;volatile
  1399  000BDE  6A2C               	clrf	_time_height+1,c
  1400                           
  1401                           ;ultrasonic.c: 32: time_height <<= 8;
  1402  000BE0  502B               	movf	_time_height,w,c
  1403  000BE2  6E2C               	movwf	_time_height+1,c
  1404  000BE4  6A2B               	clrf	_time_height,c
  1405                           
  1406                           ;ultrasonic.c: 33: time_height |= TMR5L;
  1407  000BE6  010F               	movlb	15	; () banked
  1408  000BE8  514F               	movf	79,w,b	;volatile
  1409  000BEA  122B               	iorwf	_time_height,f,c
  1410                           
  1411                           ; BSR set to: 15
  1412                           ;ultrasonic.c: 34: TMR5L = 0;
  1413  000BEC  0E00               	movlw	0
  1414  000BEE  010F               	movlb	15	; () banked
  1415  000BF0  6F4F               	movwf	79,b	;volatile
  1416                           
  1417                           ; BSR set to: 15
  1418                           ;ultrasonic.c: 35: TMR5H = 0;
  1419  000BF2  0E00               	movlw	0
  1420  000BF4  010F               	movlb	15	; () banked
  1421  000BF6  6F50               	movwf	80,b	;volatile
  1422                           
  1423                           ; BSR set to: 15
  1424                           ;ultrasonic.c: 36: a_frame[0].height = time_height;
  1425  000BF8  C02B  F007         	movff	_time_height,_a_frame+6
  1426  000BFC  C02C  F008         	movff	_time_height+1,_a_frame+7
  1427                           
  1428                           ; BSR set to: 15
  1429                           ;ultrasonic.c: 37: a_frame_dif[0].dif_height = a_frame[1].height - a_frame[0].height;
  1430  000C00  EE20  F007         	lfsr	2,_a_frame+6
  1431  000C04  CFDE F0D8          	movff	postinc2,??_ReadHeight
  1432  000C08  CFDD F0D9          	movff	postdec2,??_ReadHeight+1
  1433  000C0C  0100               	movlb	0	; () banked
  1434  000C0E  1FD8               	comf	??_ReadHeight& (0+255),f,b
  1435  000C10  1FD9               	comf	(??_ReadHeight+1)& (0+255),f,b
  1436  000C12  4BD8               	infsnz	??_ReadHeight& (0+255),f,b
  1437  000C14  2BD9               	incf	(??_ReadHeight+1)& (0+255),f,b
  1438  000C16  5011               	movf	_a_frame+16,w,c
  1439  000C18  0100               	movlb	0	; () banked
  1440  000C1A  25D8               	addwf	??_ReadHeight& (0+255),w,b
  1441  000C1C  6E1B               	movwf	_a_frame_dif+6,c
  1442  000C1E  5012               	movf	_a_frame+17,w,c
  1443  000C20  0100               	movlb	0	; () banked
  1444  000C22  21D9               	addwfc	(??_ReadHeight+1)& (0+255),w,b
  1445  000C24  6E1C               	movwf	_a_frame_dif+7,c
  1446                           
  1447                           ; BSR set to: 0
  1448                           ;ultrasonic.c: 38: PORTBbits.RB3 = 1;
  1449  000C26  8681               	bsf	3969,3,c	;volatile
  1450                           
  1451                           ; BSR set to: 0
  1452  000C28  0012               	return		;funcret
  1453  000C2A                     __end_of_ReadHeight:
  1454                           	opt stack 0
  1455                           tblptru	equ	0xFF8
  1456                           tblptrh	equ	0xFF7
  1457                           tblptrl	equ	0xFF6
  1458                           tablat	equ	0xFF5
  1459                           prodh	equ	0xFF4
  1460                           prodl	equ	0xFF3
  1461                           postinc0	equ	0xFEE
  1462                           wreg	equ	0xFE8
  1463                           postdec1	equ	0xFE5
  1464                           fsr1l	equ	0xFE1
  1465                           postinc2	equ	0xFDE
  1466                           postdec2	equ	0xFDD
  1467                           fsr2h	equ	0xFDA
  1468                           fsr2l	equ	0xFD9
  1469                           status	equ	0xFD8
  1470                           
  1471 ;; *************** function _ModeCheck *****************
  1472 ;; Defined at:
  1473 ;;		line 30 in file "gear.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;		None
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;		None
  1478 ;; Return value:  Size  Location     Type
  1479 ;;		None               void
  1480 ;; Registers used:
  1481 ;;		wreg, status,2, status,0
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;Total ram usage:        0 bytes
  1492 ;; Hardware stack levels used:    1
  1493 ;; Hardware stack levels required when called:    3
  1494 ;; This function calls:
  1495 ;;		Nothing
  1496 ;; This function is called by:
  1497 ;;		_main
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           	psect	text6
  1502  000E5A                     __ptext6:
  1503                           	opt stack 0
  1504  000E5A                     _ModeCheck:
  1505                           	opt stack 27
  1506                           
  1507                           ;gear.c: 31: if(time_gear < 6800){
  1508                           
  1509                           ; BSR set to: 0
  1510                           ;incstack = 0
  1511  000E5A  0E90               	movlw	144
  1512  000E5C  5C29               	subwf	_time_gear,w,c
  1513  000E5E  0E1A               	movlw	26
  1514  000E60  582A               	subwfb	_time_gear+1,w,c
  1515  000E62  B0D8               	btfsc	status,0,c
  1516  000E64  D004               	goto	l2990
  1517                           
  1518                           ;gear.c: 33: PORTBbits.RB2 = 0;
  1519  000E66  9481               	bcf	3969,2,c	;volatile
  1520                           
  1521                           ;gear.c: 34: PORTAbits.RA5 = 1;
  1522  000E68  8A80               	bsf	3968,5,c	;volatile
  1523                           
  1524                           ;gear.c: 35: set_ret = 0;
  1525  000E6A  984F               	bcf	_set_ret/(0+8),_set_ret& (0+7),c
  1526                           
  1527                           ;gear.c: 36: }else if(time_gear >= 6800) {
  1528  000E6C  D009               	goto	l228
  1529  000E6E                     l2990:
  1530  000E6E  0E90               	movlw	144
  1531  000E70  5C29               	subwf	_time_gear,w,c
  1532  000E72  0E1A               	movlw	26
  1533  000E74  582A               	subwfb	_time_gear+1,w,c
  1534  000E76  A0D8               	btfss	status,0,c
  1535  000E78  D003               	goto	l228
  1536                           
  1537                           ;gear.c: 37: PORTBbits.RB2 = 1;
  1538  000E7A  8481               	bsf	3969,2,c	;volatile
  1539                           
  1540                           ;gear.c: 38: PORTAbits.RA5 = 0;
  1541  000E7C  9A80               	bcf	3968,5,c	;volatile
  1542                           
  1543                           ;gear.c: 39: set_ret = 1;
  1544  000E7E  884F               	bsf	_set_ret/(0+8),_set_ret& (0+7),c
  1545  000E80                     l228:
  1546                           
  1547                           ;gear.c: 40: }
  1548                           ;gear.c: 41: __nop();
  1549  000E80  F000               	nop	
  1550                           
  1551                           ;gear.c: 42: return set_ret;
  1552                           ;	Return value of _ModeCheck is never used
  1553  000E82  0012               	return		;funcret
  1554  000E84                     __end_of_ModeCheck:
  1555                           	opt stack 0
  1556                           tblptru	equ	0xFF8
  1557                           tblptrh	equ	0xFF7
  1558                           tblptrl	equ	0xFF6
  1559                           tablat	equ	0xFF5
  1560                           prodh	equ	0xFF4
  1561                           prodl	equ	0xFF3
  1562                           postinc0	equ	0xFEE
  1563                           wreg	equ	0xFE8
  1564                           postdec1	equ	0xFE5
  1565                           fsr1l	equ	0xFE1
  1566                           postinc2	equ	0xFDE
  1567                           postdec2	equ	0xFDD
  1568                           fsr2h	equ	0xFDA
  1569                           fsr2l	equ	0xFD9
  1570                           status	equ	0xFD8
  1571                           
  1572 ;; *************** function _Init *****************
  1573 ;; Defined at:
  1574 ;;		line 30 in file "init.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;		None               void
  1581 ;; Registers used:
  1582 ;;		wreg, status,2, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;Total ram usage:        0 bytes
  1593 ;; Hardware stack levels used:    1
  1594 ;; Hardware stack levels required when called:    4
  1595 ;; This function calls:
  1596 ;;		_InitActors
  1597 ;;		_InitAnsel
  1598 ;;		_InitComp
  1599 ;;		_InitInterrupt
  1600 ;;		_InitOsc
  1601 ;;		_InitPort
  1602 ;;		_InitSpi
  1603 ;;		_InitTimer
  1604 ;;		_InitTris
  1605 ;;		_InitUart
  1606 ;; This function is called by:
  1607 ;;		_main
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           	psect	text7
  1612  000E84                     __ptext7:
  1613                           	opt stack 0
  1614  000E84                     _Init:
  1615                           	opt stack 26
  1616                           
  1617                           ;init.c: 31: InitPort();
  1618                           
  1619                           ;incstack = 0
  1620  000E84  EC9C  F007         	call	_InitPort	;wreg free
  1621                           
  1622                           ;init.c: 32: InitTris();
  1623  000E88  EC91  F007         	call	_InitTris	;wreg free
  1624                           
  1625                           ;init.c: 33: InitAnsel();
  1626  000E8C  EC81  F007         	call	_InitAnsel	;wreg free
  1627                           
  1628                           ;init.c: 34: InitOsc();
  1629  000E90  ECEA  F007         	call	_InitOsc	;wreg free
  1630                           
  1631                           ;init.c: 35: InitUart();
  1632  000E94  ECED  F007         	call	_InitUart	;wreg free
  1633                           
  1634                           ;init.c: 36: InitSpi();
  1635  000E98  ECDB  F007         	call	_InitSpi	;wreg free
  1636                           
  1637                           ;init.c: 37: InitTimer();
  1638  000E9C  EC42  F006         	call	_InitTimer	;wreg free
  1639                           
  1640                           ;init.c: 38: InitComp();
  1641  000EA0  ECE5  F007         	call	_InitComp	;wreg free
  1642                           
  1643                           ;init.c: 39: InitInterrupt();
  1644  000EA4  ECE0  F007         	call	_InitInterrupt	;wreg free
  1645                           
  1646                           ;init.c: 40: InitActors();
  1647  000EA8  EC57  F007         	call	_InitActors	;wreg free
  1648  000EAC  0012               	return		;funcret
  1649  000EAE                     __end_of_Init:
  1650                           	opt stack 0
  1651                           tblptru	equ	0xFF8
  1652                           tblptrh	equ	0xFF7
  1653                           tblptrl	equ	0xFF6
  1654                           tablat	equ	0xFF5
  1655                           prodh	equ	0xFF4
  1656                           prodl	equ	0xFF3
  1657                           postinc0	equ	0xFEE
  1658                           wreg	equ	0xFE8
  1659                           postdec1	equ	0xFE5
  1660                           fsr1l	equ	0xFE1
  1661                           postinc2	equ	0xFDE
  1662                           postdec2	equ	0xFDD
  1663                           fsr2h	equ	0xFDA
  1664                           fsr2l	equ	0xFD9
  1665                           status	equ	0xFD8
  1666                           
  1667 ;; *************** function _InitUart *****************
  1668 ;; Defined at:
  1669 ;;		line 82 in file "init.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;		None
  1674 ;; Return value:  Size  Location     Type
  1675 ;;		None               void
  1676 ;; Registers used:
  1677 ;;		None
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;Total ram usage:        0 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    3
  1690 ;; This function calls:
  1691 ;;		Nothing
  1692 ;; This function is called by:
  1693 ;;		_Init
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text8
  1698  000FDA                     __ptext8:
  1699                           	opt stack 0
  1700  000FDA                     _InitUart:
  1701                           	opt stack 26
  1702                           
  1703                           ;incstack = 0
  1704  000FDA  0012               	return		;funcret
  1705  000FDC                     __end_of_InitUart:
  1706                           	opt stack 0
  1707                           tblptru	equ	0xFF8
  1708                           tblptrh	equ	0xFF7
  1709                           tblptrl	equ	0xFF6
  1710                           tablat	equ	0xFF5
  1711                           prodh	equ	0xFF4
  1712                           prodl	equ	0xFF3
  1713                           postinc0	equ	0xFEE
  1714                           wreg	equ	0xFE8
  1715                           postdec1	equ	0xFE5
  1716                           fsr1l	equ	0xFE1
  1717                           postinc2	equ	0xFDE
  1718                           postdec2	equ	0xFDD
  1719                           fsr2h	equ	0xFDA
  1720                           fsr2l	equ	0xFD9
  1721                           status	equ	0xFD8
  1722                           
  1723 ;; *************** function _InitTris *****************
  1724 ;; Defined at:
  1725 ;;		line 55 in file "init.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;		None
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;		None
  1730 ;; Return value:  Size  Location     Type
  1731 ;;		None               void
  1732 ;; Registers used:
  1733 ;;		wreg, status,2
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1743 ;;Total ram usage:        0 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    3
  1746 ;; This function calls:
  1747 ;;		Nothing
  1748 ;; This function is called by:
  1749 ;;		_Init
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text9
  1754  000F22                     __ptext9:
  1755                           	opt stack 0
  1756  000F22                     _InitTris:
  1757                           	opt stack 26
  1758                           
  1759                           ;init.c: 56: TRISA = 0b00000000;
  1760                           
  1761                           ;incstack = 0
  1762  000F22  0E00               	movlw	0
  1763  000F24  6E92               	movwf	3986,c	;volatile
  1764                           
  1765                           ;init.c: 57: TRISB = 0b00010000;
  1766  000F26  0E10               	movlw	16
  1767  000F28  6E93               	movwf	3987,c	;volatile
  1768                           
  1769                           ;init.c: 58: TRISC = 0b10010001;
  1770  000F2A  0E91               	movlw	145
  1771  000F2C  6E94               	movwf	3988,c	;volatile
  1772                           
  1773                           ;init.c: 59: TRISD = 0b01010000;
  1774  000F2E  0E50               	movlw	80
  1775  000F30  6E95               	movwf	3989,c	;volatile
  1776                           
  1777                           ;init.c: 60: TRISE = 0b00000000;
  1778  000F32  0E00               	movlw	0
  1779  000F34  6E96               	movwf	3990,c	;volatile
  1780  000F36  0012               	return		;funcret
  1781  000F38                     __end_of_InitTris:
  1782                           	opt stack 0
  1783                           tblptru	equ	0xFF8
  1784                           tblptrh	equ	0xFF7
  1785                           tblptrl	equ	0xFF6
  1786                           tablat	equ	0xFF5
  1787                           prodh	equ	0xFF4
  1788                           prodl	equ	0xFF3
  1789                           postinc0	equ	0xFEE
  1790                           wreg	equ	0xFE8
  1791                           postdec1	equ	0xFE5
  1792                           fsr1l	equ	0xFE1
  1793                           postinc2	equ	0xFDE
  1794                           postdec2	equ	0xFDD
  1795                           fsr2h	equ	0xFDA
  1796                           fsr2l	equ	0xFD9
  1797                           status	equ	0xFD8
  1798                           
  1799 ;; *************** function _InitTimer *****************
  1800 ;; Defined at:
  1801 ;;		line 121 in file "init.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;		None
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;		None               void
  1808 ;; Registers used:
  1809 ;;		wreg, status,2
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;Total ram usage:        0 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    3
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_Init
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text10
  1830  000C84                     __ptext10:
  1831                           	opt stack 0
  1832  000C84                     _InitTimer:
  1833                           	opt stack 26
  1834                           
  1835                           ;init.c: 123: T1CONbits.TMR1CS = 0b00;
  1836                           
  1837                           ;incstack = 0
  1838  000C84  0E3F               	movlw	-193
  1839  000C86  16CD               	andwf	4045,f,c	;volatile
  1840                           
  1841                           ;init.c: 124: T1CONbits.T1CKPS = 0b11;
  1842  000C88  0E30               	movlw	48
  1843  000C8A  12CD               	iorwf	4045,f,c	;volatile
  1844                           
  1845                           ;init.c: 125: T1CONbits.nT1SYNC = 1;
  1846  000C8C  84CD               	bsf	4045,2,c	;volatile
  1847                           
  1848                           ;init.c: 126: T1CONbits.TMR1ON = 0;
  1849  000C8E  90CD               	bcf	4045,0,c	;volatile
  1850                           
  1851                           ;init.c: 130: T3GCONbits.TMR3GE = 1;
  1852  000C90  8EB4               	bsf	4020,7,c	;volatile
  1853                           
  1854                           ;init.c: 131: T3GCONbits.T3GSPM = 0;
  1855  000C92  98B4               	bcf	4020,4,c	;volatile
  1856                           
  1857                           ;init.c: 132: T3GCONbits.T3GTM = 0;
  1858  000C94  9AB4               	bcf	4020,5,c	;volatile
  1859                           
  1860                           ;init.c: 133: T3GCONbits.T3GPOL = 1;
  1861  000C96  8CB4               	bsf	4020,6,c	;volatile
  1862                           
  1863                           ;init.c: 134: T3GCONbits.T3GSS = 0b00;
  1864  000C98  0EFC               	movlw	-4
  1865  000C9A  16B4               	andwf	4020,f,c	;volatile
  1866                           
  1867                           ;init.c: 136: T3CONbits.TMR3CS = 0b00;
  1868  000C9C  0E3F               	movlw	-193
  1869  000C9E  16B1               	andwf	4017,f,c	;volatile
  1870                           
  1871                           ;init.c: 137: T3CONbits.T3CKPS = 0b10;
  1872  000CA0  50B1               	movf	4017,w,c	;volatile
  1873  000CA2  0BCF               	andlw	-49
  1874  000CA4  0920               	iorlw	32
  1875  000CA6  6EB1               	movwf	4017,c	;volatile
  1876                           
  1877                           ;init.c: 138: T3CONbits.nT3SYNC = 1;
  1878  000CA8  84B1               	bsf	4017,2,c	;volatile
  1879                           
  1880                           ;init.c: 139: T3CONbits.TMR3ON = 1;
  1881  000CAA  80B1               	bsf	4017,0,c	;volatile
  1882                           
  1883                           ;init.c: 143: T5GCONbits.TMR5GE = 1;
  1884  000CAC  010F               	movlb	15	; () banked
  1885  000CAE  8F4D               	bsf	77,7,b	;volatile
  1886                           
  1887                           ; BSR set to: 15
  1888                           ;init.c: 144: T5GCONbits.T5GSPM = 0;
  1889  000CB0  010F               	movlb	15	; () banked
  1890  000CB2  994D               	bcf	77,4,b	;volatile
  1891                           
  1892                           ; BSR set to: 15
  1893                           ;init.c: 145: T5GCONbits.T5GTM = 0;
  1894  000CB4  010F               	movlb	15	; () banked
  1895  000CB6  9B4D               	bcf	77,5,b	;volatile
  1896                           
  1897                           ; BSR set to: 15
  1898                           ;init.c: 146: T5GCONbits.T5GPOL = 1;
  1899  000CB8  010F               	movlb	15	; () banked
  1900  000CBA  8D4D               	bsf	77,6,b	;volatile
  1901                           
  1902                           ;init.c: 147: T5GCONbits.T5GSS = 0b00;
  1903  000CBC  0EFC               	movlw	-4
  1904  000CBE  010F               	movlb	15	; () banked
  1905  000CC0  174D               	andwf	77,f,b	;volatile
  1906                           
  1907                           ;init.c: 149: T5CONbits.TMR5CS = 0b00;
  1908  000CC2  0E3F               	movlw	-193
  1909  000CC4  010F               	movlb	15	; () banked
  1910  000CC6  174E               	andwf	78,f,b	;volatile
  1911                           
  1912                           ;init.c: 150: T5CONbits.T5CKPS = 0b10;
  1913  000CC8  010F               	movlb	15	; () banked
  1914  000CCA  514E               	movf	78,w,b	;volatile
  1915  000CCC  0BCF               	andlw	-49
  1916  000CCE  0920               	iorlw	32
  1917  000CD0  6F4E               	movwf	78,b	;volatile
  1918                           
  1919                           ; BSR set to: 15
  1920                           ;init.c: 151: T5CONbits.nT5SYNC = 1;
  1921  000CD2  010F               	movlb	15	; () banked
  1922  000CD4  854E               	bsf	78,2,b	;volatile
  1923                           
  1924                           ; BSR set to: 15
  1925                           ;init.c: 152: T5CONbits.TMR5ON = 1;
  1926  000CD6  010F               	movlb	15	; () banked
  1927  000CD8  814E               	bsf	78,0,b	;volatile
  1928                           
  1929                           ; BSR set to: 15
  1930  000CDA  0012               	return		;funcret
  1931  000CDC                     __end_of_InitTimer:
  1932                           	opt stack 0
  1933                           tblptru	equ	0xFF8
  1934                           tblptrh	equ	0xFF7
  1935                           tblptrl	equ	0xFF6
  1936                           tablat	equ	0xFF5
  1937                           prodh	equ	0xFF4
  1938                           prodl	equ	0xFF3
  1939                           postinc0	equ	0xFEE
  1940                           wreg	equ	0xFE8
  1941                           postdec1	equ	0xFE5
  1942                           fsr1l	equ	0xFE1
  1943                           postinc2	equ	0xFDE
  1944                           postdec2	equ	0xFDD
  1945                           fsr2h	equ	0xFDA
  1946                           fsr2l	equ	0xFD9
  1947                           status	equ	0xFD8
  1948                           
  1949 ;; *************** function _InitSpi *****************
  1950 ;; Defined at:
  1951 ;;		line 95 in file "init.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;		None
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;		None
  1956 ;; Return value:  Size  Location     Type
  1957 ;;		None               void
  1958 ;; Registers used:
  1959 ;;		wreg, status,2
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1969 ;;Total ram usage:        0 bytes
  1970 ;; Hardware stack levels used:    1
  1971 ;; Hardware stack levels required when called:    3
  1972 ;; This function calls:
  1973 ;;		Nothing
  1974 ;; This function is called by:
  1975 ;;		_Init
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979                           	psect	text11
  1980  000FB6                     __ptext11:
  1981                           	opt stack 0
  1982  000FB6                     _InitSpi:
  1983                           	opt stack 26
  1984                           
  1985                           ;init.c: 96: SSP1STAT = 0b00000000;
  1986                           
  1987                           ; BSR set to: 15
  1988                           ;incstack = 0
  1989  000FB6  0E00               	movlw	0
  1990  000FB8  6EC7               	movwf	4039,c	;volatile
  1991                           
  1992                           ;init.c: 97: SSP1CON1 = 0b00100001;
  1993  000FBA  0E21               	movlw	33
  1994  000FBC  6EC6               	movwf	4038,c	;volatile
  1995  000FBE  0012               	return		;funcret
  1996  000FC0                     __end_of_InitSpi:
  1997                           	opt stack 0
  1998                           tblptru	equ	0xFF8
  1999                           tblptrh	equ	0xFF7
  2000                           tblptrl	equ	0xFF6
  2001                           tablat	equ	0xFF5
  2002                           prodh	equ	0xFF4
  2003                           prodl	equ	0xFF3
  2004                           postinc0	equ	0xFEE
  2005                           wreg	equ	0xFE8
  2006                           postdec1	equ	0xFE5
  2007                           fsr1l	equ	0xFE1
  2008                           postinc2	equ	0xFDE
  2009                           postdec2	equ	0xFDD
  2010                           fsr2h	equ	0xFDA
  2011                           fsr2l	equ	0xFD9
  2012                           status	equ	0xFD8
  2013                           
  2014 ;; *************** function _InitPort *****************
  2015 ;; Defined at:
  2016 ;;		line 45 in file "init.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;		None
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;		None
  2021 ;; Return value:  Size  Location     Type
  2022 ;;		None               void
  2023 ;; Registers used:
  2024 ;;		wreg, status,2
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;Total ram usage:        0 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; Hardware stack levels required when called:    3
  2037 ;; This function calls:
  2038 ;;		Nothing
  2039 ;; This function is called by:
  2040 ;;		_Init
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           	psect	text12
  2045  000F38                     __ptext12:
  2046                           	opt stack 0
  2047  000F38                     _InitPort:
  2048                           	opt stack 26
  2049                           
  2050                           ;init.c: 46: PORTA = 0b00000000;
  2051                           
  2052                           ;incstack = 0
  2053  000F38  0E00               	movlw	0
  2054  000F3A  6E80               	movwf	3968,c	;volatile
  2055                           
  2056                           ;init.c: 47: PORTB = 0b00001000;
  2057  000F3C  0E08               	movlw	8
  2058  000F3E  6E81               	movwf	3969,c	;volatile
  2059                           
  2060                           ;init.c: 48: PORTC = 0b00000000;
  2061  000F40  0E00               	movlw	0
  2062  000F42  6E82               	movwf	3970,c	;volatile
  2063                           
  2064                           ;init.c: 49: PORTD = 0b00001000;
  2065  000F44  0E08               	movlw	8
  2066  000F46  6E83               	movwf	3971,c	;volatile
  2067                           
  2068                           ;init.c: 50: PORTE = 0b00000000;
  2069  000F48  0E00               	movlw	0
  2070  000F4A  6E84               	movwf	3972,c	;volatile
  2071  000F4C  0012               	return		;funcret
  2072  000F4E                     __end_of_InitPort:
  2073                           	opt stack 0
  2074                           tblptru	equ	0xFF8
  2075                           tblptrh	equ	0xFF7
  2076                           tblptrl	equ	0xFF6
  2077                           tablat	equ	0xFF5
  2078                           prodh	equ	0xFF4
  2079                           prodl	equ	0xFF3
  2080                           postinc0	equ	0xFEE
  2081                           wreg	equ	0xFE8
  2082                           postdec1	equ	0xFE5
  2083                           fsr1l	equ	0xFE1
  2084                           postinc2	equ	0xFDE
  2085                           postdec2	equ	0xFDD
  2086                           fsr2h	equ	0xFDA
  2087                           fsr2l	equ	0xFD9
  2088                           status	equ	0xFD8
  2089                           
  2090 ;; *************** function _InitOsc *****************
  2091 ;; Defined at:
  2092 ;;		line 75 in file "init.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;		None
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;		None
  2097 ;; Return value:  Size  Location     Type
  2098 ;;		None               void
  2099 ;; Registers used:
  2100 ;;		wreg, status,2
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2110 ;;Total ram usage:        0 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; Hardware stack levels required when called:    3
  2113 ;; This function calls:
  2114 ;;		Nothing
  2115 ;; This function is called by:
  2116 ;;		_Init
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	text13
  2121  000FD4                     __ptext13:
  2122                           	opt stack 0
  2123  000FD4                     _InitOsc:
  2124                           	opt stack 26
  2125                           
  2126                           ;init.c: 76: OSCCON = 0b01110111;
  2127                           
  2128                           ;incstack = 0
  2129  000FD4  0E77               	movlw	119
  2130  000FD6  6ED3               	movwf	4051,c	;volatile
  2131  000FD8  0012               	return		;funcret
  2132  000FDA                     __end_of_InitOsc:
  2133                           	opt stack 0
  2134                           tblptru	equ	0xFF8
  2135                           tblptrh	equ	0xFF7
  2136                           tblptrl	equ	0xFF6
  2137                           tablat	equ	0xFF5
  2138                           prodh	equ	0xFF4
  2139                           prodl	equ	0xFF3
  2140                           postinc0	equ	0xFEE
  2141                           wreg	equ	0xFE8
  2142                           postdec1	equ	0xFE5
  2143                           fsr1l	equ	0xFE1
  2144                           postinc2	equ	0xFDE
  2145                           postdec2	equ	0xFDD
  2146                           fsr2h	equ	0xFDA
  2147                           fsr2l	equ	0xFD9
  2148                           status	equ	0xFD8
  2149                           
  2150 ;; *************** function _InitInterrupt *****************
  2151 ;; Defined at:
  2152 ;;		line 172 in file "init.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;		None
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;		None
  2157 ;; Return value:  Size  Location     Type
  2158 ;;		None               void
  2159 ;; Registers used:
  2160 ;;		None
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2170 ;;Total ram usage:        0 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    3
  2173 ;; This function calls:
  2174 ;;		Nothing
  2175 ;; This function is called by:
  2176 ;;		_Init
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           	psect	text14
  2181  000FC0                     __ptext14:
  2182                           	opt stack 0
  2183  000FC0                     _InitInterrupt:
  2184                           	opt stack 26
  2185                           
  2186                           ;init.c: 174: TMR3GIE = 1;
  2187                           
  2188                           ;incstack = 0
  2189  000FC0  82A3               	bsf	4003,1,c	;volatile
  2190                           
  2191                           ;init.c: 176: CCP1IE = 1;
  2192  000FC2  849D               	bsf	3997,2,c	;volatile
  2193                           
  2194                           ;init.c: 178: PEIE = 1;
  2195  000FC4  8CF2               	bsf	intcon,6,c	;volatile
  2196                           
  2197                           ;init.c: 179: GIE = 1;
  2198  000FC6  8EF2               	bsf	intcon,7,c	;volatile
  2199  000FC8  0012               	return		;funcret
  2200  000FCA                     __end_of_InitInterrupt:
  2201                           	opt stack 0
  2202                           tblptru	equ	0xFF8
  2203                           tblptrh	equ	0xFF7
  2204                           tblptrl	equ	0xFF6
  2205                           tablat	equ	0xFF5
  2206                           prodh	equ	0xFF4
  2207                           prodl	equ	0xFF3
  2208                           intcon	equ	0xFF2
  2209                           postinc0	equ	0xFEE
  2210                           wreg	equ	0xFE8
  2211                           postdec1	equ	0xFE5
  2212                           fsr1l	equ	0xFE1
  2213                           postinc2	equ	0xFDE
  2214                           postdec2	equ	0xFDD
  2215                           fsr2h	equ	0xFDA
  2216                           fsr2l	equ	0xFD9
  2217                           status	equ	0xFD8
  2218                           
  2219 ;; *************** function _InitComp *****************
  2220 ;; Defined at:
  2221 ;;		line 162 in file "init.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;		None
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;		None
  2226 ;; Return value:  Size  Location     Type
  2227 ;;		None               void
  2228 ;; Registers used:
  2229 ;;		wreg, status,2
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2239 ;;Total ram usage:        0 bytes
  2240 ;; Hardware stack levels used:    1
  2241 ;; Hardware stack levels required when called:    3
  2242 ;; This function calls:
  2243 ;;		Nothing
  2244 ;; This function is called by:
  2245 ;;		_Init
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           	psect	text15
  2250  000FCA                     __ptext15:
  2251                           	opt stack 0
  2252  000FCA                     _InitComp:
  2253                           	opt stack 26
  2254                           
  2255                           ;init.c: 163: CCP1CONbits.CCP1M = 0b1010;
  2256                           
  2257                           ;incstack = 0
  2258  000FCA  50BD               	movf	4029,w,c	;volatile
  2259  000FCC  0BF0               	andlw	-16
  2260  000FCE  090A               	iorlw	10
  2261  000FD0  6EBD               	movwf	4029,c	;volatile
  2262  000FD2  0012               	return		;funcret
  2263  000FD4                     __end_of_InitComp:
  2264                           	opt stack 0
  2265                           tblptru	equ	0xFF8
  2266                           tblptrh	equ	0xFF7
  2267                           tblptrl	equ	0xFF6
  2268                           tablat	equ	0xFF5
  2269                           prodh	equ	0xFF4
  2270                           prodl	equ	0xFF3
  2271                           intcon	equ	0xFF2
  2272                           postinc0	equ	0xFEE
  2273                           wreg	equ	0xFE8
  2274                           postdec1	equ	0xFE5
  2275                           fsr1l	equ	0xFE1
  2276                           postinc2	equ	0xFDE
  2277                           postdec2	equ	0xFDD
  2278                           fsr2h	equ	0xFDA
  2279                           fsr2l	equ	0xFD9
  2280                           status	equ	0xFD8
  2281                           
  2282 ;; *************** function _InitAnsel *****************
  2283 ;; Defined at:
  2284 ;;		line 65 in file "init.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;		None
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;		None
  2289 ;; Return value:  Size  Location     Type
  2290 ;;		None               void
  2291 ;; Registers used:
  2292 ;;		wreg, status,2
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;Total ram usage:        0 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    3
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		_Init
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           	psect	text16
  2313  000F02                     __ptext16:
  2314                           	opt stack 0
  2315  000F02                     _InitAnsel:
  2316                           	opt stack 26
  2317                           
  2318                           ;init.c: 66: ANSELA = 0b00000000;
  2319                           
  2320                           ;incstack = 0
  2321  000F02  0E00               	movlw	0
  2322  000F04  010F               	movlb	15	; () banked
  2323  000F06  6F38               	movwf	56,b	;volatile
  2324                           
  2325                           ;init.c: 67: ANSELB = 0b00000000;
  2326  000F08  0E00               	movlw	0
  2327  000F0A  010F               	movlb	15	; () banked
  2328  000F0C  6F39               	movwf	57,b	;volatile
  2329                           
  2330                           ;init.c: 68: ANSELC = 0b00000000;
  2331  000F0E  0E00               	movlw	0
  2332  000F10  010F               	movlb	15	; () banked
  2333  000F12  6F3A               	movwf	58,b	;volatile
  2334                           
  2335                           ;init.c: 69: ANSELD = 0b00000000;
  2336  000F14  0E00               	movlw	0
  2337  000F16  010F               	movlb	15	; () banked
  2338  000F18  6F3B               	movwf	59,b	;volatile
  2339                           
  2340                           ;init.c: 70: ANSELE = 0b00000000;
  2341  000F1A  0E00               	movlw	0
  2342  000F1C  010F               	movlb	15	; () banked
  2343  000F1E  6F3C               	movwf	60,b	;volatile
  2344                           
  2345                           ; BSR set to: 15
  2346  000F20  0012               	return		;funcret
  2347  000F22                     __end_of_InitAnsel:
  2348                           	opt stack 0
  2349                           tblptru	equ	0xFF8
  2350                           tblptrh	equ	0xFF7
  2351                           tblptrl	equ	0xFF6
  2352                           tablat	equ	0xFF5
  2353                           prodh	equ	0xFF4
  2354                           prodl	equ	0xFF3
  2355                           intcon	equ	0xFF2
  2356                           postinc0	equ	0xFEE
  2357                           wreg	equ	0xFE8
  2358                           postdec1	equ	0xFE5
  2359                           fsr1l	equ	0xFE1
  2360                           postinc2	equ	0xFDE
  2361                           postdec2	equ	0xFDD
  2362                           fsr2h	equ	0xFDA
  2363                           fsr2l	equ	0xFD9
  2364                           status	equ	0xFD8
  2365                           
  2366 ;; *************** function _InitActors *****************
  2367 ;; Defined at:
  2368 ;;		line 186 in file "init.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;		None
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;		None               void
  2375 ;; Registers used:
  2376 ;;		wreg, status,2
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2386 ;;Total ram usage:        0 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    3
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_Init
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           	psect	text17
  2397  000EAE                     __ptext17:
  2398                           	opt stack 0
  2399  000EAE                     _InitActors:
  2400                           	opt stack 26
  2401                           
  2402                           ;init.c: 187: a_actors[0].aile = 500;
  2403                           
  2404                           ; BSR set to: 15
  2405                           ;incstack = 0
  2406  000EAE  0E01               	movlw	1
  2407  000EB0  0100               	movlb	0	; () banked
  2408  000EB2  6FD1               	movwf	(_a_actors+1)& (0+255),b
  2409  000EB4  0EF4               	movlw	244
  2410  000EB6  6FD0               	movwf	_a_actors& (0+255),b
  2411                           
  2412                           ;init.c: 188: a_actors[0].elev = 500;
  2413  000EB8  0E01               	movlw	1
  2414  000EBA  0100               	movlb	0	; () banked
  2415  000EBC  6FD3               	movwf	(_a_actors+3)& (0+255),b
  2416  000EBE  0EF4               	movlw	244
  2417  000EC0  6FD2               	movwf	(_a_actors+2)& (0+255),b
  2418                           
  2419                           ;init.c: 189: a_actors[0].thro = 0;
  2420  000EC2  0E00               	movlw	0
  2421  000EC4  0100               	movlb	0	; () banked
  2422  000EC6  6FD5               	movwf	(_a_actors+5)& (0+255),b
  2423  000EC8  0E00               	movlw	0
  2424  000ECA  6FD4               	movwf	(_a_actors+4)& (0+255),b
  2425                           
  2426                           ;init.c: 190: a_actors[0].rudd = 500;
  2427  000ECC  0E01               	movlw	1
  2428  000ECE  0100               	movlb	0	; () banked
  2429  000ED0  6FD7               	movwf	(_a_actors+7)& (0+255),b
  2430  000ED2  0EF4               	movlw	244
  2431  000ED4  6FD6               	movwf	(_a_actors+6)& (0+255),b
  2432                           
  2433                           ; BSR set to: 0
  2434  000ED6  0012               	return		;funcret
  2435  000ED8                     __end_of_InitActors:
  2436                           	opt stack 0
  2437                           tblptru	equ	0xFF8
  2438                           tblptrh	equ	0xFF7
  2439                           tblptrl	equ	0xFF6
  2440                           tablat	equ	0xFF5
  2441                           prodh	equ	0xFF4
  2442                           prodl	equ	0xFF3
  2443                           intcon	equ	0xFF2
  2444                           postinc0	equ	0xFEE
  2445                           wreg	equ	0xFE8
  2446                           postdec1	equ	0xFE5
  2447                           fsr1l	equ	0xFE1
  2448                           postinc2	equ	0xFDE
  2449                           postdec2	equ	0xFDD
  2450                           fsr2h	equ	0xFDA
  2451                           fsr2l	equ	0xFD9
  2452                           status	equ	0xFD8
  2453                           
  2454 ;; *************** function _CompareFrames *****************
  2455 ;; Defined at:
  2456 ;;		line 32 in file "position.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;		None
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;		None
  2461 ;; Return value:  Size  Location     Type
  2462 ;;		None               void
  2463 ;; Registers used:
  2464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;Total ram usage:        2 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    5
  2477 ;; This function calls:
  2478 ;;		_CheckAileron
  2479 ;;		_CheckElevator
  2480 ;;		_CheckRudderAhead
  2481 ;;		_CheckRudderBack
  2482 ;; This function is called by:
  2483 ;;		_main
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           	psect	text18
  2488  000A8A                     __ptext18:
  2489                           	opt stack 0
  2490  000A8A                     _CompareFrames:
  2491                           	opt stack 25
  2492                           
  2493                           ;position.c: 34: a_frame_dif[0].dif_height = a_frame[1].height - a_frame[0].height;
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;incstack = 0
  2497  000A8A  EE20  F007         	lfsr	2,_a_frame+6
  2498  000A8E  CFDE F0DA          	movff	postinc2,??_CompareFrames
  2499  000A92  CFDD F0DB          	movff	postdec2,??_CompareFrames+1
  2500  000A96  0100               	movlb	0	; () banked
  2501  000A98  1FDA               	comf	??_CompareFrames& (0+255),f,b
  2502  000A9A  1FDB               	comf	(??_CompareFrames+1)& (0+255),f,b
  2503  000A9C  4BDA               	infsnz	??_CompareFrames& (0+255),f,b
  2504  000A9E  2BDB               	incf	(??_CompareFrames+1)& (0+255),f,b
  2505  000AA0  5011               	movf	_a_frame+16,w,c
  2506  000AA2  0100               	movlb	0	; () banked
  2507  000AA4  25DA               	addwf	??_CompareFrames& (0+255),w,b
  2508  000AA6  6E1B               	movwf	_a_frame_dif+6,c
  2509  000AA8  5012               	movf	_a_frame+17,w,c
  2510  000AAA  0100               	movlb	0	; () banked
  2511  000AAC  21DB               	addwfc	(??_CompareFrames+1)& (0+255),w,b
  2512  000AAE  6E1C               	movwf	_a_frame_dif+7,c
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;position.c: 36: if (a_frame[1].num == a_frame[0].num) {
  2516  000AB0  5001               	movf	_a_frame,w,c
  2517  000AB2  180B               	xorwf	_a_frame+10,w,c
  2518  000AB4  E149               	bnz	l938
  2519  000AB6  5002               	movf	_a_frame+1,w,c
  2520  000AB8  180C               	xorwf	_a_frame+11,w,c
  2521  000ABA  A4D8               	btfss	status,2,c
  2522  000ABC  0012               	return	
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;position.c: 37: a_frame_dif[0].dif_pos_x = a_frame[1].pos_x - a_frame[0].pos_x;
  2526  000ABE  EE20  F003         	lfsr	2,_a_frame+2
  2527  000AC2  CFDE F0DA          	movff	postinc2,??_CompareFrames
  2528  000AC6  CFDD F0DB          	movff	postdec2,??_CompareFrames+1
  2529  000ACA  0100               	movlb	0	; () banked
  2530  000ACC  1FDA               	comf	??_CompareFrames& (0+255),f,b
  2531  000ACE  1FDB               	comf	(??_CompareFrames+1)& (0+255),f,b
  2532  000AD0  4BDA               	infsnz	??_CompareFrames& (0+255),f,b
  2533  000AD2  2BDB               	incf	(??_CompareFrames+1)& (0+255),f,b
  2534  000AD4  500D               	movf	_a_frame+12,w,c
  2535  000AD6  0100               	movlb	0	; () banked
  2536  000AD8  25DA               	addwf	??_CompareFrames& (0+255),w,b
  2537  000ADA  6E17               	movwf	_a_frame_dif+2,c
  2538  000ADC  500E               	movf	_a_frame+13,w,c
  2539  000ADE  0100               	movlb	0	; () banked
  2540  000AE0  21DB               	addwfc	(??_CompareFrames+1)& (0+255),w,b
  2541  000AE2  6E18               	movwf	_a_frame_dif+3,c
  2542                           
  2543                           ;position.c: 38: a_frame_dif[0].dif_pos_y = a_frame[1].pos_y - a_frame[0].pos_y;
  2544  000AE4  EE20  F005         	lfsr	2,_a_frame+4
  2545  000AE8  CFDE F0DA          	movff	postinc2,??_CompareFrames
  2546  000AEC  CFDD F0DB          	movff	postdec2,??_CompareFrames+1
  2547  000AF0  0100               	movlb	0	; () banked
  2548  000AF2  1FDA               	comf	??_CompareFrames& (0+255),f,b
  2549  000AF4  1FDB               	comf	(??_CompareFrames+1)& (0+255),f,b
  2550  000AF6  4BDA               	infsnz	??_CompareFrames& (0+255),f,b
  2551  000AF8  2BDB               	incf	(??_CompareFrames+1)& (0+255),f,b
  2552  000AFA  500F               	movf	_a_frame+14,w,c
  2553  000AFC  0100               	movlb	0	; () banked
  2554  000AFE  25DA               	addwf	??_CompareFrames& (0+255),w,b
  2555  000B00  6E19               	movwf	_a_frame_dif+4,c
  2556  000B02  5010               	movf	_a_frame+15,w,c
  2557  000B04  0100               	movlb	0	; () banked
  2558  000B06  21DB               	addwfc	(??_CompareFrames+1)& (0+255),w,b
  2559  000B08  6E1A               	movwf	_a_frame_dif+5,c
  2560                           
  2561                           ;position.c: 39: a_frame_dif[0].dif_angle = a_frame[1].angle - a_frame[0].angle;
  2562  000B0A  EE20  F009         	lfsr	2,_a_frame+8
  2563  000B0E  CFDE F0DA          	movff	postinc2,??_CompareFrames
  2564  000B12  CFDD F0DB          	movff	postdec2,??_CompareFrames+1
  2565  000B16  0100               	movlb	0	; () banked
  2566  000B18  1FDA               	comf	??_CompareFrames& (0+255),f,b
  2567  000B1A  1FDB               	comf	(??_CompareFrames+1)& (0+255),f,b
  2568  000B1C  4BDA               	infsnz	??_CompareFrames& (0+255),f,b
  2569  000B1E  2BDB               	incf	(??_CompareFrames+1)& (0+255),f,b
  2570  000B20  5013               	movf	_a_frame+18,w,c
  2571  000B22  0100               	movlb	0	; () banked
  2572  000B24  25DA               	addwf	??_CompareFrames& (0+255),w,b
  2573  000B26  6E1D               	movwf	_a_frame_dif+8,c
  2574  000B28  5014               	movf	_a_frame+19,w,c
  2575  000B2A  0100               	movlb	0	; () banked
  2576  000B2C  21DB               	addwfc	(??_CompareFrames+1)& (0+255),w,b
  2577  000B2E  6E1E               	movwf	_a_frame_dif+9,c
  2578                           
  2579                           ; BSR set to: 0
  2580                           ;position.c: 40: CheckAileron();
  2581  000B30  ECE4  F004         	call	_CheckAileron	;wreg free
  2582                           
  2583                           ;position.c: 41: CheckElevator();
  2584  000B34  EC83  F004         	call	_CheckElevator	;wreg free
  2585                           
  2586                           ;position.c: 42: if (direction == 0) {
  2587  000B38  B04F               	btfsc	_direction/(0+8),_direction& (0+7),c
  2588  000B3A  D003               	goto	l3092
  2589                           
  2590                           ;position.c: 43: CheckRudderAhead();
  2591  000B3C  EC11  F004         	call	_CheckRudderAhead	;wreg free
  2592                           
  2593                           ;position.c: 44: } else {
  2594  000B40  0012               	return	
  2595  000B42                     l3092:
  2596                           
  2597                           ;position.c: 45: CheckRudderBack();
  2598  000B42  EC9F  F003         	call	_CheckRudderBack	;wreg free
  2599                           
  2600                           ;position.c: 48: return;
  2601                           
  2602                           ;position.c: 46: }
  2603                           ;position.c: 47: } else {
  2604  000B46  0012               	return	
  2605  000B48                     l938:
  2606  000B48  0012               	return		;funcret
  2607  000B4A                     __end_of_CompareFrames:
  2608                           	opt stack 0
  2609                           tblptru	equ	0xFF8
  2610                           tblptrh	equ	0xFF7
  2611                           tblptrl	equ	0xFF6
  2612                           tablat	equ	0xFF5
  2613                           prodh	equ	0xFF4
  2614                           prodl	equ	0xFF3
  2615                           intcon	equ	0xFF2
  2616                           postinc0	equ	0xFEE
  2617                           wreg	equ	0xFE8
  2618                           postdec1	equ	0xFE5
  2619                           fsr1l	equ	0xFE1
  2620                           postinc2	equ	0xFDE
  2621                           postdec2	equ	0xFDD
  2622                           fsr2h	equ	0xFDA
  2623                           fsr2l	equ	0xFD9
  2624                           status	equ	0xFD8
  2625                           
  2626 ;; *************** function _CheckRudderBack *****************
  2627 ;; Defined at:
  2628 ;;		line 391 in file "position.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;		None
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;		None
  2633 ;; Return value:  Size  Location     Type
  2634 ;;		None               void
  2635 ;; Registers used:
  2636 ;;		wreg, status,2, status,0, cstack
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;Total ram usage:        1 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; Hardware stack levels required when called:    4
  2649 ;; This function calls:
  2650 ;;		_ActRudder
  2651 ;; This function is called by:
  2652 ;;		_CompareFrames
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           	psect	text19
  2657  00073E                     __ptext19:
  2658                           	opt stack 0
  2659  00073E                     _CheckRudderBack:
  2660                           	opt stack 25
  2661                           
  2662                           ;position.c: 394: if (a_frame[0].angle <= -175 || a_frame[0].angle >= 175) {
  2663                           
  2664                           ;incstack = 0
  2665  00073E  AE0A               	btfss	_a_frame+9,7,c
  2666  000740  D006               	goto	l2920
  2667  000742  0E52               	movlw	82
  2668  000744  5C09               	subwf	_a_frame+8,w,c
  2669  000746  0EFF               	movlw	255
  2670  000748  580A               	subwfb	_a_frame+9,w,c
  2671  00074A  A0D8               	btfss	status,0,c
  2672  00074C  D008               	goto	l2922
  2673  00074E                     l2920:
  2674  00074E  BE0A               	btfsc	_a_frame+9,7,c
  2675  000750  D00A               	goto	l2924
  2676  000752  500A               	movf	_a_frame+9,w,c
  2677  000754  E104               	bnz	l2922
  2678  000756  0EAF               	movlw	175
  2679  000758  5C09               	subwf	_a_frame+8,w,c
  2680  00075A  A0D8               	btfss	status,0,c
  2681  00075C  D004               	goto	l2924
  2682  00075E                     l2922:
  2683                           
  2684                           ;position.c: 395: ActRudder(0);
  2685  00075E  0E00               	movlw	0
  2686  000760  ECA7  F007         	call	_ActRudder
  2687                           
  2688                           ;position.c: 396: }
  2689  000764  0012               	return	
  2690  000766                     l2924:
  2691                           
  2692                           ;position.c: 398: else if (a_frame[0].angle > -175) {
  2693  000766  AE0A               	btfss	_a_frame+9,7,c
  2694  000768  D006               	goto	l2926
  2695  00076A  0E52               	movlw	82
  2696  00076C  5C09               	subwf	_a_frame+8,w,c
  2697  00076E  0EFF               	movlw	255
  2698  000770  580A               	subwfb	_a_frame+9,w,c
  2699  000772  A0D8               	btfss	status,0,c
  2700  000774  D02C               	goto	l2940
  2701  000776                     l2926:
  2702                           
  2703                           ;position.c: 400: if (a_frame[1].angle > a_frame[0].angle) {
  2704  000776  5013               	movf	_a_frame+18,w,c
  2705  000778  5C09               	subwf	_a_frame+8,w,c
  2706  00077A  500A               	movf	_a_frame+9,w,c
  2707  00077C  0A80               	xorlw	128
  2708  00077E  0100               	movlb	0	; () banked
  2709  000780  6FD9               	movwf	??_CheckRudderBack& (0+255),b
  2710  000782  5014               	movf	_a_frame+19,w,c
  2711  000784  0A80               	xorlw	128
  2712  000786  0100               	movlb	0	; () banked
  2713  000788  59D9               	subwfb	??_CheckRudderBack& (0+255),w,b
  2714  00078A  B0D8               	btfsc	status,0,c
  2715  00078C  D01C               	goto	l2938
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;position.c: 402: if (a_frame_dif[0].dif_angle <= 2) {
  2719  00078E  BE1E               	btfsc	_a_frame_dif+9,7,c
  2720  000790  D006               	goto	l2930
  2721  000792  501E               	movf	_a_frame_dif+9,w,c
  2722  000794  E114               	bnz	l2936
  2723  000796  0E03               	movlw	3
  2724  000798  5C1D               	subwf	_a_frame_dif+8,w,c
  2725  00079A  B0D8               	btfsc	status,0,c
  2726  00079C  D010               	goto	l2936
  2727  00079E                     l2930:
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;position.c: 403: if (a_frame_dif[0].dif_angle <= 1) {
  2731  00079E  BE1E               	btfsc	_a_frame_dif+9,7,c
  2732  0007A0  D006               	goto	l2932
  2733  0007A2  501E               	movf	_a_frame_dif+9,w,c
  2734  0007A4  E108               	bnz	l2934
  2735  0007A6  0E02               	movlw	2
  2736  0007A8  5C1D               	subwf	_a_frame_dif+8,w,c
  2737  0007AA  B0D8               	btfsc	status,0,c
  2738  0007AC  D004               	goto	l2934
  2739  0007AE                     l2932:
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;position.c: 404: ActRudder(-3);
  2743  0007AE  0EFD               	movlw	253
  2744  0007B0  ECA7  F007         	call	_ActRudder
  2745                           
  2746                           ;position.c: 405: } else {
  2747  0007B4  0012               	return	
  2748  0007B6                     l2934:
  2749                           
  2750                           ;position.c: 406: ActRudder(0);
  2751  0007B6  0E00               	movlw	0
  2752  0007B8  ECA7  F007         	call	_ActRudder
  2753                           
  2754                           ;position.c: 407: }
  2755                           ;position.c: 408: } else {
  2756  0007BC  0012               	return	
  2757  0007BE                     l2936:
  2758                           
  2759                           ;position.c: 410: ActRudder(3);
  2760  0007BE  0E03               	movlw	3
  2761  0007C0  ECA7  F007         	call	_ActRudder
  2762                           
  2763                           ;position.c: 411: }
  2764                           ;position.c: 412: } else {
  2765  0007C4  0012               	return	
  2766  0007C6                     l2938:
  2767                           
  2768                           ;position.c: 414: ActRudder(-3);
  2769  0007C6  0EFD               	movlw	253
  2770  0007C8  ECA7  F007         	call	_ActRudder
  2771                           
  2772                           ;position.c: 415: }
  2773                           ;position.c: 416: }
  2774  0007CC  0012               	return	
  2775  0007CE                     l2940:
  2776                           
  2777                           ;position.c: 418: else {
  2778                           ;position.c: 420: if (a_frame[1].angle < a_frame[0].angle) {
  2779  0007CE  5009               	movf	_a_frame+8,w,c
  2780  0007D0  5C13               	subwf	_a_frame+18,w,c
  2781  0007D2  5014               	movf	_a_frame+19,w,c
  2782  0007D4  0A80               	xorlw	128
  2783  0007D6  0100               	movlb	0	; () banked
  2784  0007D8  6FD9               	movwf	??_CheckRudderBack& (0+255),b
  2785  0007DA  500A               	movf	_a_frame+9,w,c
  2786  0007DC  0A80               	xorlw	128
  2787  0007DE  0100               	movlb	0	; () banked
  2788  0007E0  59D9               	subwfb	??_CheckRudderBack& (0+255),w,b
  2789  0007E2  B0D8               	btfsc	status,0,c
  2790  0007E4  D01A               	goto	l2952
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;position.c: 422: if (a_frame_dif[0].dif_angle <= -2) {
  2794  0007E6  AE1E               	btfss	_a_frame_dif+9,7,c
  2795  0007E8  D014               	goto	l2950
  2796  0007EA  281D               	incf	_a_frame_dif+8,w,c
  2797  0007EC  0EFF               	movlw	255
  2798  0007EE  581E               	subwfb	_a_frame_dif+9,w,c
  2799  0007F0  B0D8               	btfsc	status,0,c
  2800  0007F2  D00F               	goto	l2950
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;position.c: 423: if (a_frame_dif[0].dif_angle <= -2) {
  2804  0007F4  AE1E               	btfss	_a_frame_dif+9,7,c
  2805  0007F6  D009               	goto	l2948
  2806  0007F8  281D               	incf	_a_frame_dif+8,w,c
  2807  0007FA  0EFF               	movlw	255
  2808  0007FC  581E               	subwfb	_a_frame_dif+9,w,c
  2809  0007FE  B0D8               	btfsc	status,0,c
  2810  000800  D004               	goto	l2948
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;position.c: 424: ActRudder(3);
  2814  000802  0E03               	movlw	3
  2815  000804  ECA7  F007         	call	_ActRudder
  2816                           
  2817                           ;position.c: 425: } else {
  2818  000808  0012               	return	
  2819  00080A                     l2948:
  2820                           
  2821                           ;position.c: 426: ActRudder(0);
  2822  00080A  0E00               	movlw	0
  2823  00080C  ECA7  F007         	call	_ActRudder
  2824                           
  2825                           ;position.c: 427: }
  2826                           ;position.c: 428: } else {
  2827  000810  0012               	return	
  2828  000812                     l2950:
  2829                           
  2830                           ;position.c: 430: ActRudder(-3);
  2831  000812  0EFD               	movlw	253
  2832  000814  ECA7  F007         	call	_ActRudder
  2833                           
  2834                           ;position.c: 431: }
  2835                           ;position.c: 432: } else {
  2836  000818  0012               	return	
  2837  00081A                     l2952:
  2838                           
  2839                           ;position.c: 434: ActRudder(3);
  2840  00081A  0E03               	movlw	3
  2841  00081C  ECA7  F007         	call	_ActRudder
  2842  000820  0012               	return	
  2843  000822                     __end_of_CheckRudderBack:
  2844                           	opt stack 0
  2845                           tblptru	equ	0xFF8
  2846                           tblptrh	equ	0xFF7
  2847                           tblptrl	equ	0xFF6
  2848                           tablat	equ	0xFF5
  2849                           prodh	equ	0xFF4
  2850                           prodl	equ	0xFF3
  2851                           intcon	equ	0xFF2
  2852                           postinc0	equ	0xFEE
  2853                           wreg	equ	0xFE8
  2854                           postdec1	equ	0xFE5
  2855                           fsr1l	equ	0xFE1
  2856                           postinc2	equ	0xFDE
  2857                           postdec2	equ	0xFDD
  2858                           fsr2h	equ	0xFDA
  2859                           fsr2l	equ	0xFD9
  2860                           status	equ	0xFD8
  2861                           
  2862 ;; *************** function _CheckRudderAhead *****************
  2863 ;; Defined at:
  2864 ;;		line 333 in file "position.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;		None
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;		None
  2869 ;; Return value:  Size  Location     Type
  2870 ;;		None               void
  2871 ;; Registers used:
  2872 ;;		wreg, status,2, status,0, cstack
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2880 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2881 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2882 ;;Total ram usage:        1 bytes
  2883 ;; Hardware stack levels used:    1
  2884 ;; Hardware stack levels required when called:    4
  2885 ;; This function calls:
  2886 ;;		_ActRudder
  2887 ;; This function is called by:
  2888 ;;		_CompareFrames
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           	psect	text20
  2893  000822                     __ptext20:
  2894                           	opt stack 0
  2895  000822                     _CheckRudderAhead:
  2896                           	opt stack 25
  2897                           
  2898                           ;position.c: 335: if (a_frame[0].angle >= -5 && a_frame[0].angle <= 5) {
  2899                           
  2900                           ;incstack = 0
  2901  000822  AE0A               	btfss	_a_frame+9,7,c
  2902  000824  D006               	goto	l2884
  2903  000826  0EFB               	movlw	251
  2904  000828  5C09               	subwf	_a_frame+8,w,c
  2905  00082A  0EFF               	movlw	255
  2906  00082C  580A               	subwfb	_a_frame+9,w,c
  2907  00082E  A0D8               	btfss	status,0,c
  2908  000830  D00C               	goto	l2888
  2909  000832                     l2884:
  2910  000832  BE0A               	btfsc	_a_frame+9,7,c
  2911  000834  D006               	goto	l2886
  2912  000836  500A               	movf	_a_frame+9,w,c
  2913  000838  E108               	bnz	l2888
  2914  00083A  0E06               	movlw	6
  2915  00083C  5C09               	subwf	_a_frame+8,w,c
  2916  00083E  B0D8               	btfsc	status,0,c
  2917  000840  D004               	goto	l2888
  2918  000842                     l2886:
  2919                           
  2920                           ;position.c: 336: ActRudder(0);
  2921  000842  0E00               	movlw	0
  2922  000844  ECA7  F007         	call	_ActRudder
  2923                           
  2924                           ;position.c: 337: }
  2925  000848  0012               	return	
  2926  00084A                     l2888:
  2927                           
  2928                           ;position.c: 339: else if (a_frame[0].angle > 5) {
  2929  00084A  BE0A               	btfsc	_a_frame+9,7,c
  2930  00084C  D032               	goto	l2904
  2931  00084E  500A               	movf	_a_frame+9,w,c
  2932  000850  E104               	bnz	u1980
  2933  000852  0E06               	movlw	6
  2934  000854  5C09               	subwf	_a_frame+8,w,c
  2935  000856  A0D8               	btfss	status,0,c
  2936  000858  D02C               	goto	l2904
  2937  00085A                     u1980:
  2938                           
  2939                           ;position.c: 341: if (a_frame[1].angle > a_frame[0].angle) {
  2940  00085A  5013               	movf	_a_frame+18,w,c
  2941  00085C  5C09               	subwf	_a_frame+8,w,c
  2942  00085E  500A               	movf	_a_frame+9,w,c
  2943  000860  0A80               	xorlw	128
  2944  000862  0100               	movlb	0	; () banked
  2945  000864  6FD9               	movwf	??_CheckRudderAhead& (0+255),b
  2946  000866  5014               	movf	_a_frame+19,w,c
  2947  000868  0A80               	xorlw	128
  2948  00086A  0100               	movlb	0	; () banked
  2949  00086C  59D9               	subwfb	??_CheckRudderAhead& (0+255),w,b
  2950  00086E  B0D8               	btfsc	status,0,c
  2951  000870  D01C               	goto	l2902
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;position.c: 343: if (a_frame_dif[0].dif_angle <= 2) {
  2955  000872  BE1E               	btfsc	_a_frame_dif+9,7,c
  2956  000874  D006               	goto	l2894
  2957  000876  501E               	movf	_a_frame_dif+9,w,c
  2958  000878  E114               	bnz	l2900
  2959  00087A  0E03               	movlw	3
  2960  00087C  5C1D               	subwf	_a_frame_dif+8,w,c
  2961  00087E  B0D8               	btfsc	status,0,c
  2962  000880  D010               	goto	l2900
  2963  000882                     l2894:
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;position.c: 344: if (a_frame_dif[0].dif_angle <= 1) {
  2967  000882  BE1E               	btfsc	_a_frame_dif+9,7,c
  2968  000884  D006               	goto	l2896
  2969  000886  501E               	movf	_a_frame_dif+9,w,c
  2970  000888  E108               	bnz	l2898
  2971  00088A  0E02               	movlw	2
  2972  00088C  5C1D               	subwf	_a_frame_dif+8,w,c
  2973  00088E  B0D8               	btfsc	status,0,c
  2974  000890  D004               	goto	l2898
  2975  000892                     l2896:
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;position.c: 345: ActRudder(-3);
  2979  000892  0EFD               	movlw	253
  2980  000894  ECA7  F007         	call	_ActRudder
  2981                           
  2982                           ;position.c: 346: } else {
  2983  000898  0012               	return	
  2984  00089A                     l2898:
  2985                           
  2986                           ;position.c: 347: ActRudder(0);
  2987  00089A  0E00               	movlw	0
  2988  00089C  ECA7  F007         	call	_ActRudder
  2989                           
  2990                           ;position.c: 348: }
  2991                           ;position.c: 349: } else {
  2992  0008A0  0012               	return	
  2993  0008A2                     l2900:
  2994                           
  2995                           ;position.c: 351: ActRudder(3);
  2996  0008A2  0E03               	movlw	3
  2997  0008A4  ECA7  F007         	call	_ActRudder
  2998                           
  2999                           ;position.c: 352: }
  3000                           ;position.c: 353: } else {
  3001  0008A8  0012               	return	
  3002  0008AA                     l2902:
  3003                           
  3004                           ;position.c: 355: ActRudder(-3);
  3005  0008AA  0EFD               	movlw	253
  3006  0008AC  ECA7  F007         	call	_ActRudder
  3007                           
  3008                           ;position.c: 356: }
  3009                           ;position.c: 357: }
  3010  0008B0  0012               	return	
  3011  0008B2                     l2904:
  3012                           
  3013                           ;position.c: 359: else {
  3014                           ;position.c: 361: if (a_frame[1].angle < a_frame[0].angle) {
  3015  0008B2  5009               	movf	_a_frame+8,w,c
  3016  0008B4  5C13               	subwf	_a_frame+18,w,c
  3017  0008B6  5014               	movf	_a_frame+19,w,c
  3018  0008B8  0A80               	xorlw	128
  3019  0008BA  0100               	movlb	0	; () banked
  3020  0008BC  6FD9               	movwf	??_CheckRudderAhead& (0+255),b
  3021  0008BE  500A               	movf	_a_frame+9,w,c
  3022  0008C0  0A80               	xorlw	128
  3023  0008C2  0100               	movlb	0	; () banked
  3024  0008C4  59D9               	subwfb	??_CheckRudderAhead& (0+255),w,b
  3025  0008C6  B0D8               	btfsc	status,0,c
  3026  0008C8  D01A               	goto	l2916
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;position.c: 363: if (a_frame_dif[0].dif_angle <= -2) {
  3030  0008CA  AE1E               	btfss	_a_frame_dif+9,7,c
  3031  0008CC  D014               	goto	l2914
  3032  0008CE  281D               	incf	_a_frame_dif+8,w,c
  3033  0008D0  0EFF               	movlw	255
  3034  0008D2  581E               	subwfb	_a_frame_dif+9,w,c
  3035  0008D4  B0D8               	btfsc	status,0,c
  3036  0008D6  D00F               	goto	l2914
  3037                           
  3038                           ; BSR set to: 0
  3039                           ;position.c: 364: if (a_frame_dif[0].dif_angle <= -2) {
  3040  0008D8  AE1E               	btfss	_a_frame_dif+9,7,c
  3041  0008DA  D009               	goto	l2912
  3042  0008DC  281D               	incf	_a_frame_dif+8,w,c
  3043  0008DE  0EFF               	movlw	255
  3044  0008E0  581E               	subwfb	_a_frame_dif+9,w,c
  3045  0008E2  B0D8               	btfsc	status,0,c
  3046  0008E4  D004               	goto	l2912
  3047                           
  3048                           ; BSR set to: 0
  3049                           ;position.c: 365: ActRudder(3);
  3050  0008E6  0E03               	movlw	3
  3051  0008E8  ECA7  F007         	call	_ActRudder
  3052                           
  3053                           ;position.c: 366: } else {
  3054  0008EC  0012               	return	
  3055  0008EE                     l2912:
  3056                           
  3057                           ;position.c: 367: ActRudder(0);
  3058  0008EE  0E00               	movlw	0
  3059  0008F0  ECA7  F007         	call	_ActRudder
  3060                           
  3061                           ;position.c: 368: }
  3062                           ;position.c: 369: } else {
  3063  0008F4  0012               	return	
  3064  0008F6                     l2914:
  3065                           
  3066                           ;position.c: 371: ActRudder(-3);
  3067  0008F6  0EFD               	movlw	253
  3068  0008F8  ECA7  F007         	call	_ActRudder
  3069                           
  3070                           ;position.c: 372: }
  3071                           ;position.c: 373: } else {
  3072  0008FC  0012               	return	
  3073  0008FE                     l2916:
  3074                           
  3075                           ;position.c: 375: ActRudder(3);
  3076  0008FE  0E03               	movlw	3
  3077  000900  ECA7  F007         	call	_ActRudder
  3078  000904  0012               	return	
  3079  000906                     __end_of_CheckRudderAhead:
  3080                           	opt stack 0
  3081                           tblptru	equ	0xFF8
  3082                           tblptrh	equ	0xFF7
  3083                           tblptrl	equ	0xFF6
  3084                           tablat	equ	0xFF5
  3085                           prodh	equ	0xFF4
  3086                           prodl	equ	0xFF3
  3087                           intcon	equ	0xFF2
  3088                           postinc0	equ	0xFEE
  3089                           wreg	equ	0xFE8
  3090                           postdec1	equ	0xFE5
  3091                           fsr1l	equ	0xFE1
  3092                           postinc2	equ	0xFDE
  3093                           postdec2	equ	0xFDD
  3094                           fsr2h	equ	0xFDA
  3095                           fsr2l	equ	0xFD9
  3096                           status	equ	0xFD8
  3097                           
  3098 ;; *************** function _ActRudder *****************
  3099 ;; Defined at:
  3100 ;;		line 98 in file "actors.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  change          1    wreg     unsigned char 
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;  change          1    0[BANK0 ] unsigned char 
  3105 ;; Return value:  Size  Location     Type
  3106 ;;		None               void
  3107 ;; Registers used:
  3108 ;;		wreg, status,2, status,0
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3115 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3117 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3118 ;;Total ram usage:        1 bytes
  3119 ;; Hardware stack levels used:    1
  3120 ;; Hardware stack levels required when called:    3
  3121 ;; This function calls:
  3122 ;;		Nothing
  3123 ;; This function is called by:
  3124 ;;		_CheckRudderAhead
  3125 ;;		_CheckRudderBack
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           	psect	text21
  3130  000F4E                     __ptext21:
  3131                           	opt stack 0
  3132  000F4E                     _ActRudder:
  3133                           	opt stack 25
  3134                           
  3135                           ;incstack = 0
  3136                           ;ActRudder@change stored from wreg
  3137  000F4E  0100               	movlb	0	; () banked
  3138  000F50  6FD8               	movwf	ActRudder@change& (0+255),b
  3139                           
  3140                           ;actors.c: 99: a_actors[0].rudd += change;
  3141  000F52  0100               	movlb	0	; () banked
  3142  000F54  51D8               	movf	ActRudder@change& (0+255),w,b
  3143  000F56  0100               	movlb	0	; () banked
  3144  000F58  27D6               	addwf	(_a_actors+6)& (0+255),f,b
  3145  000F5A  0E00               	movlw	0
  3146  000F5C  23D7               	addwfc	(_a_actors+7)& (0+255),f,b
  3147                           
  3148                           ; BSR set to: 0
  3149  000F5E  0012               	return		;funcret
  3150  000F60                     __end_of_ActRudder:
  3151                           	opt stack 0
  3152                           tblptru	equ	0xFF8
  3153                           tblptrh	equ	0xFF7
  3154                           tblptrl	equ	0xFF6
  3155                           tablat	equ	0xFF5
  3156                           prodh	equ	0xFF4
  3157                           prodl	equ	0xFF3
  3158                           intcon	equ	0xFF2
  3159                           postinc0	equ	0xFEE
  3160                           wreg	equ	0xFE8
  3161                           postdec1	equ	0xFE5
  3162                           fsr1l	equ	0xFE1
  3163                           postinc2	equ	0xFDE
  3164                           postdec2	equ	0xFDD
  3165                           fsr2h	equ	0xFDA
  3166                           fsr2l	equ	0xFD9
  3167                           status	equ	0xFD8
  3168                           
  3169 ;; *************** function _CheckElevator *****************
  3170 ;; Defined at:
  3171 ;;		line 129 in file "position.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;		None
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;		None
  3176 ;; Return value:  Size  Location     Type
  3177 ;;		None               void
  3178 ;; Registers used:
  3179 ;;		wreg, status,2, status,0, cstack
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;Total ram usage:        0 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; Hardware stack levels required when called:    4
  3192 ;; This function calls:
  3193 ;;		_ActElevator
  3194 ;; This function is called by:
  3195 ;;		_CompareFrames
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           	psect	text22
  3200  000906                     __ptext22:
  3201                           	opt stack 0
  3202  000906                     _CheckElevator:
  3203                           	opt stack 25
  3204                           
  3205                           ;position.c: 131: if (a_frame[0].pos_y >= 90 && a_frame[0].pos_y <= 110) {
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;incstack = 0
  3209  000906  5006               	movf	_a_frame+5,w,c
  3210  000908  E104               	bnz	u1870
  3211  00090A  0E5A               	movlw	90
  3212  00090C  5C05               	subwf	_a_frame+4,w,c
  3213  00090E  A0D8               	btfss	status,0,c
  3214  000910  D00A               	goto	l2852
  3215  000912                     u1870:
  3216  000912  5006               	movf	_a_frame+5,w,c
  3217  000914  E108               	bnz	l2852
  3218  000916  0E6F               	movlw	111
  3219  000918  5C05               	subwf	_a_frame+4,w,c
  3220  00091A  B0D8               	btfsc	status,0,c
  3221  00091C  D004               	goto	l2852
  3222                           
  3223                           ;position.c: 133: ActElevator(0);
  3224  00091E  0E00               	movlw	0
  3225  000920  ECB0  F007         	call	_ActElevator
  3226                           
  3227                           ;position.c: 134: }
  3228  000924  0012               	return	
  3229  000926                     l2852:
  3230                           
  3231                           ;position.c: 136: else if (a_frame[0].pos_y > 110) {
  3232  000926  5006               	movf	_a_frame+5,w,c
  3233  000928  E104               	bnz	u1890
  3234  00092A  0E6F               	movlw	111
  3235  00092C  5C05               	subwf	_a_frame+4,w,c
  3236  00092E  A0D8               	btfss	status,0,c
  3237  000930  D025               	goto	l2868
  3238  000932                     u1890:
  3239                           
  3240                           ;position.c: 138: if (a_frame[1].pos_y < a_frame[0].pos_y) {
  3241  000932  5005               	movf	_a_frame+4,w,c
  3242  000934  5C0F               	subwf	_a_frame+14,w,c
  3243  000936  5006               	movf	_a_frame+5,w,c
  3244  000938  5810               	subwfb	_a_frame+15,w,c
  3245  00093A  B0D8               	btfsc	status,0,c
  3246  00093C  D01B               	goto	l2866
  3247                           
  3248                           ;position.c: 140: if (a_frame_dif[0].dif_pos_y >= -8) {
  3249  00093E  AE1A               	btfss	_a_frame_dif+5,7,c
  3250  000940  D006               	goto	l2858
  3251  000942  0EF8               	movlw	248
  3252  000944  5C19               	subwf	_a_frame_dif+4,w,c
  3253  000946  0EFF               	movlw	255
  3254  000948  581A               	subwfb	_a_frame_dif+5,w,c
  3255  00094A  A0D8               	btfss	status,0,c
  3256  00094C  D00F               	goto	l2864
  3257  00094E                     l2858:
  3258                           
  3259                           ;position.c: 141: if (a_frame_dif[0].dif_pos_y >= -1) {
  3260  00094E  AE1A               	btfss	_a_frame_dif+5,7,c
  3261  000950  D005               	goto	l2860
  3262  000952  2819               	incf	_a_frame_dif+4,w,c
  3263  000954  0EFF               	movlw	255
  3264  000956  581A               	subwfb	_a_frame_dif+5,w,c
  3265  000958  A0D8               	btfss	status,0,c
  3266  00095A  D004               	goto	l2862
  3267  00095C                     l2860:
  3268                           
  3269                           ;position.c: 143: ActElevator(3);
  3270  00095C  0E03               	movlw	3
  3271  00095E  ECB0  F007         	call	_ActElevator
  3272                           
  3273                           ;position.c: 144: } else {
  3274  000962  0012               	return	
  3275  000964                     l2862:
  3276                           
  3277                           ;position.c: 146: ActElevator(0);
  3278  000964  0E00               	movlw	0
  3279  000966  ECB0  F007         	call	_ActElevator
  3280                           
  3281                           ;position.c: 147: }
  3282                           ;position.c: 148: } else {
  3283  00096A  0012               	return	
  3284  00096C                     l2864:
  3285                           
  3286                           ;position.c: 150: ActElevator(-3);
  3287  00096C  0EFD               	movlw	253
  3288  00096E  ECB0  F007         	call	_ActElevator
  3289                           
  3290                           ;position.c: 151: }
  3291                           ;position.c: 152: } else {
  3292  000972  0012               	return	
  3293  000974                     l2866:
  3294                           
  3295                           ;position.c: 158: ActElevator(3);
  3296  000974  0E03               	movlw	3
  3297  000976  ECB0  F007         	call	_ActElevator
  3298                           
  3299                           ;position.c: 159: }
  3300                           ;position.c: 160: }
  3301  00097A  0012               	return	
  3302  00097C                     l2868:
  3303                           
  3304                           ;position.c: 162: else {
  3305                           ;position.c: 164: if (a_frame[1].pos_y > a_frame[0].pos_y) {
  3306  00097C  500F               	movf	_a_frame+14,w,c
  3307  00097E  5C05               	subwf	_a_frame+4,w,c
  3308  000980  5010               	movf	_a_frame+15,w,c
  3309  000982  5806               	subwfb	_a_frame+5,w,c
  3310  000984  B0D8               	btfsc	status,0,c
  3311  000986  D01C               	goto	l2880
  3312                           
  3313                           ;position.c: 166: if (a_frame_dif[0].dif_pos_y <= 8) {
  3314  000988  BE1A               	btfsc	_a_frame_dif+5,7,c
  3315  00098A  D006               	goto	l2872
  3316  00098C  501A               	movf	_a_frame_dif+5,w,c
  3317  00098E  E114               	bnz	l2878
  3318  000990  0E09               	movlw	9
  3319  000992  5C19               	subwf	_a_frame_dif+4,w,c
  3320  000994  B0D8               	btfsc	status,0,c
  3321  000996  D010               	goto	l2878
  3322  000998                     l2872:
  3323                           
  3324                           ;position.c: 167: if (a_frame_dif[0].dif_pos_y <= 1) {
  3325  000998  BE1A               	btfsc	_a_frame_dif+5,7,c
  3326  00099A  D006               	goto	l2874
  3327  00099C  501A               	movf	_a_frame_dif+5,w,c
  3328  00099E  E108               	bnz	l2876
  3329  0009A0  0E02               	movlw	2
  3330  0009A2  5C19               	subwf	_a_frame_dif+4,w,c
  3331  0009A4  B0D8               	btfsc	status,0,c
  3332  0009A6  D004               	goto	l2876
  3333  0009A8                     l2874:
  3334                           
  3335                           ;position.c: 169: ActElevator(-3);
  3336  0009A8  0EFD               	movlw	253
  3337  0009AA  ECB0  F007         	call	_ActElevator
  3338                           
  3339                           ;position.c: 170: } else {
  3340  0009AE  0012               	return	
  3341  0009B0                     l2876:
  3342                           
  3343                           ;position.c: 172: ActElevator(0);
  3344  0009B0  0E00               	movlw	0
  3345  0009B2  ECB0  F007         	call	_ActElevator
  3346                           
  3347                           ;position.c: 173: }
  3348                           ;position.c: 174: } else {
  3349  0009B6  0012               	return	
  3350  0009B8                     l2878:
  3351                           
  3352                           ;position.c: 176: ActElevator(3);
  3353  0009B8  0E03               	movlw	3
  3354  0009BA  ECB0  F007         	call	_ActElevator
  3355                           
  3356                           ;position.c: 177: }
  3357                           ;position.c: 178: } else {
  3358  0009BE  0012               	return	
  3359  0009C0                     l2880:
  3360                           
  3361                           ;position.c: 184: ActElevator(-3);
  3362  0009C0  0EFD               	movlw	253
  3363  0009C2  ECB0  F007         	call	_ActElevator
  3364  0009C6  0012               	return	
  3365  0009C8                     __end_of_CheckElevator:
  3366                           	opt stack 0
  3367                           tblptru	equ	0xFF8
  3368                           tblptrh	equ	0xFF7
  3369                           tblptrl	equ	0xFF6
  3370                           tablat	equ	0xFF5
  3371                           prodh	equ	0xFF4
  3372                           prodl	equ	0xFF3
  3373                           intcon	equ	0xFF2
  3374                           postinc0	equ	0xFEE
  3375                           wreg	equ	0xFE8
  3376                           postdec1	equ	0xFE5
  3377                           fsr1l	equ	0xFE1
  3378                           postinc2	equ	0xFDE
  3379                           postdec2	equ	0xFDD
  3380                           fsr2h	equ	0xFDA
  3381                           fsr2l	equ	0xFD9
  3382                           status	equ	0xFD8
  3383                           
  3384 ;; *************** function _ActElevator *****************
  3385 ;; Defined at:
  3386 ;;		line 80 in file "actors.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;  change          1    wreg     unsigned char 
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;  change          1    0[BANK0 ] unsigned char 
  3391 ;; Return value:  Size  Location     Type
  3392 ;;		None               void
  3393 ;; Registers used:
  3394 ;;		wreg, status,2, status,0
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3401 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3403 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3404 ;;Total ram usage:        1 bytes
  3405 ;; Hardware stack levels used:    1
  3406 ;; Hardware stack levels required when called:    3
  3407 ;; This function calls:
  3408 ;;		Nothing
  3409 ;; This function is called by:
  3410 ;;		_CheckElevator
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           	psect	text23
  3415  000F60                     __ptext23:
  3416                           	opt stack 0
  3417  000F60                     _ActElevator:
  3418                           	opt stack 25
  3419                           
  3420                           ;incstack = 0
  3421                           ;ActElevator@change stored from wreg
  3422  000F60  0100               	movlb	0	; () banked
  3423  000F62  6FD8               	movwf	ActElevator@change& (0+255),b
  3424                           
  3425                           ;actors.c: 81: a_actors[0].elev += change;
  3426  000F64  0100               	movlb	0	; () banked
  3427  000F66  51D8               	movf	ActElevator@change& (0+255),w,b
  3428  000F68  0100               	movlb	0	; () banked
  3429  000F6A  27D2               	addwf	(_a_actors+2)& (0+255),f,b
  3430  000F6C  0E00               	movlw	0
  3431  000F6E  23D3               	addwfc	(_a_actors+3)& (0+255),f,b
  3432                           
  3433                           ; BSR set to: 0
  3434  000F70  0012               	return		;funcret
  3435  000F72                     __end_of_ActElevator:
  3436                           	opt stack 0
  3437                           tblptru	equ	0xFF8
  3438                           tblptrh	equ	0xFF7
  3439                           tblptrl	equ	0xFF6
  3440                           tablat	equ	0xFF5
  3441                           prodh	equ	0xFF4
  3442                           prodl	equ	0xFF3
  3443                           intcon	equ	0xFF2
  3444                           postinc0	equ	0xFEE
  3445                           wreg	equ	0xFE8
  3446                           postdec1	equ	0xFE5
  3447                           fsr1l	equ	0xFE1
  3448                           postinc2	equ	0xFDE
  3449                           postdec2	equ	0xFDD
  3450                           fsr2h	equ	0xFDA
  3451                           fsr2l	equ	0xFD9
  3452                           status	equ	0xFD8
  3453                           
  3454 ;; *************** function _CheckAileron *****************
  3455 ;; Defined at:
  3456 ;;		line 59 in file "position.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;		None
  3459 ;; Auto vars:     Size  Location     Type
  3460 ;;		None
  3461 ;; Return value:  Size  Location     Type
  3462 ;;		None               void
  3463 ;; Registers used:
  3464 ;;		wreg, status,2, status,0, cstack
  3465 ;; Tracked objects:
  3466 ;;		On entry : 0/0
  3467 ;;		On exit  : 0/0
  3468 ;;		Unchanged: 0/0
  3469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3474 ;;Total ram usage:        0 bytes
  3475 ;; Hardware stack levels used:    1
  3476 ;; Hardware stack levels required when called:    4
  3477 ;; This function calls:
  3478 ;;		_ActAileron
  3479 ;; This function is called by:
  3480 ;;		_CompareFrames
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           	psect	text24
  3485  0009C8                     __ptext24:
  3486                           	opt stack 0
  3487  0009C8                     _CheckAileron:
  3488                           	opt stack 25
  3489                           
  3490                           ;position.c: 62: if (a_frame[0].pos_x >= 150 && a_frame[0].pos_x <= 170) {
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;incstack = 0
  3494  0009C8  5004               	movf	_a_frame+3,w,c
  3495  0009CA  E104               	bnz	u1780
  3496  0009CC  0E96               	movlw	150
  3497  0009CE  5C03               	subwf	_a_frame+2,w,c
  3498  0009D0  A0D8               	btfss	status,0,c
  3499  0009D2  D00A               	goto	l2814
  3500  0009D4                     u1780:
  3501  0009D4  5004               	movf	_a_frame+3,w,c
  3502  0009D6  E108               	bnz	l2814
  3503  0009D8  0EAB               	movlw	171
  3504  0009DA  5C03               	subwf	_a_frame+2,w,c
  3505  0009DC  B0D8               	btfsc	status,0,c
  3506  0009DE  D004               	goto	l2814
  3507                           
  3508                           ;position.c: 64: ActAileron(0);
  3509  0009E0  0E00               	movlw	0
  3510  0009E2  ECB9  F007         	call	_ActAileron
  3511                           
  3512                           ;position.c: 65: }
  3513  0009E6  0012               	return	
  3514  0009E8                     l2814:
  3515                           
  3516                           ;position.c: 67: else if (a_frame[0].pos_x > 170) {
  3517  0009E8  5004               	movf	_a_frame+3,w,c
  3518  0009EA  E104               	bnz	u1800
  3519  0009EC  0EAB               	movlw	171
  3520  0009EE  5C03               	subwf	_a_frame+2,w,c
  3521  0009F0  A0D8               	btfss	status,0,c
  3522  0009F2  D026               	goto	l2830
  3523  0009F4                     u1800:
  3524                           
  3525                           ;position.c: 69: if (a_frame[1].pos_x > a_frame[0].pos_x) {
  3526  0009F4  500D               	movf	_a_frame+12,w,c
  3527  0009F6  5C03               	subwf	_a_frame+2,w,c
  3528  0009F8  500E               	movf	_a_frame+13,w,c
  3529  0009FA  5804               	subwfb	_a_frame+3,w,c
  3530  0009FC  B0D8               	btfsc	status,0,c
  3531  0009FE  D01C               	goto	l2828
  3532                           
  3533                           ;position.c: 71: if (a_frame_dif[0].dif_pos_x <= 8) {
  3534  000A00  BE18               	btfsc	_a_frame_dif+3,7,c
  3535  000A02  D006               	goto	l2820
  3536  000A04  5018               	movf	_a_frame_dif+3,w,c
  3537  000A06  E114               	bnz	l2826
  3538  000A08  0E09               	movlw	9
  3539  000A0A  5C17               	subwf	_a_frame_dif+2,w,c
  3540  000A0C  B0D8               	btfsc	status,0,c
  3541  000A0E  D010               	goto	l2826
  3542  000A10                     l2820:
  3543                           
  3544                           ;position.c: 72: if (a_frame_dif[0].dif_pos_x <= 1) {
  3545  000A10  BE18               	btfsc	_a_frame_dif+3,7,c
  3546  000A12  D006               	goto	l2822
  3547  000A14  5018               	movf	_a_frame_dif+3,w,c
  3548  000A16  E108               	bnz	l2824
  3549  000A18  0E02               	movlw	2
  3550  000A1A  5C17               	subwf	_a_frame_dif+2,w,c
  3551  000A1C  B0D8               	btfsc	status,0,c
  3552  000A1E  D004               	goto	l2824
  3553  000A20                     l2822:
  3554                           
  3555                           ;position.c: 74: ActAileron(-3);
  3556  000A20  0EFD               	movlw	253
  3557  000A22  ECB9  F007         	call	_ActAileron
  3558                           
  3559                           ;position.c: 75: } else {
  3560  000A26  0012               	return	
  3561  000A28                     l2824:
  3562                           
  3563                           ;position.c: 77: ActAileron(0);
  3564  000A28  0E00               	movlw	0
  3565  000A2A  ECB9  F007         	call	_ActAileron
  3566                           
  3567                           ;position.c: 78: }
  3568                           ;position.c: 79: } else {
  3569  000A2E  0012               	return	
  3570  000A30                     l2826:
  3571                           
  3572                           ;position.c: 81: ActAileron(3);
  3573  000A30  0E03               	movlw	3
  3574  000A32  ECB9  F007         	call	_ActAileron
  3575                           
  3576                           ;position.c: 82: }
  3577                           ;position.c: 83: } else {
  3578  000A36  0012               	return	
  3579  000A38                     l2828:
  3580                           
  3581                           ;position.c: 89: ActAileron(-3);
  3582  000A38  0EFD               	movlw	253
  3583  000A3A  ECB9  F007         	call	_ActAileron
  3584                           
  3585                           ;position.c: 90: }
  3586                           ;position.c: 91: }
  3587  000A3E  0012               	return	
  3588  000A40                     l2830:
  3589                           
  3590                           ;position.c: 93: else {
  3591                           ;position.c: 95: if (a_frame[1].pos_x < a_frame[0].pos_x) {
  3592  000A40  5003               	movf	_a_frame+2,w,c
  3593  000A42  5C0D               	subwf	_a_frame+12,w,c
  3594  000A44  5004               	movf	_a_frame+3,w,c
  3595  000A46  580E               	subwfb	_a_frame+13,w,c
  3596  000A48  B0D8               	btfsc	status,0,c
  3597  000A4A  D01B               	goto	l2842
  3598                           
  3599                           ;position.c: 97: if (a_frame_dif[0].dif_pos_x >= -8) {
  3600  000A4C  AE18               	btfss	_a_frame_dif+3,7,c
  3601  000A4E  D006               	goto	l2834
  3602  000A50  0EF8               	movlw	248
  3603  000A52  5C17               	subwf	_a_frame_dif+2,w,c
  3604  000A54  0EFF               	movlw	255
  3605  000A56  5818               	subwfb	_a_frame_dif+3,w,c
  3606  000A58  A0D8               	btfss	status,0,c
  3607  000A5A  D00F               	goto	l2840
  3608  000A5C                     l2834:
  3609                           
  3610                           ;position.c: 98: if (a_frame_dif[0].dif_pos_x >= -1) {
  3611  000A5C  AE18               	btfss	_a_frame_dif+3,7,c
  3612  000A5E  D005               	goto	l2836
  3613  000A60  2817               	incf	_a_frame_dif+2,w,c
  3614  000A62  0EFF               	movlw	255
  3615  000A64  5818               	subwfb	_a_frame_dif+3,w,c
  3616  000A66  A0D8               	btfss	status,0,c
  3617  000A68  D004               	goto	l2838
  3618  000A6A                     l2836:
  3619                           
  3620                           ;position.c: 100: ActAileron(3);
  3621  000A6A  0E03               	movlw	3
  3622  000A6C  ECB9  F007         	call	_ActAileron
  3623                           
  3624                           ;position.c: 101: } else {
  3625  000A70  0012               	return	
  3626  000A72                     l2838:
  3627                           
  3628                           ;position.c: 103: ActAileron(0);
  3629  000A72  0E00               	movlw	0
  3630  000A74  ECB9  F007         	call	_ActAileron
  3631                           
  3632                           ;position.c: 104: }
  3633                           ;position.c: 105: } else {
  3634  000A78  0012               	return	
  3635  000A7A                     l2840:
  3636                           
  3637                           ;position.c: 107: ActAileron(-3);
  3638  000A7A  0EFD               	movlw	253
  3639  000A7C  ECB9  F007         	call	_ActAileron
  3640                           
  3641                           ;position.c: 108: }
  3642                           ;position.c: 109: } else {
  3643  000A80  0012               	return	
  3644  000A82                     l2842:
  3645                           
  3646                           ;position.c: 115: ActAileron(3);
  3647  000A82  0E03               	movlw	3
  3648  000A84  ECB9  F007         	call	_ActAileron
  3649  000A88  0012               	return	
  3650  000A8A                     __end_of_CheckAileron:
  3651                           	opt stack 0
  3652                           tblptru	equ	0xFF8
  3653                           tblptrh	equ	0xFF7
  3654                           tblptrl	equ	0xFF6
  3655                           tablat	equ	0xFF5
  3656                           prodh	equ	0xFF4
  3657                           prodl	equ	0xFF3
  3658                           intcon	equ	0xFF2
  3659                           postinc0	equ	0xFEE
  3660                           wreg	equ	0xFE8
  3661                           postdec1	equ	0xFE5
  3662                           fsr1l	equ	0xFE1
  3663                           postinc2	equ	0xFDE
  3664                           postdec2	equ	0xFDD
  3665                           fsr2h	equ	0xFDA
  3666                           fsr2l	equ	0xFD9
  3667                           status	equ	0xFD8
  3668                           
  3669 ;; *************** function _ActAileron *****************
  3670 ;; Defined at:
  3671 ;;		line 71 in file "actors.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;  change          1    wreg     unsigned char 
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;  change          1    0[BANK0 ] unsigned char 
  3676 ;; Return value:  Size  Location     Type
  3677 ;;		None               void
  3678 ;; Registers used:
  3679 ;;		wreg, status,2, status,0
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3689 ;;Total ram usage:        1 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    3
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		_CheckAileron
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text25
  3700  000F72                     __ptext25:
  3701                           	opt stack 0
  3702  000F72                     _ActAileron:
  3703                           	opt stack 25
  3704                           
  3705                           ;incstack = 0
  3706                           ;ActAileron@change stored from wreg
  3707  000F72  0100               	movlb	0	; () banked
  3708  000F74  6FD8               	movwf	ActAileron@change& (0+255),b
  3709                           
  3710                           ;actors.c: 72: a_actors[0].aile += change;
  3711  000F76  0100               	movlb	0	; () banked
  3712  000F78  51D8               	movf	ActAileron@change& (0+255),w,b
  3713  000F7A  0100               	movlb	0	; () banked
  3714  000F7C  27D0               	addwf	_a_actors& (0+255),f,b
  3715  000F7E  0E00               	movlw	0
  3716  000F80  23D1               	addwfc	(_a_actors+1)& (0+255),f,b
  3717                           
  3718                           ; BSR set to: 0
  3719  000F82  0012               	return		;funcret
  3720  000F84                     __end_of_ActAileron:
  3721                           	opt stack 0
  3722                           tblptru	equ	0xFF8
  3723                           tblptrh	equ	0xFF7
  3724                           tblptrl	equ	0xFF6
  3725                           tablat	equ	0xFF5
  3726                           prodh	equ	0xFF4
  3727                           prodl	equ	0xFF3
  3728                           intcon	equ	0xFF2
  3729                           postinc0	equ	0xFEE
  3730                           wreg	equ	0xFE8
  3731                           postdec1	equ	0xFE5
  3732                           fsr1l	equ	0xFE1
  3733                           postinc2	equ	0xFDE
  3734                           postdec2	equ	0xFDD
  3735                           fsr2h	equ	0xFDA
  3736                           fsr2l	equ	0xFD9
  3737                           status	equ	0xFD8
  3738                           
  3739 ;; *************** function _CheckThrottle *****************
  3740 ;; Defined at:
  3741 ;;		line 237 in file "position.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;		None
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;  i               2    6[BANK0 ] int 
  3746 ;;  i               2   12[BANK0 ] int 
  3747 ;;  i               2   10[BANK0 ] int 
  3748 ;;  tmp             2    8[BANK0 ] int 
  3749 ;; Return value:  Size  Location     Type
  3750 ;;		None               void
  3751 ;; Registers used:
  3752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3759 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3760 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3761 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3762 ;;Total ram usage:       13 bytes
  3763 ;; Hardware stack levels used:    1
  3764 ;; Hardware stack levels required when called:    5
  3765 ;; This function calls:
  3766 ;;		_ActThrottle
  3767 ;;		_BeneathFloor
  3768 ;;		_BeneathTable
  3769 ;; This function is called by:
  3770 ;;		_main
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           	psect	text26
  3775  0000B8                     __ptext26:
  3776                           	opt stack 0
  3777  0000B8                     _CheckThrottle:
  3778                           	opt stack 25
  3779                           
  3780                           ;position.c: 239: if (id_current_cc == 0) {
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;incstack = 0
  3784  0000B8  5025               	movf	_id_current_cc,w,c
  3785  0000BA  1026               	iorwf	_id_current_cc+1,w,c
  3786  0000BC  A4D8               	btfss	status,2,c
  3787  0000BE  D020               	goto	l3124
  3788                           
  3789                           ;position.c: 241: if (a_frame_dif[0].dif_height < -cm50) {
  3790  0000C0  C04A  F0D9         	movff	_cm50,??_CheckThrottle
  3791  0000C4  C04B  F0DA         	movff	_cm50+1,??_CheckThrottle+1
  3792  0000C8  0100               	movlb	0	; () banked
  3793  0000CA  1FD9               	comf	??_CheckThrottle& (0+255),f,b
  3794  0000CC  1FDA               	comf	(??_CheckThrottle+1)& (0+255),f,b
  3795  0000CE  4BD9               	infsnz	??_CheckThrottle& (0+255),f,b
  3796  0000D0  2BDA               	incf	(??_CheckThrottle+1)& (0+255),f,b
  3797  0000D2  0100               	movlb	0	; () banked
  3798  0000D4  51D9               	movf	??_CheckThrottle& (0+255),w,b
  3799  0000D6  5C1B               	subwf	_a_frame_dif+6,w,c
  3800  0000D8  0100               	movlb	0	; () banked
  3801  0000DA  51DA               	movf	(??_CheckThrottle+1)& (0+255),w,b
  3802  0000DC  581C               	subwfb	_a_frame_dif+7,w,c
  3803  0000DE  B0D8               	btfsc	status,0,c
  3804  0000E0  D006               	goto	l998
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;position.c: 242: if (storedif) {
  3808  0000E2  AA4F               	btfss	_storedif/(0+8),_storedif& (0+7),c
  3809  0000E4  D002               	goto	l999
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;position.c: 243: table = 0;
  3813  0000E6  9C4F               	bcf	_table/(0+8),_table& (0+7),c
  3814                           
  3815                           ;position.c: 244: } else {
  3816  0000E8  D003               	goto	l1001
  3817  0000EA                     l999:
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;position.c: 245: storedif = 1;
  3821  0000EA  8A4F               	bsf	_storedif/(0+8),_storedif& (0+7),c
  3822                           
  3823                           ; BSR set to: 0
  3824                           ;position.c: 246: }
  3825                           ;position.c: 247: }else{
  3826  0000EC  D001               	goto	l1001
  3827  0000EE                     l998:
  3828                           
  3829                           ; BSR set to: 0
  3830                           ;position.c: 248: storedif = 0;
  3831  0000EE  9A4F               	bcf	_storedif/(0+8),_storedif& (0+7),c
  3832  0000F0                     l1001:
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;position.c: 249: }
  3836                           ;position.c: 250: if (table) {
  3837  0000F0  AC4F               	btfss	_table/(0+8),_table& (0+7),c
  3838  0000F2  D003               	goto	l3122
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;position.c: 251: BeneathTable();
  3842  0000F4  EC98  F006         	call	_BeneathTable	;wreg free
  3843                           
  3844                           ;position.c: 252: } else {
  3845  0000F8  0012               	return	
  3846  0000FA                     l3122:
  3847                           
  3848                           ;position.c: 253: BeneathFloor();
  3849  0000FA  ECC0  F006         	call	_BeneathFloor	;wreg free
  3850                           
  3851                           ;position.c: 254: }
  3852                           ;position.c: 255: } else if (id_current_cc > 0 && id_current_cc < (c_path - 1)) {
  3853  0000FE  0012               	return	
  3854  000100                     l3124:
  3855  000100  BE26               	btfsc	_id_current_cc+1,7,c
  3856  000102  D028               	goto	l3130
  3857  000104  5026               	movf	_id_current_cc+1,w,c
  3858  000106  E103               	bnz	u2440
  3859  000108  0425               	decf	_id_current_cc,w,c
  3860  00010A  A0D8               	btfss	status,0,c
  3861  00010C  D023               	goto	l3130
  3862  00010E                     u2440:
  3863  00010E  0EFF               	movlw	255
  3864  000110  0100               	movlb	0	; () banked
  3865  000112  6FD9               	movwf	??_CheckThrottle& (0+255),b
  3866  000114  0EFF               	movlw	255
  3867  000116  0100               	movlb	0	; () banked
  3868  000118  6FDA               	movwf	(??_CheckThrottle+1)& (0+255),b
  3869  00011A  C040  F0DB         	movff	_c_path,??_CheckThrottle+2
  3870  00011E  C041  F0DC         	movff	_c_path+1,??_CheckThrottle+3
  3871  000122  0100               	movlb	0	; () banked
  3872  000124  51D9               	movf	??_CheckThrottle& (0+255),w,b
  3873  000126  0100               	movlb	0	; () banked
  3874  000128  27DB               	addwf	(??_CheckThrottle+2)& (0+255),f,b
  3875  00012A  0100               	movlb	0	; () banked
  3876  00012C  51DA               	movf	(??_CheckThrottle+1)& (0+255),w,b
  3877  00012E  0100               	movlb	0	; () banked
  3878  000130  23DC               	addwfc	(??_CheckThrottle+3)& (0+255),f,b
  3879  000132  0100               	movlb	0	; () banked
  3880  000134  51DB               	movf	(??_CheckThrottle+2)& (0+255),w,b
  3881  000136  5C25               	subwf	_id_current_cc,w,c
  3882  000138  5026               	movf	_id_current_cc+1,w,c
  3883  00013A  0A80               	xorlw	128
  3884  00013C  0100               	movlb	0	; () banked
  3885  00013E  6FDD               	movwf	(??_CheckThrottle+4)& (0+255),b
  3886  000140  0100               	movlb	0	; () banked
  3887  000142  51DC               	movf	(??_CheckThrottle+3)& (0+255),w,b
  3888  000144  0A80               	xorlw	128
  3889  000146  0100               	movlb	0	; () banked
  3890  000148  59DD               	subwfb	(??_CheckThrottle+4)& (0+255),w,b
  3891  00014A  B0D8               	btfsc	status,0,c
  3892  00014C  D003               	goto	l3130
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;position.c: 256: BeneathFloor();
  3896  00014E  ECC0  F006         	call	_BeneathFloor	;wreg free
  3897                           
  3898                           ;position.c: 257: } else if (id_current_cc == (c_path - 1)) {
  3899  000152  0012               	return	
  3900  000154                     l3130:
  3901  000154  0EFF               	movlw	255
  3902  000156  0100               	movlb	0	; () banked
  3903  000158  6FD9               	movwf	??_CheckThrottle& (0+255),b
  3904  00015A  0EFF               	movlw	255
  3905  00015C  0100               	movlb	0	; () banked
  3906  00015E  6FDA               	movwf	(??_CheckThrottle+1)& (0+255),b
  3907  000160  C040  F0DB         	movff	_c_path,??_CheckThrottle+2
  3908  000164  C041  F0DC         	movff	_c_path+1,??_CheckThrottle+3
  3909  000168  0100               	movlb	0	; () banked
  3910  00016A  51D9               	movf	??_CheckThrottle& (0+255),w,b
  3911  00016C  0100               	movlb	0	; () banked
  3912  00016E  27DB               	addwf	(??_CheckThrottle+2)& (0+255),f,b
  3913  000170  0100               	movlb	0	; () banked
  3914  000172  51DA               	movf	(??_CheckThrottle+1)& (0+255),w,b
  3915  000174  0100               	movlb	0	; () banked
  3916  000176  23DC               	addwfc	(??_CheckThrottle+3)& (0+255),f,b
  3917  000178  5025               	movf	_id_current_cc,w,c
  3918  00017A  0100               	movlb	0	; () banked
  3919  00017C  19DB               	xorwf	(??_CheckThrottle+2)& (0+255),w,b
  3920  00017E  E11A               	bnz	l3142
  3921  000180  5026               	movf	_id_current_cc+1,w,c
  3922  000182  0100               	movlb	0	; () banked
  3923  000184  19DC               	xorwf	(??_CheckThrottle+3)& (0+255),w,b
  3924  000186  A4D8               	btfss	status,2,c
  3925  000188  D015               	goto	l3142
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;position.c: 259: if (a_frame_dif[0].dif_height > cm50) {
  3929  00018A  501B               	movf	_a_frame_dif+6,w,c
  3930  00018C  5C4A               	subwf	_cm50,w,c
  3931  00018E  501C               	movf	_a_frame_dif+7,w,c
  3932  000190  584B               	subwfb	_cm50+1,w,c
  3933  000192  B0D8               	btfsc	status,0,c
  3934  000194  D006               	goto	l1008
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;position.c: 260: if (storedif) {
  3938  000196  AA4F               	btfss	_storedif/(0+8),_storedif& (0+7),c
  3939  000198  D002               	goto	l1009
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;position.c: 261: table = 1;
  3943  00019A  8C4F               	bsf	_table/(0+8),_table& (0+7),c
  3944                           
  3945                           ;position.c: 262: } else {
  3946  00019C  D003               	goto	l1011
  3947  00019E                     l1009:
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;position.c: 263: storedif = 1;
  3951  00019E  8A4F               	bsf	_storedif/(0+8),_storedif& (0+7),c
  3952                           
  3953                           ; BSR set to: 0
  3954                           ;position.c: 264: }
  3955                           ;position.c: 265: }else{
  3956  0001A0  D001               	goto	l1011
  3957  0001A2                     l1008:
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;position.c: 266: storedif = 0;
  3961  0001A2  9A4F               	bcf	_storedif/(0+8),_storedif& (0+7),c
  3962  0001A4                     l1011:
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;position.c: 267: }
  3966                           ;position.c: 268: if (table) {
  3967  0001A4  AC4F               	btfss	_table/(0+8),_table& (0+7),c
  3968  0001A6  D003               	goto	l3140
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;position.c: 269: BeneathTable();
  3972  0001A8  EC98  F006         	call	_BeneathTable	;wreg free
  3973                           
  3974                           ;position.c: 270: } else {
  3975  0001AC  0012               	return	
  3976  0001AE                     l3140:
  3977                           
  3978                           ;position.c: 271: BeneathFloor();
  3979  0001AE  ECC0  F006         	call	_BeneathFloor	;wreg free
  3980                           
  3981                           ;position.c: 272: }
  3982                           ;position.c: 273: } else {
  3983  0001B2  0012               	return	
  3984  0001B4                     l3142:
  3985                           
  3986                           ;position.c: 278: if (a_frame[0].height >= 30) {
  3987  0001B4  5008               	movf	_a_frame+7,w,c
  3988  0001B6  E104               	bnz	u2500
  3989  0001B8  0E1E               	movlw	30
  3990  0001BA  5C07               	subwf	_a_frame+6,w,c
  3991  0001BC  A0D8               	btfss	status,0,c
  3992  0001BE  D026               	goto	l1015
  3993  0001C0                     u2500:
  3994                           
  3995                           ;position.c: 279: if (a_frame[1].height > a_frame[0].height) {
  3996  0001C0  5011               	movf	_a_frame+16,w,c
  3997  0001C2  5C07               	subwf	_a_frame+6,w,c
  3998  0001C4  5012               	movf	_a_frame+17,w,c
  3999  0001C6  5808               	subwfb	_a_frame+7,w,c
  4000  0001C8  B0D8               	btfsc	status,0,c
  4001  0001CA  D01C               	goto	l3156
  4002                           
  4003                           ;position.c: 281: if (a_frame_dif[0].dif_height <= 46) {
  4004  0001CC  BE1C               	btfsc	_a_frame_dif+7,7,c
  4005  0001CE  D006               	goto	l3148
  4006  0001D0  501C               	movf	_a_frame_dif+7,w,c
  4007  0001D2  E114               	bnz	l3154
  4008  0001D4  0E2F               	movlw	47
  4009  0001D6  5C1B               	subwf	_a_frame_dif+6,w,c
  4010  0001D8  B0D8               	btfsc	status,0,c
  4011  0001DA  D010               	goto	l3154
  4012  0001DC                     l3148:
  4013                           
  4014                           ;position.c: 282: if (a_frame_dif[0].dif_pos_x <= 23) {
  4015  0001DC  BE18               	btfsc	_a_frame_dif+3,7,c
  4016  0001DE  D006               	goto	l3150
  4017  0001E0  5018               	movf	_a_frame_dif+3,w,c
  4018  0001E2  E108               	bnz	l3152
  4019  0001E4  0E18               	movlw	24
  4020  0001E6  5C17               	subwf	_a_frame_dif+2,w,c
  4021  0001E8  B0D8               	btfsc	status,0,c
  4022  0001EA  D004               	goto	l3152
  4023  0001EC                     l3150:
  4024                           
  4025                           ;position.c: 284: ActThrottle(-3);
  4026  0001EC  0EFD               	movlw	253
  4027  0001EE  ECC2  F007         	call	_ActThrottle
  4028                           
  4029                           ;position.c: 285: } else {
  4030  0001F2  0012               	return	
  4031  0001F4                     l3152:
  4032                           
  4033                           ;position.c: 286: ActThrottle(0);
  4034  0001F4  0E00               	movlw	0
  4035  0001F6  ECC2  F007         	call	_ActThrottle
  4036                           
  4037                           ;position.c: 287: }
  4038                           ;position.c: 288: } else {
  4039  0001FA  0012               	return	
  4040  0001FC                     l3154:
  4041                           
  4042                           ;position.c: 289: ActThrottle(3);
  4043  0001FC  0E03               	movlw	3
  4044  0001FE  ECC2  F007         	call	_ActThrottle
  4045                           
  4046                           ;position.c: 290: }
  4047                           ;position.c: 291: } else {
  4048  000202  0012               	return	
  4049  000204                     l3156:
  4050                           
  4051                           ;position.c: 293: ActThrottle(-3);
  4052  000204  0EFD               	movlw	253
  4053  000206  ECC2  F007         	call	_ActThrottle
  4054                           
  4055                           ;position.c: 294: }
  4056                           ;position.c: 295: } else {
  4057  00020A  0012               	return	
  4058  00020C                     l1015:
  4059                           
  4060                           ;position.c: 300: if(direction){
  4061  00020C  A04F               	btfss	_direction/(0+8),_direction& (0+7),c
  4062  00020E  D002               	goto	l1023
  4063                           
  4064                           ;position.c: 301: direction = 0;
  4065  000210  904F               	bcf	_direction/(0+8),_direction& (0+7),c
  4066                           
  4067                           ;position.c: 302: }else{
  4068  000212  D001               	goto	l3160
  4069  000214                     l1023:
  4070                           
  4071                           ;position.c: 303: direction = 1;
  4072  000214  804F               	bsf	_direction/(0+8),_direction& (0+7),c
  4073  000216                     l3160:
  4074                           
  4075                           ;position.c: 304: }
  4076                           ;position.c: 305: int tmp = c_path - 1;
  4077  000216  0EFF               	movlw	255
  4078  000218  2440               	addwf	_c_path,w,c
  4079  00021A  0100               	movlb	0	; () banked
  4080  00021C  6FE0               	movwf	CheckThrottle@tmp& (0+255),b
  4081  00021E  0EFF               	movlw	255
  4082  000220  2041               	addwfc	_c_path+1,w,c
  4083  000222  0100               	movlb	0	; () banked
  4084  000224  6FE1               	movwf	(CheckThrottle@tmp+1)& (0+255),b
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;position.c: 306: for (int i = 0; i <= tmp; i++) {
  4088  000226  0E00               	movlw	0
  4089  000228  0100               	movlb	0	; () banked
  4090  00022A  6FE3               	movwf	(CheckThrottle@i+1)& (0+255),b
  4091  00022C  0E00               	movlw	0
  4092  00022E  6FE2               	movwf	CheckThrottle@i& (0+255),b
  4093  000230  D047               	goto	l1025
  4094  000232                     l3164:
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;position.c: 307: a_path_old[i].higher_cc = a_path[i].higher_cc;
  4098  000232  C0E2  F0D9         	movff	CheckThrottle@i,??_CheckThrottle
  4099  000236  C0E3  F0DA         	movff	CheckThrottle@i+1,??_CheckThrottle+1
  4100  00023A  90D8               	bcf	status,0,c
  4101  00023C  0100               	movlb	0	; () banked
  4102  00023E  37D9               	rlcf	??_CheckThrottle& (0+255),f,b
  4103  000240  37DA               	rlcf	(??_CheckThrottle+1)& (0+255),f,b
  4104  000242  0E01               	movlw	1
  4105  000244  0100               	movlb	0	; () banked
  4106  000246  27D9               	addwf	??_CheckThrottle& (0+255),f,b
  4107  000248  0E00               	movlw	0
  4108  00024A  23DA               	addwfc	(??_CheckThrottle+1)& (0+255),f,b
  4109  00024C  0EA6               	movlw	low _a_path
  4110  00024E  0100               	movlb	0	; () banked
  4111  000250  25D9               	addwf	??_CheckThrottle& (0+255),w,b
  4112  000252  6ED9               	movwf	fsr2l,c
  4113  000254  0E00               	movlw	high _a_path
  4114  000256  0100               	movlb	0	; () banked
  4115  000258  21DA               	addwfc	(??_CheckThrottle+1)& (0+255),w,b
  4116  00025A  6EDA               	movwf	fsr2h,c
  4117  00025C  C0E2  F0DB         	movff	CheckThrottle@i,??_CheckThrottle+2
  4118  000260  C0E3  F0DC         	movff	CheckThrottle@i+1,??_CheckThrottle+3
  4119  000264  90D8               	bcf	status,0,c
  4120  000266  0100               	movlb	0	; () banked
  4121  000268  37DB               	rlcf	(??_CheckThrottle+2)& (0+255),f,b
  4122  00026A  37DC               	rlcf	(??_CheckThrottle+3)& (0+255),f,b
  4123  00026C  0E01               	movlw	1
  4124  00026E  0100               	movlb	0	; () banked
  4125  000270  27DB               	addwf	(??_CheckThrottle+2)& (0+255),f,b
  4126  000272  0E00               	movlw	0
  4127  000274  23DC               	addwfc	(??_CheckThrottle+3)& (0+255),f,b
  4128  000276  0E00               	movlw	low _a_path_old
  4129  000278  0100               	movlb	0	; () banked
  4130  00027A  25DB               	addwf	(??_CheckThrottle+2)& (0+255),w,b
  4131  00027C  6EE1               	movwf	fsr1l,c
  4132  00027E  0E01               	movlw	high _a_path_old
  4133  000280  0100               	movlb	0	; () banked
  4134  000282  21DC               	addwfc	(??_CheckThrottle+3)& (0+255),w,b
  4135  000284  6EE2               	movwf	fsr1h,c
  4136  000286  CFDF FFE7          	movff	indf2,indf1
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;position.c: 308: a_path_old[i].lower_cc = a_path[i].lower_cc;
  4140  00028A  90D8               	bcf	status,0,c
  4141  00028C  0100               	movlb	0	; () banked
  4142  00028E  35E2               	rlcf	CheckThrottle@i& (0+255),w,b
  4143  000290  6ED9               	movwf	fsr2l,c
  4144  000292  0100               	movlb	0	; () banked
  4145  000294  35E3               	rlcf	(CheckThrottle@i+1)& (0+255),w,b
  4146  000296  6EDA               	movwf	fsr2h,c
  4147  000298  0EA6               	movlw	low _a_path
  4148  00029A  26D9               	addwf	fsr2l,f,c
  4149  00029C  0E00               	movlw	high _a_path
  4150  00029E  22DA               	addwfc	fsr2h,f,c
  4151  0002A0  90D8               	bcf	status,0,c
  4152  0002A2  0100               	movlb	0	; () banked
  4153  0002A4  35E2               	rlcf	CheckThrottle@i& (0+255),w,b
  4154  0002A6  6EE1               	movwf	fsr1l,c
  4155  0002A8  0100               	movlb	0	; () banked
  4156  0002AA  35E3               	rlcf	(CheckThrottle@i+1)& (0+255),w,b
  4157  0002AC  6EE2               	movwf	fsr1h,c
  4158  0002AE  0E00               	movlw	low _a_path_old
  4159  0002B0  26E1               	addwf	fsr1l,f,c
  4160  0002B2  0E01               	movlw	high _a_path_old
  4161  0002B4  22E2               	addwfc	fsr1h,f,c
  4162  0002B6  CFDF FFE7          	movff	indf2,indf1
  4163                           
  4164                           ; BSR set to: 0
  4165  0002BA  0100               	movlb	0	; () banked
  4166  0002BC  4BE2               	infsnz	CheckThrottle@i& (0+255),f,b
  4167  0002BE  2BE3               	incf	(CheckThrottle@i+1)& (0+255),f,b
  4168  0002C0                     l1025:
  4169                           
  4170                           ; BSR set to: 0
  4171  0002C0  0100               	movlb	0	; () banked
  4172  0002C2  51E2               	movf	CheckThrottle@i& (0+255),w,b
  4173  0002C4  0100               	movlb	0	; () banked
  4174  0002C6  5DE0               	subwf	CheckThrottle@tmp& (0+255),w,b
  4175  0002C8  0100               	movlb	0	; () banked
  4176  0002CA  51E1               	movf	(CheckThrottle@tmp+1)& (0+255),w,b
  4177  0002CC  0A80               	xorlw	128
  4178  0002CE  0100               	movlb	0	; () banked
  4179  0002D0  6FD9               	movwf	??_CheckThrottle& (0+255),b
  4180  0002D2  0100               	movlb	0	; () banked
  4181  0002D4  51E3               	movf	(CheckThrottle@i+1)& (0+255),w,b
  4182  0002D6  0A80               	xorlw	128
  4183  0002D8  0100               	movlb	0	; () banked
  4184  0002DA  59D9               	subwfb	??_CheckThrottle& (0+255),w,b
  4185  0002DC  B0D8               	btfsc	status,0,c
  4186  0002DE  D7A9               	goto	l3164
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;position.c: 309: }
  4190                           ;position.c: 310: for (int i = 0; i <= tmp; i++) {
  4191                           
  4192                           ; BSR set to: 0
  4193  0002E0  0E00               	movlw	0
  4194  0002E2  0100               	movlb	0	; () banked
  4195  0002E4  6FE5               	movwf	(CheckThrottle@i_1680+1)& (0+255),b
  4196  0002E6  0E00               	movlw	0
  4197  0002E8  6FE4               	movwf	CheckThrottle@i_1680& (0+255),b
  4198  0002EA  D066               	goto	l3176
  4199  0002EC                     l3172:
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;position.c: 311: a_path[(tmp - i)].higher_cc = a_path_old[i].higher_cc;
  4203  0002EC  C0E4  F0D9         	movff	CheckThrottle@i_1680,??_CheckThrottle
  4204  0002F0  C0E5  F0DA         	movff	CheckThrottle@i_1680+1,??_CheckThrottle+1
  4205  0002F4  90D8               	bcf	status,0,c
  4206  0002F6  0100               	movlb	0	; () banked
  4207  0002F8  37D9               	rlcf	??_CheckThrottle& (0+255),f,b
  4208  0002FA  37DA               	rlcf	(??_CheckThrottle+1)& (0+255),f,b
  4209  0002FC  0E01               	movlw	1
  4210  0002FE  0100               	movlb	0	; () banked
  4211  000300  27D9               	addwf	??_CheckThrottle& (0+255),f,b
  4212  000302  0E00               	movlw	0
  4213  000304  23DA               	addwfc	(??_CheckThrottle+1)& (0+255),f,b
  4214  000306  0E00               	movlw	low _a_path_old
  4215  000308  0100               	movlb	0	; () banked
  4216  00030A  25D9               	addwf	??_CheckThrottle& (0+255),w,b
  4217  00030C  6ED9               	movwf	fsr2l,c
  4218  00030E  0E01               	movlw	high _a_path_old
  4219  000310  0100               	movlb	0	; () banked
  4220  000312  21DA               	addwfc	(??_CheckThrottle+1)& (0+255),w,b
  4221  000314  6EDA               	movwf	fsr2h,c
  4222  000316  C0E4  F0DB         	movff	CheckThrottle@i_1680,??_CheckThrottle+2
  4223  00031A  C0E5  F0DC         	movff	CheckThrottle@i_1680+1,??_CheckThrottle+3
  4224  00031E  0100               	movlb	0	; () banked
  4225  000320  1FDB               	comf	(??_CheckThrottle+2)& (0+255),f,b
  4226  000322  1FDC               	comf	(??_CheckThrottle+3)& (0+255),f,b
  4227  000324  4BDB               	infsnz	(??_CheckThrottle+2)& (0+255),f,b
  4228  000326  2BDC               	incf	(??_CheckThrottle+3)& (0+255),f,b
  4229  000328  0100               	movlb	0	; () banked
  4230  00032A  51E0               	movf	CheckThrottle@tmp& (0+255),w,b
  4231  00032C  0100               	movlb	0	; () banked
  4232  00032E  27DB               	addwf	(??_CheckThrottle+2)& (0+255),f,b
  4233  000330  0100               	movlb	0	; () banked
  4234  000332  51E1               	movf	(CheckThrottle@tmp+1)& (0+255),w,b
  4235  000334  0100               	movlb	0	; () banked
  4236  000336  23DC               	addwfc	(??_CheckThrottle+3)& (0+255),f,b
  4237  000338  90D8               	bcf	status,0,c
  4238  00033A  0100               	movlb	0	; () banked
  4239  00033C  37DB               	rlcf	(??_CheckThrottle+2)& (0+255),f,b
  4240  00033E  37DC               	rlcf	(??_CheckThrottle+3)& (0+255),f,b
  4241  000340  0E01               	movlw	1
  4242  000342  0100               	movlb	0	; () banked
  4243  000344  27DB               	addwf	(??_CheckThrottle+2)& (0+255),f,b
  4244  000346  0E00               	movlw	0
  4245  000348  23DC               	addwfc	(??_CheckThrottle+3)& (0+255),f,b
  4246  00034A  0EA6               	movlw	low _a_path
  4247  00034C  0100               	movlb	0	; () banked
  4248  00034E  25DB               	addwf	(??_CheckThrottle+2)& (0+255),w,b
  4249  000350  6EE1               	movwf	fsr1l,c
  4250  000352  0E00               	movlw	high _a_path
  4251  000354  0100               	movlb	0	; () banked
  4252  000356  21DC               	addwfc	(??_CheckThrottle+3)& (0+255),w,b
  4253  000358  6EE2               	movwf	fsr1h,c
  4254  00035A  CFDF FFE7          	movff	indf2,indf1
  4255                           
  4256                           ;position.c: 312: a_path[(tmp - i)].lower_cc = a_path_old[i].lower_cc;
  4257  00035E  90D8               	bcf	status,0,c
  4258  000360  0100               	movlb	0	; () banked
  4259  000362  35E4               	rlcf	CheckThrottle@i_1680& (0+255),w,b
  4260  000364  6ED9               	movwf	fsr2l,c
  4261  000366  0100               	movlb	0	; () banked
  4262  000368  35E5               	rlcf	(CheckThrottle@i_1680+1)& (0+255),w,b
  4263  00036A  6EDA               	movwf	fsr2h,c
  4264  00036C  0E00               	movlw	low _a_path_old
  4265  00036E  26D9               	addwf	fsr2l,f,c
  4266  000370  0E01               	movlw	high _a_path_old
  4267  000372  22DA               	addwfc	fsr2h,f,c
  4268  000374  C0E4  F0D9         	movff	CheckThrottle@i_1680,??_CheckThrottle
  4269  000378  C0E5  F0DA         	movff	CheckThrottle@i_1680+1,??_CheckThrottle+1
  4270  00037C  0100               	movlb	0	; () banked
  4271  00037E  1FD9               	comf	??_CheckThrottle& (0+255),f,b
  4272  000380  1FDA               	comf	(??_CheckThrottle+1)& (0+255),f,b
  4273  000382  4BD9               	infsnz	??_CheckThrottle& (0+255),f,b
  4274  000384  2BDA               	incf	(??_CheckThrottle+1)& (0+255),f,b
  4275  000386  0100               	movlb	0	; () banked
  4276  000388  51E0               	movf	CheckThrottle@tmp& (0+255),w,b
  4277  00038A  0100               	movlb	0	; () banked
  4278  00038C  27D9               	addwf	??_CheckThrottle& (0+255),f,b
  4279  00038E  0100               	movlb	0	; () banked
  4280  000390  51E1               	movf	(CheckThrottle@tmp+1)& (0+255),w,b
  4281  000392  0100               	movlb	0	; () banked
  4282  000394  23DA               	addwfc	(??_CheckThrottle+1)& (0+255),f,b
  4283  000396  90D8               	bcf	status,0,c
  4284  000398  0100               	movlb	0	; () banked
  4285  00039A  37D9               	rlcf	??_CheckThrottle& (0+255),f,b
  4286  00039C  37DA               	rlcf	(??_CheckThrottle+1)& (0+255),f,b
  4287  00039E  0EA6               	movlw	low _a_path
  4288  0003A0  0100               	movlb	0	; () banked
  4289  0003A2  25D9               	addwf	??_CheckThrottle& (0+255),w,b
  4290  0003A4  6EE1               	movwf	fsr1l,c
  4291  0003A6  0E00               	movlw	high _a_path
  4292  0003A8  0100               	movlb	0	; () banked
  4293  0003AA  21DA               	addwfc	(??_CheckThrottle+1)& (0+255),w,b
  4294  0003AC  6EE2               	movwf	fsr1h,c
  4295  0003AE  CFDF FFE7          	movff	indf2,indf1
  4296                           
  4297                           ; BSR set to: 0
  4298  0003B2  0100               	movlb	0	; () banked
  4299  0003B4  4BE4               	infsnz	CheckThrottle@i_1680& (0+255),f,b
  4300  0003B6  2BE5               	incf	(CheckThrottle@i_1680+1)& (0+255),f,b
  4301  0003B8                     l3176:
  4302                           
  4303                           ; BSR set to: 0
  4304  0003B8  0100               	movlb	0	; () banked
  4305  0003BA  51E4               	movf	CheckThrottle@i_1680& (0+255),w,b
  4306  0003BC  0100               	movlb	0	; () banked
  4307  0003BE  5DE0               	subwf	CheckThrottle@tmp& (0+255),w,b
  4308  0003C0  0100               	movlb	0	; () banked
  4309  0003C2  51E1               	movf	(CheckThrottle@tmp+1)& (0+255),w,b
  4310  0003C4  0A80               	xorlw	128
  4311  0003C6  0100               	movlb	0	; () banked
  4312  0003C8  6FD9               	movwf	??_CheckThrottle& (0+255),b
  4313  0003CA  0100               	movlb	0	; () banked
  4314  0003CC  51E5               	movf	(CheckThrottle@i_1680+1)& (0+255),w,b
  4315  0003CE  0A80               	xorlw	128
  4316  0003D0  0100               	movlb	0	; () banked
  4317  0003D2  59D9               	subwfb	??_CheckThrottle& (0+255),w,b
  4318  0003D4  B0D8               	btfsc	status,0,c
  4319  0003D6  D78A               	goto	l3172
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;position.c: 313: }
  4323                           ;position.c: 315: for (int i = 0; i <= 10000; i++) {
  4324                           
  4325                           ; BSR set to: 0
  4326  0003D8  0E00               	movlw	0
  4327  0003DA  0100               	movlb	0	; () banked
  4328  0003DC  6FDF               	movwf	(CheckThrottle@i_1681+1)& (0+255),b
  4329  0003DE  0E00               	movlw	0
  4330  0003E0  6FDE               	movwf	CheckThrottle@i_1681& (0+255),b
  4331  0003E2                     l3180:
  4332                           
  4333                           ; BSR set to: 0
  4334  0003E2  0100               	movlb	0	; () banked
  4335  0003E4  BFDF               	btfsc	(CheckThrottle@i_1681+1)& (0+255),7,b
  4336  0003E6  D008               	goto	l3184
  4337  0003E8  0E11               	movlw	17
  4338  0003EA  0100               	movlb	0	; () banked
  4339  0003EC  5DDE               	subwf	CheckThrottle@i_1681& (0+255),w,b
  4340  0003EE  0E27               	movlw	39
  4341  0003F0  0100               	movlb	0	; () banked
  4342  0003F2  59DF               	subwfb	(CheckThrottle@i_1681+1)& (0+255),w,b
  4343  0003F4  B0D8               	btfsc	status,0,c
  4344  0003F6  0012               	return	
  4345  0003F8                     l3184:
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;position.c: 316: _delay((unsigned long)((3)*(64000000/4000.0)));
  4349  0003F8  0E3F               	movlw	63
  4350  0003FA  0100               	movlb	0	; () banked
  4351  0003FC  6FD9               	movwf	??_CheckThrottle& (0+255),b
  4352  0003FE  0E55               	movlw	85
  4353  000400                     u2607:
  4354  000400  2EE8               	decfsz	wreg,f,c
  4355  000402  D7FE               	goto	u2607
  4356  000404  2FD9               	decfsz	??_CheckThrottle& (0+255),f,b
  4357  000406  D7FC               	goto	u2607
  4358  000408  F000               	nop	
  4359  00040A  0100               	movlb	0	; () banked
  4360  00040C  4BDE               	infsnz	CheckThrottle@i_1681& (0+255),f,b
  4361  00040E  2BDF               	incf	(CheckThrottle@i_1681+1)& (0+255),f,b
  4362  000410  D7E8               	goto	l3180
  4363  000412                     __end_of_CheckThrottle:
  4364                           	opt stack 0
  4365                           tblptru	equ	0xFF8
  4366                           tblptrh	equ	0xFF7
  4367                           tblptrl	equ	0xFF6
  4368                           tablat	equ	0xFF5
  4369                           prodh	equ	0xFF4
  4370                           prodl	equ	0xFF3
  4371                           intcon	equ	0xFF2
  4372                           postinc0	equ	0xFEE
  4373                           wreg	equ	0xFE8
  4374                           indf1	equ	0xFE7
  4375                           postdec1	equ	0xFE5
  4376                           fsr1h	equ	0xFE2
  4377                           fsr1l	equ	0xFE1
  4378                           indf2	equ	0xFDF
  4379                           postinc2	equ	0xFDE
  4380                           postdec2	equ	0xFDD
  4381                           fsr2h	equ	0xFDA
  4382                           fsr2l	equ	0xFD9
  4383                           status	equ	0xFD8
  4384                           
  4385 ;; *************** function _BeneathTable *****************
  4386 ;; Defined at:
  4387 ;;		line 196 in file "position.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;		None
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;		None
  4392 ;; Return value:  Size  Location     Type
  4393 ;;		None               void
  4394 ;; Registers used:
  4395 ;;		wreg, status,2, status,0, cstack
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4405 ;;Total ram usage:        0 bytes
  4406 ;; Hardware stack levels used:    1
  4407 ;; Hardware stack levels required when called:    4
  4408 ;; This function calls:
  4409 ;;		_ActThrottle
  4410 ;; This function is called by:
  4411 ;;		_CheckThrottle
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           	psect	text27
  4416  000D30                     __ptext27:
  4417                           	opt stack 0
  4418  000D30                     _BeneathTable:
  4419                           	opt stack 25
  4420                           
  4421                           ;position.c: 197: if (a_frame[0].height <= cm120 && a_frame[0].height >= cm80) {
  4422                           
  4423                           ;incstack = 0
  4424  000D30  5007               	movf	_a_frame+6,w,c
  4425  000D32  5C44               	subwf	_cm120,w,c
  4426  000D34  5008               	movf	_a_frame+7,w,c
  4427  000D36  5845               	subwfb	_cm120+1,w,c
  4428  000D38  A0D8               	btfss	status,0,c
  4429  000D3A  D00A               	goto	l2960
  4430  000D3C  504C               	movf	_cm80,w,c
  4431  000D3E  5C07               	subwf	_a_frame+6,w,c
  4432  000D40  504D               	movf	_cm80+1,w,c
  4433  000D42  5808               	subwfb	_a_frame+7,w,c
  4434  000D44  A0D8               	btfss	status,0,c
  4435  000D46  D004               	goto	l2960
  4436                           
  4437                           ;position.c: 198: ActThrottle(0);
  4438  000D48  0E00               	movlw	0
  4439  000D4A  ECC2  F007         	call	_ActThrottle
  4440                           
  4441                           ;position.c: 199: } else if (a_frame[0].height < cm80) {
  4442  000D4E  0012               	return	
  4443  000D50                     l2960:
  4444  000D50  504C               	movf	_cm80,w,c
  4445  000D52  5C07               	subwf	_a_frame+6,w,c
  4446  000D54  504D               	movf	_cm80+1,w,c
  4447  000D56  5808               	subwfb	_a_frame+7,w,c
  4448  000D58  B0D8               	btfsc	status,0,c
  4449  000D5A  D00E               	goto	l2968
  4450                           
  4451                           ;position.c: 200: if (a_frame[0].height < cm50) {
  4452  000D5C  504A               	movf	_cm50,w,c
  4453  000D5E  5C07               	subwf	_a_frame+6,w,c
  4454  000D60  504B               	movf	_cm50+1,w,c
  4455  000D62  5808               	subwfb	_a_frame+7,w,c
  4456  000D64  B0D8               	btfsc	status,0,c
  4457  000D66  D004               	goto	l2966
  4458                           
  4459                           ;position.c: 201: ActThrottle(6);
  4460  000D68  0E06               	movlw	6
  4461  000D6A  ECC2  F007         	call	_ActThrottle
  4462                           
  4463                           ;position.c: 202: } else {
  4464  000D6E  0012               	return	
  4465  000D70                     l2966:
  4466                           
  4467                           ;position.c: 203: ActThrottle(3);
  4468  000D70  0E03               	movlw	3
  4469  000D72  ECC2  F007         	call	_ActThrottle
  4470                           
  4471                           ;position.c: 204: }
  4472                           ;position.c: 205: } else {
  4473  000D76  0012               	return	
  4474  000D78                     l2968:
  4475                           
  4476                           ;position.c: 206: ActThrottle(-3);
  4477  000D78  0EFD               	movlw	253
  4478  000D7A  ECC2  F007         	call	_ActThrottle
  4479  000D7E  0012               	return	
  4480  000D80                     __end_of_BeneathTable:
  4481                           	opt stack 0
  4482                           tblptru	equ	0xFF8
  4483                           tblptrh	equ	0xFF7
  4484                           tblptrl	equ	0xFF6
  4485                           tablat	equ	0xFF5
  4486                           prodh	equ	0xFF4
  4487                           prodl	equ	0xFF3
  4488                           intcon	equ	0xFF2
  4489                           postinc0	equ	0xFEE
  4490                           wreg	equ	0xFE8
  4491                           indf1	equ	0xFE7
  4492                           postdec1	equ	0xFE5
  4493                           fsr1h	equ	0xFE2
  4494                           fsr1l	equ	0xFE1
  4495                           indf2	equ	0xFDF
  4496                           postinc2	equ	0xFDE
  4497                           postdec2	equ	0xFDD
  4498                           fsr2h	equ	0xFDA
  4499                           fsr2l	equ	0xFD9
  4500                           status	equ	0xFD8
  4501                           
  4502 ;; *************** function _BeneathFloor *****************
  4503 ;; Defined at:
  4504 ;;		line 216 in file "position.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;		None
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;		None
  4509 ;; Return value:  Size  Location     Type
  4510 ;;		None               void
  4511 ;; Registers used:
  4512 ;;		wreg, status,2, status,0, cstack
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/0
  4515 ;;		On exit  : 0/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4522 ;;Total ram usage:        0 bytes
  4523 ;; Hardware stack levels used:    1
  4524 ;; Hardware stack levels required when called:    4
  4525 ;; This function calls:
  4526 ;;		_ActThrottle
  4527 ;; This function is called by:
  4528 ;;		_CheckThrottle
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532                           	psect	text28
  4533  000D80                     __ptext28:
  4534                           	opt stack 0
  4535  000D80                     _BeneathFloor:
  4536                           	opt stack 25
  4537                           
  4538                           ;position.c: 217: if (a_frame[0].height <= cm220 && a_frame[0].height >= cm180) {
  4539                           
  4540                           ;incstack = 0
  4541  000D80  5007               	movf	_a_frame+6,w,c
  4542  000D82  5C48               	subwf	_cm220,w,c
  4543  000D84  5008               	movf	_a_frame+7,w,c
  4544  000D86  5849               	subwfb	_cm220+1,w,c
  4545  000D88  A0D8               	btfss	status,0,c
  4546  000D8A  D00A               	goto	l2976
  4547  000D8C  5046               	movf	_cm180,w,c
  4548  000D8E  5C07               	subwf	_a_frame+6,w,c
  4549  000D90  5047               	movf	_cm180+1,w,c
  4550  000D92  5808               	subwfb	_a_frame+7,w,c
  4551  000D94  A0D8               	btfss	status,0,c
  4552  000D96  D004               	goto	l2976
  4553                           
  4554                           ;position.c: 218: ActThrottle(0);
  4555  000D98  0E00               	movlw	0
  4556  000D9A  ECC2  F007         	call	_ActThrottle
  4557                           
  4558                           ;position.c: 219: } else if (a_frame[0].height < cm180) {
  4559  000D9E  0012               	return	
  4560  000DA0                     l2976:
  4561  000DA0  5046               	movf	_cm180,w,c
  4562  000DA2  5C07               	subwf	_a_frame+6,w,c
  4563  000DA4  5047               	movf	_cm180+1,w,c
  4564  000DA6  5808               	subwfb	_a_frame+7,w,c
  4565  000DA8  B0D8               	btfsc	status,0,c
  4566  000DAA  D00E               	goto	l2984
  4567                           
  4568                           ;position.c: 220: if (a_frame[0].height < cm100) {
  4569  000DAC  5042               	movf	_cm100,w,c
  4570  000DAE  5C07               	subwf	_a_frame+6,w,c
  4571  000DB0  5043               	movf	_cm100+1,w,c
  4572  000DB2  5808               	subwfb	_a_frame+7,w,c
  4573  000DB4  B0D8               	btfsc	status,0,c
  4574  000DB6  D004               	goto	l2982
  4575                           
  4576                           ;position.c: 221: ActThrottle(6);
  4577  000DB8  0E06               	movlw	6
  4578  000DBA  ECC2  F007         	call	_ActThrottle
  4579                           
  4580                           ;position.c: 222: } else {
  4581  000DBE  0012               	return	
  4582  000DC0                     l2982:
  4583                           
  4584                           ;position.c: 223: ActThrottle(3);
  4585  000DC0  0E03               	movlw	3
  4586  000DC2  ECC2  F007         	call	_ActThrottle
  4587                           
  4588                           ;position.c: 224: }
  4589                           ;position.c: 225: } else {
  4590  000DC6  0012               	return	
  4591  000DC8                     l2984:
  4592                           
  4593                           ;position.c: 226: ActThrottle(-3);
  4594  000DC8  0EFD               	movlw	253
  4595  000DCA  ECC2  F007         	call	_ActThrottle
  4596  000DCE  0012               	return	
  4597  000DD0                     __end_of_BeneathFloor:
  4598                           	opt stack 0
  4599                           tblptru	equ	0xFF8
  4600                           tblptrh	equ	0xFF7
  4601                           tblptrl	equ	0xFF6
  4602                           tablat	equ	0xFF5
  4603                           prodh	equ	0xFF4
  4604                           prodl	equ	0xFF3
  4605                           intcon	equ	0xFF2
  4606                           postinc0	equ	0xFEE
  4607                           wreg	equ	0xFE8
  4608                           indf1	equ	0xFE7
  4609                           postdec1	equ	0xFE5
  4610                           fsr1h	equ	0xFE2
  4611                           fsr1l	equ	0xFE1
  4612                           indf2	equ	0xFDF
  4613                           postinc2	equ	0xFDE
  4614                           postdec2	equ	0xFDD
  4615                           fsr2h	equ	0xFDA
  4616                           fsr2l	equ	0xFD9
  4617                           status	equ	0xFD8
  4618                           
  4619 ;; *************** function _ActThrottle *****************
  4620 ;; Defined at:
  4621 ;;		line 89 in file "actors.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;  change          1    wreg     unsigned char 
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;  change          1    0[BANK0 ] unsigned char 
  4626 ;; Return value:  Size  Location     Type
  4627 ;;		None               void
  4628 ;; Registers used:
  4629 ;;		wreg, status,2, status,0
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4636 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4638 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4639 ;;Total ram usage:        1 bytes
  4640 ;; Hardware stack levels used:    1
  4641 ;; Hardware stack levels required when called:    3
  4642 ;; This function calls:
  4643 ;;		Nothing
  4644 ;; This function is called by:
  4645 ;;		_BeneathTable
  4646 ;;		_BeneathFloor
  4647 ;;		_CheckThrottle
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651                           	psect	text29
  4652  000F84                     __ptext29:
  4653                           	opt stack 0
  4654  000F84                     _ActThrottle:
  4655                           	opt stack 25
  4656                           
  4657                           ;incstack = 0
  4658                           ;ActThrottle@change stored from wreg
  4659  000F84  0100               	movlb	0	; () banked
  4660  000F86  6FD8               	movwf	ActThrottle@change& (0+255),b
  4661                           
  4662                           ;actors.c: 90: a_actors[0].thro += change;
  4663  000F88  0100               	movlb	0	; () banked
  4664  000F8A  51D8               	movf	ActThrottle@change& (0+255),w,b
  4665  000F8C  0100               	movlb	0	; () banked
  4666  000F8E  27D4               	addwf	(_a_actors+4)& (0+255),f,b
  4667  000F90  0E00               	movlw	0
  4668  000F92  23D5               	addwfc	(_a_actors+5)& (0+255),f,b
  4669                           
  4670                           ; BSR set to: 0
  4671  000F94  0012               	return		;funcret
  4672  000F96                     __end_of_ActThrottle:
  4673                           	opt stack 0
  4674                           tblptru	equ	0xFF8
  4675                           tblptrh	equ	0xFF7
  4676                           tblptrl	equ	0xFF6
  4677                           tablat	equ	0xFF5
  4678                           prodh	equ	0xFF4
  4679                           prodl	equ	0xFF3
  4680                           intcon	equ	0xFF2
  4681                           postinc0	equ	0xFEE
  4682                           wreg	equ	0xFE8
  4683                           indf1	equ	0xFE7
  4684                           postdec1	equ	0xFE5
  4685                           fsr1h	equ	0xFE2
  4686                           fsr1l	equ	0xFE1
  4687                           indf2	equ	0xFDF
  4688                           postinc2	equ	0xFDE
  4689                           postdec2	equ	0xFDD
  4690                           fsr2h	equ	0xFDA
  4691                           fsr2l	equ	0xFD9
  4692                           status	equ	0xFD8
  4693                           
  4694 ;; *************** function _Isr *****************
  4695 ;; Defined at:
  4696 ;;		line 30 in file "interrupt.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;		None
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;		None
  4701 ;; Return value:  Size  Location     Type
  4702 ;;		None               void
  4703 ;; Registers used:
  4704 ;;		wreg, status,2, status,0, cstack
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4712 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4713 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4714 ;;Total ram usage:       14 bytes
  4715 ;; Hardware stack levels used:    1
  4716 ;; Hardware stack levels required when called:    2
  4717 ;; This function calls:
  4718 ;;		_SignalOut
  4719 ;;		i2_ModeCheck
  4720 ;; This function is called by:
  4721 ;;		Interrupt level 2
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           	psect	intcode
  4726  000008                     __pintcode:
  4727                           	opt stack 0
  4728  000008                     _Isr:
  4729                           	opt stack 25
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;incstack = 0
  4733  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4734  00000A  CFFA F032          	movff	pclath,??_Isr
  4735  00000E  CFFB F033          	movff	pclatu,??_Isr+1
  4736  000012  CFE9 F034          	movff	fsr0l,??_Isr+2
  4737  000016  CFEA F035          	movff	fsr0h,??_Isr+3
  4738  00001A  CFE1 F036          	movff	fsr1l,??_Isr+4
  4739  00001E  CFE2 F037          	movff	fsr1h,??_Isr+5
  4740  000022  CFD9 F038          	movff	fsr2l,??_Isr+6
  4741  000026  CFDA F039          	movff	fsr2h,??_Isr+7
  4742  00002A  CFF3 F03A          	movff	prodl,??_Isr+8
  4743  00002E  CFF4 F03B          	movff	prodh,??_Isr+9
  4744  000032  CFF6 F03C          	movff	tblptrl,??_Isr+10
  4745  000036  CFF7 F03D          	movff	tblptrh,??_Isr+11
  4746  00003A  CFF8 F03E          	movff	tblptru,??_Isr+12
  4747  00003E  CFF5 F03F          	movff	tablat,??_Isr+13
  4748                           
  4749                           ;interrupt.c: 31: if(CCP1IF == 1) {
  4750  000042  A49E               	btfss	3998,2,c	;volatile
  4751  000044  D004               	goto	i2l2702
  4752                           
  4753                           ;interrupt.c: 32: CCP1IF = 0;
  4754  000046  949E               	bcf	3998,2,c	;volatile
  4755                           
  4756                           ;interrupt.c: 33: T1CONbits.TMR1ON = 0;
  4757  000048  90CD               	bcf	4045,0,c	;volatile
  4758                           
  4759                           ;interrupt.c: 34: SignalOut();
  4760  00004A  ECA5  F005         	call	_SignalOut	;wreg free
  4761  00004E                     i2l2702:
  4762                           
  4763                           ;interrupt.c: 35: }
  4764                           ;interrupt.c: 36: if(TMR3GIF == 1) {
  4765  00004E  A2A4               	btfss	4004,1,c	;volatile
  4766  000050  D013               	goto	i2l474
  4767                           
  4768                           ;interrupt.c: 37: TMR3GIF = 0;
  4769  000052  92A4               	bcf	4004,1,c	;volatile
  4770                           
  4771                           ;interrupt.c: 38: time_gear = TMR3H;
  4772  000054  CFB3 F029          	movff	4019,_time_gear	;volatile
  4773  000058  6A2A               	clrf	_time_gear+1,c
  4774                           
  4775                           ;interrupt.c: 39: time_gear <<= 8;
  4776  00005A  5029               	movf	_time_gear,w,c
  4777  00005C  6E2A               	movwf	_time_gear+1,c
  4778  00005E  6A29               	clrf	_time_gear,c
  4779                           
  4780                           ;interrupt.c: 40: time_gear = TMR3L;
  4781  000060  CFB2 F029          	movff	4018,_time_gear	;volatile
  4782  000064  6A2A               	clrf	_time_gear+1,c
  4783                           
  4784                           ;interrupt.c: 41: TMR3H = 0;
  4785  000066  0E00               	movlw	0
  4786  000068  6EB3               	movwf	4019,c	;volatile
  4787                           
  4788                           ;interrupt.c: 42: TMR3L = 0;
  4789  00006A  0E00               	movlw	0
  4790  00006C  6EB2               	movwf	4018,c	;volatile
  4791                           
  4792                           ;interrupt.c: 43: ModeCheck();
  4793  00006E  EC6C  F007         	call	i2_ModeCheck	;wreg free
  4794                           
  4795                           ;interrupt.c: 44: SignalOut();
  4796  000072  ECA5  F005         	call	_SignalOut	;wreg free
  4797                           
  4798                           ;interrupt.c: 48: pulsecounter++;
  4799  000076  2A2F               	incf	_pulsecounter,f,c
  4800  000078                     i2l474:
  4801  000078  C03F  FFF5         	movff	??_Isr+13,tablat
  4802  00007C  C03E  FFF8         	movff	??_Isr+12,tblptru
  4803  000080  C03D  FFF7         	movff	??_Isr+11,tblptrh
  4804  000084  C03C  FFF6         	movff	??_Isr+10,tblptrl
  4805  000088  C03B  FFF4         	movff	??_Isr+9,prodh
  4806  00008C  C03A  FFF3         	movff	??_Isr+8,prodl
  4807  000090  C039  FFDA         	movff	??_Isr+7,fsr2h
  4808  000094  C038  FFD9         	movff	??_Isr+6,fsr2l
  4809  000098  C037  FFE2         	movff	??_Isr+5,fsr1h
  4810  00009C  C036  FFE1         	movff	??_Isr+4,fsr1l
  4811  0000A0  C035  FFEA         	movff	??_Isr+3,fsr0h
  4812  0000A4  C034  FFE9         	movff	??_Isr+2,fsr0l
  4813  0000A8  C033  FFFB         	movff	??_Isr+1,pclatu
  4814  0000AC  C032  FFFA         	movff	??_Isr,pclath
  4815  0000B0  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4816  0000B2  0011               	retfie		f
  4817  0000B4                     __end_of_Isr:
  4818                           	opt stack 0
  4819                           pclatu	equ	0xFFB
  4820                           pclath	equ	0xFFA
  4821                           tblptru	equ	0xFF8
  4822                           tblptrh	equ	0xFF7
  4823                           tblptrl	equ	0xFF6
  4824                           tablat	equ	0xFF5
  4825                           prodh	equ	0xFF4
  4826                           prodl	equ	0xFF3
  4827                           intcon	equ	0xFF2
  4828                           postinc0	equ	0xFEE
  4829                           fsr0h	equ	0xFEA
  4830                           fsr0l	equ	0xFE9
  4831                           wreg	equ	0xFE8
  4832                           indf1	equ	0xFE7
  4833                           postdec1	equ	0xFE5
  4834                           fsr1h	equ	0xFE2
  4835                           fsr1l	equ	0xFE1
  4836                           indf2	equ	0xFDF
  4837                           postinc2	equ	0xFDE
  4838                           postdec2	equ	0xFDD
  4839                           fsr2h	equ	0xFDA
  4840                           fsr2l	equ	0xFD9
  4841                           status	equ	0xFD8
  4842                           
  4843 ;; *************** function i2_ModeCheck *****************
  4844 ;; Defined at:
  4845 ;;		line 30 in file "gear.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;		None
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;		None
  4850 ;; Return value:  Size  Location     Type
  4851 ;;		None               void
  4852 ;; Registers used:
  4853 ;;		wreg, status,2, status,0
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4863 ;;Total ram usage:        0 bytes
  4864 ;; Hardware stack levels used:    1
  4865 ;; This function calls:
  4866 ;;		Nothing
  4867 ;; This function is called by:
  4868 ;;		_Isr
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           	psect	text31
  4873  000ED8                     __ptext31:
  4874                           	opt stack 0
  4875  000ED8                     i2_ModeCheck:
  4876                           	opt stack 26
  4877                           
  4878                           ;gear.c: 31: if(time_gear < 6800){
  4879                           
  4880                           ;incstack = 0
  4881  000ED8  0E90               	movlw	144
  4882  000EDA  5C29               	subwf	_time_gear,w,c
  4883  000EDC  0E1A               	movlw	26
  4884  000EDE  582A               	subwfb	_time_gear+1,w,c
  4885  000EE0  B0D8               	btfsc	status,0,c
  4886  000EE2  D004               	goto	i2l2202
  4887                           
  4888                           ;gear.c: 33: PORTBbits.RB2 = 0;
  4889  000EE4  9481               	bcf	3969,2,c	;volatile
  4890                           
  4891                           ;gear.c: 34: PORTAbits.RA5 = 1;
  4892  000EE6  8A80               	bsf	3968,5,c	;volatile
  4893                           
  4894                           ;gear.c: 35: set_ret = 0;
  4895  000EE8  984F               	bcf	_set_ret/(0+8),_set_ret& (0+7),c
  4896                           
  4897                           ;gear.c: 36: }else if(time_gear >= 6800) {
  4898  000EEA  D009               	goto	i2l228
  4899  000EEC                     i2l2202:
  4900  000EEC  0E90               	movlw	144
  4901  000EEE  5C29               	subwf	_time_gear,w,c
  4902  000EF0  0E1A               	movlw	26
  4903  000EF2  582A               	subwfb	_time_gear+1,w,c
  4904  000EF4  A0D8               	btfss	status,0,c
  4905  000EF6  D003               	goto	i2l228
  4906                           
  4907                           ;gear.c: 37: PORTBbits.RB2 = 1;
  4908  000EF8  8481               	bsf	3969,2,c	;volatile
  4909                           
  4910                           ;gear.c: 38: PORTAbits.RA5 = 0;
  4911  000EFA  9A80               	bcf	3968,5,c	;volatile
  4912                           
  4913                           ;gear.c: 39: set_ret = 1;
  4914  000EFC  884F               	bsf	_set_ret/(0+8),_set_ret& (0+7),c
  4915  000EFE                     i2l228:
  4916                           
  4917                           ;gear.c: 40: }
  4918                           ;gear.c: 41: __nop();
  4919  000EFE  F000               	nop	
  4920                           
  4921                           ;gear.c: 42: return set_ret;
  4922                           ;	Return value of i2_ModeCheck is never used
  4923  000F00  0012               	return		;funcret
  4924  000F02                     __end_ofi2_ModeCheck:
  4925                           	opt stack 0
  4926                           pclatu	equ	0xFFB
  4927                           pclath	equ	0xFFA
  4928                           tblptru	equ	0xFF8
  4929                           tblptrh	equ	0xFF7
  4930                           tblptrl	equ	0xFF6
  4931                           tablat	equ	0xFF5
  4932                           prodh	equ	0xFF4
  4933                           prodl	equ	0xFF3
  4934                           intcon	equ	0xFF2
  4935                           postinc0	equ	0xFEE
  4936                           fsr0h	equ	0xFEA
  4937                           fsr0l	equ	0xFE9
  4938                           wreg	equ	0xFE8
  4939                           indf1	equ	0xFE7
  4940                           postdec1	equ	0xFE5
  4941                           fsr1h	equ	0xFE2
  4942                           fsr1l	equ	0xFE1
  4943                           indf2	equ	0xFDF
  4944                           postinc2	equ	0xFDE
  4945                           postdec2	equ	0xFDD
  4946                           fsr2h	equ	0xFDA
  4947                           fsr2l	equ	0xFD9
  4948                           status	equ	0xFD8
  4949                           
  4950 ;; *************** function _SignalOut *****************
  4951 ;; Defined at:
  4952 ;;		line 32 in file "actors.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;		None
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;		None
  4957 ;; Return value:  Size  Location     Type
  4958 ;;		None               void
  4959 ;; Registers used:
  4960 ;;		wreg, status,2, status,0, cstack
  4961 ;; Tracked objects:
  4962 ;;		On entry : 0/0
  4963 ;;		On exit  : 0/0
  4964 ;;		Unchanged: 0/0
  4965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4970 ;;Total ram usage:        0 bytes
  4971 ;; Hardware stack levels used:    1
  4972 ;; Hardware stack levels required when called:    1
  4973 ;; This function calls:
  4974 ;;		_Delay
  4975 ;; This function is called by:
  4976 ;;		_Isr
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text32
  4981  000B4A                     __ptext32:
  4982                           	opt stack 0
  4983  000B4A                     _SignalOut:
  4984                           	opt stack 25
  4985                           
  4986                           ;actors.c: 33: switch(pin_out) {
  4987                           
  4988                           ;incstack = 0
  4989  000B4A  D02F               	goto	i2l2522
  4990  000B4C                     i2l77:
  4991                           
  4992                           ;actors.c: 35: PORTAbits.RA0 = 1;
  4993  000B4C  8080               	bsf	3968,0,c	;volatile
  4994                           
  4995                           ;actors.c: 36: Delay(a_actors[0].aile);
  4996  000B4E  C0D0  F030         	movff	_a_actors,Delay@del
  4997  000B52  C0D1  F031         	movff	_a_actors+1,Delay@del+1
  4998  000B56  EC02  F007         	call	_Delay	;wreg free
  4999                           
  5000                           ;actors.c: 37: pin_out = 'E';
  5001  000B5A  0E45               	movlw	69
  5002  000B5C  6E4E               	movwf	_pin_out,c
  5003                           
  5004                           ;actors.c: 38: break;
  5005  000B5E  0012               	return	
  5006  000B60                     i2l79:
  5007                           
  5008                           ;actors.c: 40: PORTAbits.RA0 = 0;
  5009  000B60  9080               	bcf	3968,0,c	;volatile
  5010                           
  5011                           ;actors.c: 41: PORTAbits.RA1 = 1;
  5012  000B62  8280               	bsf	3968,1,c	;volatile
  5013                           
  5014                           ;actors.c: 42: Delay(a_actors[0].elev);
  5015  000B64  C0D2  F030         	movff	_a_actors+2,Delay@del
  5016  000B68  C0D3  F031         	movff	_a_actors+3,Delay@del+1
  5017  000B6C  EC02  F007         	call	_Delay	;wreg free
  5018                           
  5019                           ;actors.c: 43: pin_out = 'T';
  5020  000B70  0E54               	movlw	84
  5021  000B72  6E4E               	movwf	_pin_out,c
  5022                           
  5023                           ;actors.c: 44: break;
  5024  000B74  0012               	return	
  5025  000B76                     i2l80:
  5026                           
  5027                           ;actors.c: 46: PORTAbits.RA1 = 0;
  5028  000B76  9280               	bcf	3968,1,c	;volatile
  5029                           
  5030                           ;actors.c: 47: PORTAbits.RA3 = 1;
  5031  000B78  8680               	bsf	3968,3,c	;volatile
  5032                           
  5033                           ;actors.c: 48: Delay(a_actors[0].thro);
  5034  000B7A  C0D4  F030         	movff	_a_actors+4,Delay@del
  5035  000B7E  C0D5  F031         	movff	_a_actors+5,Delay@del+1
  5036  000B82  EC02  F007         	call	_Delay	;wreg free
  5037                           
  5038                           ;actors.c: 49: pin_out = 'R';
  5039  000B86  0E52               	movlw	82
  5040  000B88  6E4E               	movwf	_pin_out,c
  5041                           
  5042                           ;actors.c: 50: break;
  5043  000B8A  0012               	return	
  5044  000B8C                     i2l81:
  5045                           
  5046                           ;actors.c: 52: PORTAbits.RA2 = 0;
  5047  000B8C  9480               	bcf	3968,2,c	;volatile
  5048                           
  5049                           ;actors.c: 53: PORTAbits.RA2 = 1;
  5050  000B8E  8480               	bsf	3968,2,c	;volatile
  5051                           
  5052                           ;actors.c: 54: Delay(a_actors[0].rudd);
  5053  000B90  C0D6  F030         	movff	_a_actors+6,Delay@del
  5054  000B94  C0D7  F031         	movff	_a_actors+7,Delay@del+1
  5055  000B98  EC02  F007         	call	_Delay	;wreg free
  5056                           
  5057                           ;actors.c: 55: pin_out = 0;
  5058  000B9C  0E00               	movlw	0
  5059  000B9E  6E4E               	movwf	_pin_out,c
  5060                           
  5061                           ;actors.c: 56: break;
  5062  000BA0  0012               	return	
  5063  000BA2                     i2l82:
  5064                           
  5065                           ;actors.c: 58: PORTAbits.RA2 = 0;
  5066  000BA2  9480               	bcf	3968,2,c	;volatile
  5067                           
  5068                           ;actors.c: 59: pin_out = 'A';
  5069  000BA4  0E41               	movlw	65
  5070  000BA6  6E4E               	movwf	_pin_out,c
  5071                           
  5072                           ;actors.c: 61: }
  5073                           ;actors.c: 62: }
  5074                           
  5075                           ;actors.c: 60: break;
  5076  000BA8  0012               	return	
  5077  000BAA                     i2l2522:
  5078  000BAA  504E               	movf	_pin_out,w,c
  5079                           
  5080                           ; Switch size 1, requested type "space"
  5081                           ; Number of cases is 5, Range of values is 0 to 84
  5082                           ; switch strategies available:
  5083                           ; Name         Instructions Cycles
  5084                           ; simple_byte           16     9 (average)
  5085                           ;	Chosen strategy is simple_byte
  5086  000BAC  0A00               	xorlw	0	; case 0
  5087  000BAE  B4D8               	btfsc	status,2,c
  5088  000BB0  D7F8               	goto	i2l82
  5089  000BB2  0A41               	xorlw	65	; case 65
  5090  000BB4  B4D8               	btfsc	status,2,c
  5091  000BB6  D7CA               	goto	i2l77
  5092  000BB8  0A04               	xorlw	4	; case 69
  5093  000BBA  B4D8               	btfsc	status,2,c
  5094  000BBC  D7D1               	goto	i2l79
  5095  000BBE  0A17               	xorlw	23	; case 82
  5096  000BC0  B4D8               	btfsc	status,2,c
  5097  000BC2  D7E4               	goto	i2l81
  5098  000BC4  0A06               	xorlw	6	; case 84
  5099  000BC6  A4D8               	btfss	status,2,c
  5100  000BC8  0012               	return	
  5101  000BCA  D7D5               	goto	i2l80
  5102  000BCC                     __end_of_SignalOut:
  5103                           	opt stack 0
  5104                           pclatu	equ	0xFFB
  5105                           pclath	equ	0xFFA
  5106                           tblptru	equ	0xFF8
  5107                           tblptrh	equ	0xFF7
  5108                           tblptrl	equ	0xFF6
  5109                           tablat	equ	0xFF5
  5110                           prodh	equ	0xFF4
  5111                           prodl	equ	0xFF3
  5112                           intcon	equ	0xFF2
  5113                           postinc0	equ	0xFEE
  5114                           fsr0h	equ	0xFEA
  5115                           fsr0l	equ	0xFE9
  5116                           wreg	equ	0xFE8
  5117                           indf1	equ	0xFE7
  5118                           postdec1	equ	0xFE5
  5119                           fsr1h	equ	0xFE2
  5120                           fsr1l	equ	0xFE1
  5121                           indf2	equ	0xFDF
  5122                           postinc2	equ	0xFDE
  5123                           postdec2	equ	0xFDD
  5124                           fsr2h	equ	0xFDA
  5125                           fsr2l	equ	0xFD9
  5126                           status	equ	0xFD8
  5127                           
  5128 ;; *************** function _Delay *****************
  5129 ;; Defined at:
  5130 ;;		line 20 in file "actors.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;  del             2    0[COMRAM] unsigned int 
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;		None
  5135 ;; Return value:  Size  Location     Type
  5136 ;;		None               void
  5137 ;; Registers used:
  5138 ;;		wreg, status,2, status,0
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5144 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5147 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5148 ;;Total ram usage:        2 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; This function calls:
  5151 ;;		Nothing
  5152 ;; This function is called by:
  5153 ;;		_SignalOut
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           	psect	text33
  5158  000E04                     __ptext33:
  5159                           	opt stack 0
  5160  000E04                     _Delay:
  5161                           	opt stack 25
  5162                           
  5163                           ;actors.c: 21: del = 1000 + del;
  5164                           
  5165                           ;incstack = 0
  5166  000E04  0EE8               	movlw	232
  5167  000E06  2430               	addwf	Delay@del,w,c
  5168  000E08  6E30               	movwf	Delay@del,c
  5169  000E0A  0E03               	movlw	3
  5170  000E0C  2031               	addwfc	Delay@del+1,w,c
  5171  000E0E  6E31               	movwf	Delay@del+1,c
  5172                           
  5173                           ;actors.c: 22: del <<= 1;
  5174  000E10  90D8               	bcf	status,0,c
  5175  000E12  3630               	rlcf	Delay@del,f,c
  5176  000E14  3631               	rlcf	Delay@del+1,f,c
  5177                           
  5178                           ;actors.c: 23: TMR1L = 0;
  5179  000E16  0E00               	movlw	0
  5180  000E18  6ECE               	movwf	4046,c	;volatile
  5181                           
  5182                           ;actors.c: 24: TMR1H = 0;
  5183  000E1A  0E00               	movlw	0
  5184  000E1C  6ECF               	movwf	4047,c	;volatile
  5185                           
  5186                           ;actors.c: 25: CCPR1L = del;
  5187  000E1E  C030  FFBE         	movff	Delay@del,4030	;volatile
  5188                           
  5189                           ;actors.c: 26: del >>= 8;
  5190  000E22  5031               	movf	Delay@del+1,w,c
  5191  000E24  6E30               	movwf	Delay@del,c
  5192  000E26  6A31               	clrf	Delay@del+1,c
  5193                           
  5194                           ;actors.c: 27: CCPR1H = del;
  5195  000E28  C030  FFBF         	movff	Delay@del,4031	;volatile
  5196                           
  5197                           ;actors.c: 28: T1CONbits.TMR1ON = 1;
  5198  000E2C  80CD               	bsf	4045,0,c	;volatile
  5199  000E2E  0012               	return		;funcret
  5200  000E30                     __end_of_Delay:
  5201                           	opt stack 0
  5202  0000                     pclatu	equ	0xFFB
  5203                           pclath	equ	0xFFA
  5204                           tblptru	equ	0xFF8
  5205                           tblptrh	equ	0xFF7
  5206                           tblptrl	equ	0xFF6
  5207                           tablat	equ	0xFF5
  5208                           prodh	equ	0xFF4
  5209                           prodl	equ	0xFF3
  5210                           intcon	equ	0xFF2
  5211                           postinc0	equ	0xFEE
  5212                           fsr0h	equ	0xFEA
  5213                           fsr0l	equ	0xFE9
  5214                           wreg	equ	0xFE8
  5215                           indf1	equ	0xFE7
  5216                           postdec1	equ	0xFE5
  5217                           fsr1h	equ	0xFE2
  5218                           fsr1l	equ	0xFE1
  5219                           indf2	equ	0xFDF
  5220                           postinc2	equ	0xFDE
  5221                           postdec2	equ	0xFDD
  5222                           fsr2h	equ	0xFDA
  5223                           fsr2l	equ	0xFD9
  5224                           status	equ	0xFD8
  5225                           pclatu	equ	0xFFB
  5226                           pclath	equ	0xFFA
  5227                           tblptru	equ	0xFF8
  5228                           tblptrh	equ	0xFF7
  5229                           tblptrl	equ	0xFF6
  5230                           tablat	equ	0xFF5
  5231                           prodh	equ	0xFF4
  5232                           prodl	equ	0xFF3
  5233                           intcon	equ	0xFF2
  5234                           postinc0	equ	0xFEE
  5235                           fsr0h	equ	0xFEA
  5236                           fsr0l	equ	0xFE9
  5237                           wreg	equ	0xFE8
  5238                           indf1	equ	0xFE7
  5239                           postdec1	equ	0xFE5
  5240                           fsr1h	equ	0xFE2
  5241                           fsr1l	equ	0xFE1
  5242                           indf2	equ	0xFDF
  5243                           postinc2	equ	0xFDE
  5244                           postdec2	equ	0xFDD
  5245                           fsr2h	equ	0xFDA
  5246                           fsr2l	equ	0xFD9
  5247                           status	equ	0xFD8
  5248                           
  5249                           	psect	rparam
  5250  0000                     pclatu	equ	0xFFB
  5251                           pclath	equ	0xFFA
  5252                           tblptru	equ	0xFF8
  5253                           tblptrh	equ	0xFF7
  5254                           tblptrl	equ	0xFF6
  5255                           tablat	equ	0xFF5
  5256                           prodh	equ	0xFF4
  5257                           prodl	equ	0xFF3
  5258                           intcon	equ	0xFF2
  5259                           postinc0	equ	0xFEE
  5260                           fsr0h	equ	0xFEA
  5261                           fsr0l	equ	0xFE9
  5262                           wreg	equ	0xFE8
  5263                           indf1	equ	0xFE7
  5264                           postdec1	equ	0xFE5
  5265                           fsr1h	equ	0xFE2
  5266                           fsr1l	equ	0xFE1
  5267                           indf2	equ	0xFDF
  5268                           postinc2	equ	0xFDE
  5269                           postdec2	equ	0xFDD
  5270                           fsr2h	equ	0xFDA
  5271                           fsr2l	equ	0xFD9
  5272                           status	equ	0xFD8
  5273                           
  5274                           	psect	temp
  5275  000050                     btemp:
  5276                           	opt stack 0
  5277  000050                     	ds	1
  5278  0000                     int$flags	set	btemp
  5279                           pclatu	equ	0xFFB
  5280                           pclath	equ	0xFFA
  5281                           tblptru	equ	0xFF8
  5282                           tblptrh	equ	0xFF7
  5283                           tblptrl	equ	0xFF6
  5284                           tablat	equ	0xFF5
  5285                           prodh	equ	0xFF4
  5286                           prodl	equ	0xFF3
  5287                           intcon	equ	0xFF2
  5288                           postinc0	equ	0xFEE
  5289                           fsr0h	equ	0xFEA
  5290                           fsr0l	equ	0xFE9
  5291                           wreg	equ	0xFE8
  5292                           indf1	equ	0xFE7
  5293                           postdec1	equ	0xFE5
  5294                           fsr1h	equ	0xFE2
  5295                           fsr1l	equ	0xFE1
  5296                           indf2	equ	0xFDF
  5297                           postinc2	equ	0xFDE
  5298                           postdec2	equ	0xFDD
  5299                           fsr2h	equ	0xFDA
  5300                           fsr2l	equ	0xFD9
  5301                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        15
    BSS         209
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     16      79
    BANK0           160     14     134
    BANK1           256      0      42
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Isr in COMRAM

    _SignalOut->_Delay

Critical Paths under _main in BANK0

    _main->_CheckThrottle
    _main->_ReadObject
    _ReadObject->_ExchangeSpiWord
    _CompareFrames->_CheckRudderAhead
    _CompareFrames->_CheckRudderBack
    _CheckRudderBack->_ActRudder
    _CheckRudderAhead->_ActRudder
    _CheckElevator->_ActElevator
    _CheckAileron->_ActAileron
    _CheckThrottle->_ActThrottle
    _BeneathTable->_ActThrottle
    _BeneathFloor->_ActThrottle

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2037
                      _CheckThrottle
                      _CompareFrames
                               _Init
                          _ModeCheck
                         _ReadHeight
                         _ReadObject
                 _StartHeightMeasure
                         _StoreAsOld
 ---------------------------------------------------------------------------------
 (1) _StoreAsOld                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _StartHeightMeasure                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadObject                                          10     7      3    1303
                                              5 BANK0      9     6      3
                    _ExchangeSpiWord
 ---------------------------------------------------------------------------------
 (2) _ExchangeSpiWord                                      5     3      2     591
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ReadHeight                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ModeCheck                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                         _InitActors
                          _InitAnsel
                           _InitComp
                      _InitInterrupt
                            _InitOsc
                           _InitPort
                            _InitSpi
                          _InitTimer
                           _InitTris
                           _InitUart
 ---------------------------------------------------------------------------------
 (2) _InitUart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitSpi                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitOsc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitComp                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitActors                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CompareFrames                                        2     2      0     124
                                              2 BANK0      2     2      0
                       _CheckAileron
                      _CheckElevator
                   _CheckRudderAhead
                    _CheckRudderBack
 ---------------------------------------------------------------------------------
 (2) _CheckRudderBack                                      1     1      0      31
                                              1 BANK0      1     1      0
                          _ActRudder
 ---------------------------------------------------------------------------------
 (2) _CheckRudderAhead                                     1     1      0      31
                                              1 BANK0      1     1      0
                          _ActRudder
 ---------------------------------------------------------------------------------
 (3) _ActRudder                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CheckElevator                                        0     0      0      31
                        _ActElevator
 ---------------------------------------------------------------------------------
 (3) _ActElevator                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CheckAileron                                         0     0      0      31
                         _ActAileron
 ---------------------------------------------------------------------------------
 (3) _ActAileron                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CheckThrottle                                       13    13      0     610
                                              1 BANK0     13    13      0
                        _ActThrottle
                       _BeneathFloor
                       _BeneathTable
 ---------------------------------------------------------------------------------
 (2) _BeneathTable                                         0     0      0      31
                        _ActThrottle
 ---------------------------------------------------------------------------------
 (2) _BeneathFloor                                         0     0      0      31
                        _ActThrottle
 ---------------------------------------------------------------------------------
 (3) _ActThrottle                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Isr                                                 14    14      0     241
                                              2 COMRAM    14    14      0
                          _SignalOut
                        i2_ModeCheck
 ---------------------------------------------------------------------------------
 (5) i2_ModeCheck                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SignalOut                                            0     0      0     241
                              _Delay
 ---------------------------------------------------------------------------------
 (6) _Delay                                                2     0      2     241
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CheckThrottle
     _ActThrottle
     _BeneathFloor
       _ActThrottle
     _BeneathTable
       _ActThrottle
   _CompareFrames
     _CheckAileron
       _ActAileron
     _CheckElevator
       _ActElevator
     _CheckRudderAhead
       _ActRudder
     _CheckRudderBack
       _ActRudder
   _Init
     _InitActors
     _InitAnsel
     _InitComp
     _InitInterrupt
     _InitOsc
     _InitPort
     _InitSpi
     _InitTimer
     _InitTris
     _InitUart
   _ModeCheck
   _ReadHeight
   _ReadObject
     _ExchangeSpiWord
   _StartHeightMeasure
   _StoreAsOld

 _Isr (ROOT)
   _SignalOut
     _Delay
   i2_ModeCheck

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      2A       7       16.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      E      86       5       83.8%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     10      4F       1       84.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FF      12        0.0%
DATA                 0      0      FF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Jan 20 18:48:37 2016

                 _ActAileron 0F72              _highpassallowed 027A                            _w 002D  
                         _lw 0027       ReadObject@des_obj_type 0030                 __CFG_CP0$OFF 000000  
                _ActElevator 0F60                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                          l228 0E80                          l623 0532  
                        l551 0DD4                          l626 051E                          l618 0422  
                        l764 0BCC                          l852 0C6C                          l849 0C52  
                        l938 0B48                          _GIE 007F97                          l998 00EE  
                        l999 00EA                 __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000  
                        _Isr 0008            ActThrottle@change 00D8                          prod 000FF3  
                        wreg 000FE8            ReadObject@des_obj 00DD                 __CFG_LVP$OFF 000000  
          ReadObject@max_obj 00DF                         ?_Isr 0030                         l1001 00F0  
                       l1011 01A4                         l1023 0214                         l1015 020C  
                       l1008 01A2                         l1025 02C0                         l1009 019E  
                       l3020 045E                         l3024 0488                         l3130 0154  
                       l3122 00FA                         l3042 050E                         l3034 04D2  
                       l3140 01AE                         l3124 0100                         l3150 01EC  
                       l3142 01B4                 _pulsecounter 002F                         l3160 0216  
                       l3152 01F4                         l3154 01FC                         l3074 072C  
                       l3180 03E2                         l3172 02EC                         l3164 0232  
                       l3148 01DC                         l3156 0204                         l3092 0B42  
                       l3076 0730                         l3184 03F8                         l3176 03B8  
                       l2820 0A10                         l2900 08A2                         l2822 0A20  
                       l2830 0A40                         l2814 09E8                         l2902 08AA  
                       l2840 0A7A                         l2824 0A28                         l2912 08EE  
                       l2904 08B2                         l2920 074E                         l2834 0A5C  
                       l2842 0A82                         l2826 0A30                         l2914 08F6  
                       l2930 079E                         l2922 075E                         l2836 0A6A  
                       l2828 0A38                         l2860 095C                         l2852 0926  
                       l2916 08FE                         l2932 07AE                         l2940 07CE  
                       l2924 0766                         l2838 0A72                         l2862 0964  
                       l2950 0812                         l2934 07B6                         l2926 0776  
                       l2960 0D50                         l2872 0998                         l2880 09C0  
                       l2864 096C                         l2952 081A                         l2936 07BE  
                       l2874 09A8                         l2858 094E                         l2866 0974  
                       l2938 07C6                         l2794 0C4E                         l2876 09B0  
                       l2868 097C                         l2884 0832                         l2948 080A  
                       l2982 0DC0                         l2966 0D70                         l2878 09B8  
                       l2894 0882                         l2886 0842                         l2990 0E6E  
                       l2984 0DC8                         l2976 0DA0                         l2968 0D78  
                       l2896 0892                         l2888 084A                         l2898 089A  
                       u2500 01C0                         u2440 010E                         u1800 09F4  
                       u2607 0400                         u1780 09D4                         u1870 0912  
                       u1890 0932                         _PEIE 007F96                         u1980 085A  
                       u2597 0C40                         i2l80 0B76                         i2l81 0B8C  
                       i2l82 0BA2                         i2l77 0B4C                         i2l79 0B60  
            _ExchangeSpiWord 0C2A                         _Init 0E84                         _cm50 004A  
                       _cm80 004C                  _ActThrottle 0F84                         _main 0DD0  
                       fsr0h 000FEA                         fsr1h 000FE2                         fsr0l 000FE9  
                       fsr2h 000FDA                         indf1 000FE7                         fsr1l 000FE1  
                       indf2 000FDF                         fsr2l 000FD9                         btemp 0050  
              __CFG_BORV$190 000000                         pclat 000FFA                         prodh 000FF4  
                       prodl 000FF3           ReadObject@checksum 00E2                         start 00B4  
          ??_CheckRudderBack 00D9                __CFG_IESO$OFF 000000                 ___param_bank 000010  
              _InitInterrupt 0FC0              __end_of_InitOsc 0FDA              __end_of_InitSpi 0FC0  
                      ??_Isr 0032                        ?_Init 0030                        ?_main 0030  
             __CFG_DEBUG$OFF 000000                        i2l228 0EFE                        i2l474 0078  
                      _TMR1H 000FCF                        _TMR3H 000FB3                        _TMR1L 000FCE  
                      _TMR3L 000FB2                        _TMR5H 000F50                        _TMR5L 000F4F  
                      _PORTA 000F80                        _PORTB 000F81                        _PORTC 000F82  
                      _PORTD 000F83                        _PORTE 000F84        __size_of_CheckAileron 00C2  
                      _TRISA 000F92                        _TRISB 000F93                        _TRISC 000F94  
                      _TRISD 000F95                        _TRISE 000F96                        _Delay 0E04  
              __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000  
              __CFG_WRT3$OFF 000000                        _cm100 0042                        _cm120 0044  
                      _cm220 0048                        _cm180 0046               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
             __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000                        _frame 0279  
                      _table 027E           __CFG_MCLRE$EXTMCLR 000000                  ReadObject@c 00E4  
          ?_CheckRudderAhead 0030               __pbitbssCOMRAM 0278                        tablat 000FF5  
      __size_of_BeneathFloor 0050        __size_of_BeneathTable 0050                        status 000FD8  
         ??_CheckRudderAhead 00D9               __CFG_HFOFST$ON 000000               __CFG_PBADEN$ON 000000  
                 _InitActors 0EAE           __size_of_ActRudder 0012               ?_InitInterrupt 0030  
                 _ReadHeight 0BCC              __initialization 0CDC                 __end_of_Init 0EAE  
         _StartHeightMeasure 0F96                   _ReadObject 0412                  ?_ActAileron 0030  
               __end_of_main 0E04                 _CheckAileron 09C8             __end_of_InitComp 0FD4  
           __end_of_InitUart 0FDC             __end_of_InitPort 0F4E             __end_of_InitTris 0F38  
                     ??_Init 00D8          ?_StartHeightMeasure 0030                       ??_main 00E6  
              __activetblptr 000002               __CFG_PLLCFG$ON 000000                       ?_Delay 0030  
    __end_of_ExchangeSpiWord 0C84                 _BeneathFloor 0D80                 _BeneathTable 0D30  
                     _CCP1IE 007CEA                       _CCP1IF 007CF2                       _CCPR1H 000FBF  
                     _CCPR1L 000FBE                       _ANSELA 000F38                       _ANSELB 000F39  
                     _ANSELC 000F3A                       _ANSELD 000F3B                       _ANSELE 000F3C  
                     i2l2202 0EEC                       i2l2522 0BAA                       i2l2702 004E  
             __CFG_WDTEN$OFF 000000                       _OSCCON 000FD3           __size_of_InitAnsel 0020  
       ??_StartHeightMeasure 00D8                       _SSP1IF 007CF3           __size_of_InitTimer 0058  
         __size_of_ModeCheck 002A                    ??_InitOsc 00D8                    ??_InitSpi 00D8  
     __size_of_CheckElevator 00C2               __CFG_XINST$OFF 000000                       _a_path 00A6  
                     _c_path 0040               __CFG_STVREN$ON 000000                       clear_0 0CE2  
                     clear_1 0CEE                       clear_2 0CFC           __size_of_SignalOut 0082  
               __pdataCOMRAM 0040       __size_of_CheckThrottle 035A                       tblptrh 000FF7  
                     tblptrl 000FF6            __end_of_ActRudder 0F60                       tblptru 000FF8  
               ?i2_ModeCheck 0030          __size_of_ActAileron 0012                   __accesstop 0060  
    __end_of__initialization 0D22                   _StoreAsOld 0E30              ??_InitInterrupt 00D8  
              ___rparam_used 000001                  ?_InitActors 0030                __end_of_Delay 0E30  
                ?_ReadHeight 0030                  ?_ReadObject 00DD               __pcstackCOMRAM 0030  
               ?_ActElevator 0030            __end_of_InitAnsel 0F22                   _a_path_old 0100  
          __end_of_InitTimer 0CDC            __end_of_ModeCheck 0E84                _CheckElevator 0906  
                    ??_Delay 0032             ?_ExchangeSpiWord 00D8              _CheckRudderBack 073E  
                 __pbssBANK0 0060                   __pbssBANK1 0100                    ?_InitComp 0030  
                  ?_InitUart 0030                    ?_InitPort 0030                   _changerate 001F  
          __end_of_SignalOut 0BCC                    ?_InitTris 0030                 ?_ActThrottle 0030  
              _CheckThrottle 00B8           __CFG_CCP2MX$PORTC1 000000        __end_of_CompareFrames 0B4A  
         __CFG_CCP3MX$PORTB5 000000               ?_CheckElevator 0030          __size_of_InitActors 002A  
          __CFG_PRICLKEN$OFF 000000                      _TMR3GIE 007D19                      _TMR3GIF 007D21  
                    _TMR5GIF 007D22                      _SSP1BUF 000FC9          __size_of_ReadHeight 005E  
        __size_of_ReadObject 032C                   ??_InitComp 00D8                   ??_InitUart 00D8  
                 ??_InitPort 00D8                   ??_InitTris 00D8                  ?_StoreAsOld 0030  
                    _InitOsc 0FD4                      _InitSpi 0FB6               ?_CheckThrottle 0030  
            __CFG_PWRTEN$OFF 000000                      __Hparam 0000                      __Lparam 0000  
               ??_ActAileron 00D8    __size_of_CheckRudderAhead 00E4                      _a_color 0060  
                    _a_frame 0001                      __pcinit 0CDC                      __ramtop 1000  
                    __ptext0 0DD0                      __ptext1 0E30                      __ptext2 0F96  
                    __ptext3 0412                      __ptext4 0C2A                      __ptext5 0BCC  
                    __ptext6 0E5A                      __ptext7 0E84                      __ptext8 0FDA  
                    __ptext9 0F22      __end_of_CheckRudderBack 0822                    _T1CONbits 000FCD  
               __size_of_Isr 00AC                    _T3CONbits 000FB1                      _pin_out 004E  
                  _T5CONbits 000F4E                      _set_ret 027C             CheckThrottle@tmp 00E0  
       end_of_initialization 0D22           __end_of_ActAileron 0F84         __size_ofi2_ModeCheck 002A  
              __Lmediumconst 0000                      postdec1 000FE5                      postdec2 000FDD  
                    postinc0 000FEE                      postinc2 000FDE              ??_CheckElevator 00D9  
                  _PORTAbits 000F80                    _PORTBbits 000F81          __size_of_StoreAsOld 002A  
       __size_of_ActElevator 0012         ExchangeSpiWord@byte1 00DA         ExchangeSpiWord@byte2 00D8  
        CheckThrottle@i_1680 00E4          CheckThrottle@i_1681 00DE                    _ActRudder 0F4E  
__size_of_StartHeightMeasure 0010              ??_CheckThrottle 00D9                  _CCP1CONbits 000FBD  
               ??_InitActors 00D8         __size_of_ActThrottle 0012                 ??_ReadHeight 00D8  
               ??_ReadObject 00E0                  _a_frame_dif 0015                __pidataCOMRAM 0FA6  
           ?_CheckRudderBack 0030          start_initialization 0CDC                    _InitAnsel 0F02  
                __end_of_Isr 00B4           __end_of_InitActors 0ED8                    _InitTimer 0C84  
                  _ModeCheck 0E5A           __end_of_ReadHeight 0C2A           __end_of_ReadObject 073E  
                 ?_ActRudder 0030            ActElevator@change 00D8             ActAileron@change 00D8  
          __size_of_InitComp 000A            __size_of_InitUart 0002            __size_of_InitPort 0016  
          __size_of_InitTris 0016                    _SignalOut 0B4A        __end_of_InitInterrupt 0FCA  
           _CheckRudderAhead 0822              ActRudder@change 00D8                  __pbssCOMRAM 0001  
                 ?_InitAnsel 0030                __pcstackBANK0 00D8                   ?_InitTimer 0030  
                 ?_ModeCheck 0030     __size_of_ExchangeSpiWord 005A                 ??_StoreAsOld 00D8  
                   ?_InitOsc 0030                     ?_InitSpi 0030                   ?_SignalOut 0030  
                  __pintcode 0008                ?_CheckAileron 0030                    _direction 0278  
         __end_of_StoreAsOld 0E5A               __size_of_Delay 002C                ?_BeneathFloor 0030  
              ?_BeneathTable 0030       __size_of_CompareFrames 00C0                  ??_ActRudder 00D8  
                   Delay@del 0030               ??_CheckAileron 00D9             __CFG_WDTPS$32768 000000  
                  _time_gear 0029                     _SSP1CON1 000FC6                     _SSP1STAT 000FC7  
            ReadObject@c_obj 00E5               ??_BeneathFloor 00D9               ??_BeneathTable 00D9  
                ??_InitAnsel 00D8                ??i2_ModeCheck 0030                  ??_InitTimer 00D8  
                ??_ModeCheck 00D8                _id_current_cc 0025                    copy_data0 0D16  
                   _InitComp 0FCA                     _InitUart 0FDA                     _InitPort 0F38  
                   _InitTris 0F22                     __Hrparam 0000                  ??_SignalOut 0032  
           __size_of_InitOsc 0006             __size_of_InitSpi 000A                     __Lrparam 0000  
          ??_ExchangeSpiWord 00DA           __CFG_BOREN$SBORDIS 000000                _CompareFrames 0A8A  
          __CFG_P2BMX$PORTD2 000000                ??_ActElevator 00D8                     _a_actors 00D0  
      __end_of_CheckElevator 09C8                     __ptext10 0C84                     __ptext11 0FB6  
                   __ptext20 0822                     __ptext12 0F38                     __ptext21 0F4E  
                   __ptext13 0FD4                     __ptext22 0906                     __ptext14 0FC0  
                   __ptext31 0ED8                     __ptext23 0F60                     __ptext15 0FCA  
                   __ptext32 0B4A                     __ptext24 09C8                     __ptext16 0F02  
                   __ptext33 0E04                     __ptext25 0F72                     __ptext17 0EAE  
                   __ptext26 00B8                     __ptext18 0A8A                     __ptext27 0D30  
                   __ptext19 073E                     __ptext28 0D80                     __ptext29 0F84  
   __end_of_CheckRudderAhead 0906   __end_of_StartHeightMeasure 0FA6                   _T3GCONbits 000FB4  
              __size_of_Init 002A                ??_ActThrottle 00D8                     _obj_type 027B  
        __end_ofi2_ModeCheck 0F02                __size_of_main 0034                   _T5GCONbits 000F4D  
      __end_of_CheckThrottle 0412               CheckThrottle@i 00E2               ?_CompareFrames 0030  
    ExchangeSpiWord@SPI_word 00DB                     int$flags 0050                     _outgoing 0022  
                   _storedif 027D          __end_of_ActElevator 0F72         __end_of_CheckAileron 0A8A  
   __size_of_CheckRudderBack 00E4                     intlevel2 0000         __end_of_BeneathFloor 0DD0  
       __end_of_BeneathTable 0D80          __end_of_ActThrottle 0F96                  _time_height 002B  
          __CFG_T3CMX$PORTC0 000000                  i2_ModeCheck 0ED8       __size_of_InitInterrupt 000A  
          __CFG_FOSC$INTIO67 000000              ??_CompareFrames 00DA  
