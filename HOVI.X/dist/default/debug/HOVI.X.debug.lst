

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Jan 11 10:41:29 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46  0000                     
    47                           	psect	idataCOMRAM
    48  000C72                     __pidataCOMRAM:
    49                           	opt stack 0
    50                           
    51                           ;initializer for _c_path
    52  000C72  000A               	dw	10
    53                           
    54                           ;initializer for _cm100
    55  000C74  5B1B               	dw	23323
    56                           
    57                           ;initializer for _cm120
    58  000C76  6D53               	dw	27987
    59                           
    60                           ;initializer for _cm180
    61  000C78  A3FE               	dw	41982
    62                           
    63                           ;initializer for _cm220
    64  000C7A  C86E               	dw	51310
    65                           
    66                           ;initializer for _cm50
    67  000C7C  2D8E               	dw	11662
    68                           
    69                           ;initializer for _cm80
    70  000C7E  48E3               	dw	18659
    71  0000                     _ANSELA	set	3896
    72  0000                     _ANSELB	set	3897
    73  0000                     _ANSELC	set	3898
    74  0000                     _ANSELD	set	3899
    75  0000                     _ANSELE	set	3900
    76  0000                     _T5CONbits	set	3918
    77  0000                     _T5GCONbits	set	3917
    78  0000                     _TMR5H	set	3920
    79  0000                     _TMR5L	set	3919
    80  0000                     _OSCCON	set	4051
    81  0000                     _PORTA	set	3968
    82  0000                     _PORTB	set	3969
    83  0000                     _PORTBbits	set	3969
    84  0000                     _PORTC	set	3970
    85  0000                     _PORTD	set	3971
    86  0000                     _PORTE	set	3972
    87  0000                     _SSP1BUF	set	4041
    88  0000                     _SSP1CON1	set	4038
    89  0000                     _SSP1STAT	set	4039
    90  0000                     _T3CONbits	set	4017
    91  0000                     _T3GCONbits	set	4020
    92  0000                     _TMR3H	set	4019
    93  0000                     _TMR3L	set	4018
    94  0000                     _TRISA	set	3986
    95  0000                     _TRISB	set	3987
    96  0000                     _TRISC	set	3988
    97  0000                     _TRISD	set	3989
    98  0000                     _TRISE	set	3990
    99  0000                     _GIE	set	32663
   100  0000                     _PEIE	set	32662
   101  0000                     _SSP1IF	set	31987
   102  0000                     _TMR3GIE	set	32025
   103  0000                     _TMR3GIF	set	32033
   104  0000                     _TMR3IF	set	32009
   105  0000                     _TMR5IF	set	31729
   106                           
   107                           ; #config settings
   108  0000                     
   109                           	psect	cinit
   110  0009FE                     __pcinit:
   111                           	opt stack 0
   112  0009FE                     start_initialization:
   113                           	opt stack 0
   114  0009FE                     __initialization:
   115                           	opt stack 0
   116                           
   117                           ; Clear objects allocated to BANK1 (42 bytes)
   118  0009FE  EE01  F000         	lfsr	0,__pbssBANK1
   119  000A02  0E2A               	movlw	42
   120  000A04                     clear_0:
   121  000A04  6AEE               	clrf	postinc0,c
   122  000A06  06E8               	decf	wreg,f,c
   123  000A08  E1FD               	bnz	clear_0
   124                           
   125                           ; Clear objects allocated to BANK0 (120 bytes)
   126  000A0A  EE00  F060         	lfsr	0,__pbssBANK0
   127  000A0E  0E78               	movlw	120
   128  000A10                     clear_1:
   129  000A10  6AEE               	clrf	postinc0,c
   130  000A12  06E8               	decf	wreg,f,c
   131  000A14  E1FD               	bnz	clear_1
   132                           
   133                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   134  000A16  6A57               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   135                           
   136                           ; Clear objects allocated to COMRAM (44 bytes)
   137  000A18  EE00  F001         	lfsr	0,__pbssCOMRAM
   138  000A1C  0E2C               	movlw	44
   139  000A1E                     clear_2:
   140  000A1E  6AEE               	clrf	postinc0,c
   141  000A20  06E8               	decf	wreg,f,c
   142  000A22  E1FD               	bnz	clear_2
   143                           
   144                           ; Initialize objects allocated to COMRAM (14 bytes)
   145                           ; load TBLPTR registers with __pidataCOMRAM
   146  000A24  0E72               	movlw	low __pidataCOMRAM
   147  000A26  6EF6               	movwf	tblptrl,c
   148  000A28  0E0C               	movlw	high __pidataCOMRAM
   149  000A2A  6EF7               	movwf	tblptrh,c
   150  000A2C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   151  000A2E  6EF8               	movwf	tblptru,c
   152  000A30  EE00  F049         	lfsr	0,__pdataCOMRAM
   153  000A34  EE10 F00E          	lfsr	1,14
   154  000A38                     copy_data0:
   155  000A38  0009               	tblrd		*+
   156  000A3A  CFF5 FFEE          	movff	tablat,postinc0
   157  000A3E  50E5               	movf	postdec1,w,c
   158  000A40  50E1               	movf	fsr1l,w,c
   159  000A42  E1FA               	bnz	copy_data0
   160  000A44                     end_of_initialization:
   161                           	opt stack 0
   162  000A44                     __end_of__initialization:
   163                           	opt stack 0
   164  000A44  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   165  000A46  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   166  000A48  0100               	movlb	0
   167  000A4A  EF61  F006         	goto	_main	;jump to C main() function
   168                           tblptru	equ	0xFF8
   169                           tblptrh	equ	0xFF7
   170                           tblptrl	equ	0xFF6
   171                           tablat	equ	0xFF5
   172                           postinc0	equ	0xFEE
   173                           wreg	equ	0xFE8
   174                           postdec1	equ	0xFE5
   175                           fsr1l	equ	0xFE1
   176                           
   177                           	psect	bitbssCOMRAM
   178  0002B8                     __pbitbssCOMRAM:
   179                           	opt stack 0
   180  0002B8                     _direction:
   181                           	opt stack 0
   182  0002B8                     	ds	1
   183  0002B9                     _frame:
   184                           	opt stack 0
   185  0002B9                     	ds	1
   186  0002BA                     _highpassallowed:
   187                           	opt stack 0
   188  0002BA                     	ds	1
   189  0002BB                     _obj_type:
   190                           	opt stack 0
   191  0002BB                     	ds	1
   192  0002BC                     _set_ret:
   193                           	opt stack 0
   194  0002BC                     	ds	1
   195  0002BD                     _storedif:
   196                           	opt stack 0
   197  0002BD                     	ds	1
   198  0002BE                     _table:
   199                           	opt stack 0
   200  0002BE                     	ds	1
   201                           tblptru	equ	0xFF8
   202                           tblptrh	equ	0xFF7
   203                           tblptrl	equ	0xFF6
   204                           tablat	equ	0xFF5
   205                           postinc0	equ	0xFEE
   206                           wreg	equ	0xFE8
   207                           postdec1	equ	0xFE5
   208                           fsr1l	equ	0xFE1
   209                           
   210                           	psect	bssCOMRAM
   211  000001                     __pbssCOMRAM:
   212                           	opt stack 0
   213  000001                     _a_frame:
   214                           	opt stack 0
   215  000001                     	ds	20
   216  000015                     _a_frame_dif:
   217                           	opt stack 0
   218  000015                     	ds	10
   219  00001F                     _changerate:
   220                           	opt stack 0
   221  00001F                     	ds	3
   222  000022                     _outgoing:
   223                           	opt stack 0
   224  000022                     	ds	3
   225  000025                     _id_current_cc:
   226                           	opt stack 0
   227  000025                     	ds	2
   228  000027                     _lw:
   229                           	opt stack 0
   230  000027                     	ds	2
   231  000029                     _time_height:
   232                           	opt stack 0
   233  000029                     	ds	2
   234  00002B                     _w:
   235                           	opt stack 0
   236  00002B                     	ds	2
   237                           tblptru	equ	0xFF8
   238                           tblptrh	equ	0xFF7
   239                           tblptrl	equ	0xFF6
   240                           tablat	equ	0xFF5
   241                           postinc0	equ	0xFEE
   242                           wreg	equ	0xFE8
   243                           postdec1	equ	0xFE5
   244                           fsr1l	equ	0xFE1
   245                           
   246                           	psect	dataCOMRAM
   247  000049                     __pdataCOMRAM:
   248                           	opt stack 0
   249  000049                     _c_path:
   250                           	opt stack 0
   251  000049                     	ds	2
   252  00004B                     _cm100:
   253                           	opt stack 0
   254  00004B                     	ds	2
   255  00004D                     _cm120:
   256                           	opt stack 0
   257  00004D                     	ds	2
   258  00004F                     _cm180:
   259                           	opt stack 0
   260  00004F                     	ds	2
   261  000051                     _cm220:
   262                           	opt stack 0
   263  000051                     	ds	2
   264  000053                     _cm50:
   265                           	opt stack 0
   266  000053                     	ds	2
   267  000055                     _cm80:
   268                           	opt stack 0
   269  000055                     	ds	2
   270                           tblptru	equ	0xFF8
   271                           tblptrh	equ	0xFF7
   272                           tblptrl	equ	0xFF6
   273                           tablat	equ	0xFF5
   274                           postinc0	equ	0xFEE
   275                           wreg	equ	0xFE8
   276                           postdec1	equ	0xFE5
   277                           fsr1l	equ	0xFE1
   278                           
   279                           	psect	bssBANK0
   280  000060                     __pbssBANK0:
   281                           	opt stack 0
   282  000060                     _a_color:
   283                           	opt stack 0
   284  000060                     	ds	70
   285  0000A6                     _a_path:
   286                           	opt stack 0
   287  0000A6                     	ds	42
   288  0000D0                     _a_actors:
   289                           	opt stack 0
   290  0000D0                     	ds	8
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           tblptrl	equ	0xFF6
   294                           tablat	equ	0xFF5
   295                           postinc0	equ	0xFEE
   296                           wreg	equ	0xFE8
   297                           postdec1	equ	0xFE5
   298                           fsr1l	equ	0xFE1
   299                           
   300                           	psect	bssBANK1
   301  000100                     __pbssBANK1:
   302                           	opt stack 0
   303  000100                     _a_path_old:
   304                           	opt stack 0
   305  000100                     	ds	42
   306                           tblptru	equ	0xFF8
   307                           tblptrh	equ	0xFF7
   308                           tblptrl	equ	0xFF6
   309                           tablat	equ	0xFF5
   310                           postinc0	equ	0xFEE
   311                           wreg	equ	0xFE8
   312                           postdec1	equ	0xFE5
   313                           fsr1l	equ	0xFE1
   314                           
   315                           	psect	cstackBANK0
   316  000000                     __pcstackBANK0:
   317                           	opt stack 0
   318  000000                     tblptru	equ	0xFF8
   319                           tblptrh	equ	0xFF7
   320                           tblptrl	equ	0xFF6
   321                           tablat	equ	0xFF5
   322                           postinc0	equ	0xFEE
   323                           wreg	equ	0xFE8
   324                           postdec1	equ	0xFE5
   325                           fsr1l	equ	0xFE1
   326                           
   327                           ; 0 bytes @ 0x0
   328                           
   329                           	psect	cstackCOMRAM
   330  00002D                     __pcstackCOMRAM:
   331                           	opt stack 0
   332  00002D                     ?_ExchangeSpiWord:
   333                           	opt stack 0
   334  00002D                     ?_CalcTime:
   335                           	opt stack 0
   336  00002D                     ActAileron@change:
   337                           	opt stack 0
   338  00002D                     ActElevator@change:
   339                           	opt stack 0
   340  00002D                     ActThrottle@change:
   341                           	opt stack 0
   342  00002D                     ActRudder@change:
   343                           	opt stack 0
   344  00002D                     ExchangeSpiWord@byte2:
   345                           	opt stack 0
   346                           
   347                           ; 1 bytes @ 0x0
   348  00002D                     	ds	1
   349  00002E                     ??_CheckThrottle:
   350  00002E                     ??_CheckRudderAhead:
   351  00002E                     ??_CheckRudderBack:
   352  00002E                     
   353                           ; 0 bytes @ 0x1
   354  00002E                     	ds	1
   355  00002F                     ??_CompareFrames:
   356  00002F                     ExchangeSpiWord@byte1:
   357                           	opt stack 0
   358  00002F                     CalcTime@time_gear:
   359                           	opt stack 0
   360                           
   361                           ; 2 bytes @ 0x2
   362  00002F                     	ds	1
   363  000030                     ExchangeSpiWord@SPI_word:
   364                           	opt stack 0
   365                           
   366                           ; 2 bytes @ 0x3
   367  000030                     	ds	1
   368  000031                     ModeCheck@time_gear:
   369                           	opt stack 0
   370                           
   371                           ; 2 bytes @ 0x4
   372  000031                     	ds	1
   373  000032                     ReadObject@des_obj:
   374                           	opt stack 0
   375                           
   376                           ; 2 bytes @ 0x5
   377  000032                     	ds	1
   378  000033                     CheckThrottle@i_1242:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x6
   382  000033                     	ds	1
   383  000034                     ReadObject@max_obj:
   384                           	opt stack 0
   385                           
   386                           ; 1 bytes @ 0x7
   387  000034                     	ds	1
   388  000035                     ReadObject@checksum:
   389                           	opt stack 0
   390  000035                     CheckThrottle@tmp:
   391                           	opt stack 0
   392                           
   393                           ; 2 bytes @ 0x8
   394  000035                     	ds	2
   395  000037                     ReadObject@c:
   396                           	opt stack 0
   397  000037                     CheckThrottle@i:
   398                           	opt stack 0
   399                           
   400                           ; 2 bytes @ 0xA
   401  000037                     	ds	1
   402  000038                     ReadObject@c_obj:
   403                           	opt stack 0
   404                           
   405                           ; 1 bytes @ 0xB
   406  000038                     	ds	1
   407  000039                     CheckThrottle@i_1241:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0xC
   411  000039                     	ds	2
   412  00003B                     ??_Isr:
   413                           
   414                           ; 0 bytes @ 0xE
   415  00003B                     	ds	14
   416                           tblptru	equ	0xFF8
   417                           tblptrh	equ	0xFF7
   418                           tblptrl	equ	0xFF6
   419                           tablat	equ	0xFF5
   420                           postinc0	equ	0xFEE
   421                           wreg	equ	0xFE8
   422                           postdec1	equ	0xFE5
   423                           fsr1l	equ	0xFE1
   424                           
   425 ;;
   426 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   427 ;;
   428 ;; *************** function _main *****************
   429 ;; Defined at:
   430 ;;		line 85 in file "main.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;		None               void
   437 ;; Registers used:
   438 ;;		wreg, status,2, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;Total ram usage:        0 bytes
   449 ;; Hardware stack levels required when called:    6
   450 ;; This function calls:
   451 ;;		_Init
   452 ;; This function is called by:
   453 ;;		Startup code after reset
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           	psect	text0
   458  000CC2                     __ptext0:
   459                           	opt stack 0
   460  000CC2                     _main:
   461                           	opt stack 25
   462                           
   463                           ;main.c: 86: Init();
   464                           
   465                           ; BSR set to: 0
   466                           ;incstack = 0
   467  000CC2  ECE9  F005         	call	_Init	;wreg free
   468  000CC6                     l2534:
   469                           
   470                           ;main.c: 88: __nop();
   471  000CC6  F000               	nop	
   472  000CC8  D7FE               	goto	l2534
   473  000CCA                     __end_of_main:
   474                           	opt stack 0
   475                           tblptru	equ	0xFF8
   476                           tblptrh	equ	0xFF7
   477                           tblptrl	equ	0xFF6
   478                           tablat	equ	0xFF5
   479                           postinc0	equ	0xFEE
   480                           wreg	equ	0xFE8
   481                           postdec1	equ	0xFE5
   482                           fsr1l	equ	0xFE1
   483                           
   484 ;; *************** function _Init *****************
   485 ;; Defined at:
   486 ;;		line 30 in file "init.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;		None
   491 ;; Return value:  Size  Location     Type
   492 ;;		None               void
   493 ;; Registers used:
   494 ;;		wreg, status,2, cstack
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   504 ;;Total ram usage:        0 bytes
   505 ;; Hardware stack levels used:    1
   506 ;; Hardware stack levels required when called:    5
   507 ;; This function calls:
   508 ;;		_InitAnsel
   509 ;;		_InitInterrupt
   510 ;;		_InitOsc
   511 ;;		_InitPort
   512 ;;		_InitSpi
   513 ;;		_InitTimer
   514 ;;		_InitTris
   515 ;;		_InitUart
   516 ;; This function is called by:
   517 ;;		_main
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           	psect	text1
   522  000BD2                     __ptext1:
   523                           	opt stack 0
   524  000BD2                     _Init:
   525                           	opt stack 25
   526                           
   527                           ;init.c: 31: InitPort();
   528                           
   529                           ;incstack = 0
   530  000BD2  EC26  F006         	call	_InitPort	;wreg free
   531                           
   532                           ;init.c: 32: InitTris();
   533  000BD6  EC1B  F006         	call	_InitTris	;wreg free
   534                           
   535                           ;init.c: 33: InitAnsel();
   536  000BDA  EC0B  F006         	call	_InitAnsel	;wreg free
   537                           
   538                           ;init.c: 34: InitOsc();
   539  000BDE  EC69  F006         	call	_InitOsc	;wreg free
   540                           
   541                           ;init.c: 35: InitUart();
   542  000BE2  EC6C  F006         	call	_InitUart	;wreg free
   543                           
   544                           ;init.c: 36: InitSpi();
   545  000BE6  EC5C  F006         	call	_InitSpi	;wreg free
   546                           
   547                           ;init.c: 37: InitTimer();
   548  000BEA  EC9C  F005         	call	_InitTimer	;wreg free
   549                           
   550                           ;init.c: 38: InitInterrupt();
   551  000BEE  EC65  F006         	call	_InitInterrupt	;wreg free
   552  000BF2  0012               	return		;funcret
   553  000BF4                     __end_of_Init:
   554                           	opt stack 0
   555                           tblptru	equ	0xFF8
   556                           tblptrh	equ	0xFF7
   557                           tblptrl	equ	0xFF6
   558                           tablat	equ	0xFF5
   559                           postinc0	equ	0xFEE
   560                           wreg	equ	0xFE8
   561                           postdec1	equ	0xFE5
   562                           fsr1l	equ	0xFE1
   563                           
   564 ;; *************** function _InitUart *****************
   565 ;; Defined at:
   566 ;;		line 79 in file "init.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;		None               void
   573 ;; Registers used:
   574 ;;		None
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   584 ;;Total ram usage:        0 bytes
   585 ;; Hardware stack levels used:    1
   586 ;; Hardware stack levels required when called:    4
   587 ;; This function calls:
   588 ;;		Nothing
   589 ;; This function is called by:
   590 ;;		_Init
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           	psect	text2
   595  000CD8                     __ptext2:
   596                           	opt stack 0
   597  000CD8                     _InitUart:
   598                           	opt stack 25
   599                           
   600                           ;incstack = 0
   601  000CD8  0012               	return		;funcret
   602  000CDA                     __end_of_InitUart:
   603                           	opt stack 0
   604                           tblptru	equ	0xFF8
   605                           tblptrh	equ	0xFF7
   606                           tblptrl	equ	0xFF6
   607                           tablat	equ	0xFF5
   608                           postinc0	equ	0xFEE
   609                           wreg	equ	0xFE8
   610                           postdec1	equ	0xFE5
   611                           fsr1l	equ	0xFE1
   612                           
   613 ;; *************** function _InitTris *****************
   614 ;; Defined at:
   615 ;;		line 53 in file "init.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;		None
   618 ;; Auto vars:     Size  Location     Type
   619 ;;		None
   620 ;; Return value:  Size  Location     Type
   621 ;;		None               void
   622 ;; Registers used:
   623 ;;		wreg, status,2
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   633 ;;Total ram usage:        0 bytes
   634 ;; Hardware stack levels used:    1
   635 ;; Hardware stack levels required when called:    4
   636 ;; This function calls:
   637 ;;		Nothing
   638 ;; This function is called by:
   639 ;;		_Init
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           	psect	text3
   644  000C36                     __ptext3:
   645                           	opt stack 0
   646  000C36                     _InitTris:
   647                           	opt stack 25
   648                           
   649                           ;init.c: 54: TRISA = 0b00000000;
   650                           
   651                           ;incstack = 0
   652  000C36  0E00               	movlw	0
   653  000C38  6E92               	movwf	3986,c	;volatile
   654                           
   655                           ;init.c: 55: TRISB = 0b00010000;
   656  000C3A  0E10               	movlw	16
   657  000C3C  6E93               	movwf	3987,c	;volatile
   658                           
   659                           ;init.c: 56: TRISC = 0b10010001;
   660  000C3E  0E91               	movlw	145
   661  000C40  6E94               	movwf	3988,c	;volatile
   662                           
   663                           ;init.c: 57: TRISD = 0b01010000;
   664  000C42  0E50               	movlw	80
   665  000C44  6E95               	movwf	3989,c	;volatile
   666                           
   667                           ;init.c: 58: TRISE = 0b00000000;
   668  000C46  0E00               	movlw	0
   669  000C48  6E96               	movwf	3990,c	;volatile
   670  000C4A  0012               	return		;funcret
   671  000C4C                     __end_of_InitTris:
   672                           	opt stack 0
   673                           tblptru	equ	0xFF8
   674                           tblptrh	equ	0xFF7
   675                           tblptrl	equ	0xFF6
   676                           tablat	equ	0xFF5
   677                           postinc0	equ	0xFEE
   678                           wreg	equ	0xFE8
   679                           postdec1	equ	0xFE5
   680                           fsr1l	equ	0xFE1
   681                           
   682 ;; *************** function _InitTimer *****************
   683 ;; Defined at:
   684 ;;		line 110 in file "init.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;		None
   687 ;; Auto vars:     Size  Location     Type
   688 ;;		None
   689 ;; Return value:  Size  Location     Type
   690 ;;		None               void
   691 ;; Registers used:
   692 ;;		wreg, status,2
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   702 ;;Total ram usage:        0 bytes
   703 ;; Hardware stack levels used:    1
   704 ;; Hardware stack levels required when called:    4
   705 ;; This function calls:
   706 ;;		Nothing
   707 ;; This function is called by:
   708 ;;		_Init
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text4
   713  000B38                     __ptext4:
   714                           	opt stack 0
   715  000B38                     _InitTimer:
   716                           	opt stack 25
   717                           
   718                           ;init.c: 113: T3GCONbits.TMR3GE = 1;
   719                           
   720                           ;incstack = 0
   721  000B38  8EB4               	bsf	4020,7,c	;volatile
   722                           
   723                           ;init.c: 114: T3GCONbits.T3GSPM = 0;
   724  000B3A  98B4               	bcf	4020,4,c	;volatile
   725                           
   726                           ;init.c: 115: T3GCONbits.T3GTM = 0;
   727  000B3C  9AB4               	bcf	4020,5,c	;volatile
   728                           
   729                           ;init.c: 116: T3GCONbits.T3GPOL = 1;
   730  000B3E  8CB4               	bsf	4020,6,c	;volatile
   731                           
   732                           ;init.c: 117: T3GCONbits.T3GSS = 0b00;
   733  000B40  0EFC               	movlw	-4
   734  000B42  16B4               	andwf	4020,f,c	;volatile
   735                           
   736                           ;init.c: 119: T3CONbits.TMR3CS = 0b00;
   737  000B44  0E3F               	movlw	-193
   738  000B46  16B1               	andwf	4017,f,c	;volatile
   739                           
   740                           ;init.c: 120: T3CONbits.T3CKPS = 0b00;
   741  000B48  0ECF               	movlw	-49
   742  000B4A  16B1               	andwf	4017,f,c	;volatile
   743                           
   744                           ;init.c: 121: T3CONbits.nT3SYNC = 1;
   745  000B4C  84B1               	bsf	4017,2,c	;volatile
   746                           
   747                           ;init.c: 122: T3CONbits.TMR3ON = 1;
   748  000B4E  80B1               	bsf	4017,0,c	;volatile
   749                           
   750                           ;init.c: 126: T5GCONbits.TMR5GE = 1;
   751  000B50  010F               	movlb	15	; () banked
   752  000B52  8F4D               	bsf	77,7,b	;volatile
   753                           
   754                           ; BSR set to: 15
   755                           ;init.c: 127: T5GCONbits.T5GSPM = 0;
   756  000B54  010F               	movlb	15	; () banked
   757  000B56  994D               	bcf	77,4,b	;volatile
   758                           
   759                           ; BSR set to: 15
   760                           ;init.c: 128: T5GCONbits.T5GTM = 0;
   761  000B58  010F               	movlb	15	; () banked
   762  000B5A  9B4D               	bcf	77,5,b	;volatile
   763                           
   764                           ; BSR set to: 15
   765                           ;init.c: 129: T5GCONbits.T5GPOL = 1;
   766  000B5C  010F               	movlb	15	; () banked
   767  000B5E  8D4D               	bsf	77,6,b	;volatile
   768                           
   769                           ;init.c: 130: T5GCONbits.T5GSS = 0b00;
   770  000B60  0EFC               	movlw	-4
   771  000B62  010F               	movlb	15	; () banked
   772  000B64  174D               	andwf	77,f,b	;volatile
   773                           
   774                           ;init.c: 132: T5CONbits.TMR5CS = 0b00;
   775  000B66  0E3F               	movlw	-193
   776  000B68  010F               	movlb	15	; () banked
   777  000B6A  174E               	andwf	78,f,b	;volatile
   778                           
   779                           ;init.c: 133: T5CONbits.T5CKPS = 0b00;
   780  000B6C  0ECF               	movlw	-49
   781  000B6E  010F               	movlb	15	; () banked
   782  000B70  174E               	andwf	78,f,b	;volatile
   783                           
   784                           ; BSR set to: 15
   785                           ;init.c: 134: T5CONbits.nT5SYNC = 1;
   786  000B72  010F               	movlb	15	; () banked
   787  000B74  854E               	bsf	78,2,b	;volatile
   788                           
   789                           ; BSR set to: 15
   790                           ;init.c: 135: T5CONbits.TMR5ON = 1;
   791  000B76  010F               	movlb	15	; () banked
   792  000B78  814E               	bsf	78,0,b	;volatile
   793                           
   794                           ; BSR set to: 15
   795  000B7A  0012               	return		;funcret
   796  000B7C                     __end_of_InitTimer:
   797                           	opt stack 0
   798                           tblptru	equ	0xFF8
   799                           tblptrh	equ	0xFF7
   800                           tblptrl	equ	0xFF6
   801                           tablat	equ	0xFF5
   802                           postinc0	equ	0xFEE
   803                           wreg	equ	0xFE8
   804                           postdec1	equ	0xFE5
   805                           fsr1l	equ	0xFE1
   806                           
   807 ;; *************** function _InitSpi *****************
   808 ;; Defined at:
   809 ;;		line 92 in file "init.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;		None               void
   816 ;; Registers used:
   817 ;;		wreg, status,2
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;Total ram usage:        0 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; Hardware stack levels required when called:    4
   830 ;; This function calls:
   831 ;;		Nothing
   832 ;; This function is called by:
   833 ;;		_Init
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text5
   838  000CB8                     __ptext5:
   839                           	opt stack 0
   840  000CB8                     _InitSpi:
   841                           	opt stack 25
   842                           
   843                           ;init.c: 93: SSP1STAT = 0b00000000;
   844                           
   845                           ; BSR set to: 15
   846                           ;incstack = 0
   847  000CB8  0E00               	movlw	0
   848  000CBA  6EC7               	movwf	4039,c	;volatile
   849                           
   850                           ;init.c: 94: SSP1CON1 = 0b00100001;
   851  000CBC  0E21               	movlw	33
   852  000CBE  6EC6               	movwf	4038,c	;volatile
   853  000CC0  0012               	return		;funcret
   854  000CC2                     __end_of_InitSpi:
   855                           	opt stack 0
   856                           tblptru	equ	0xFF8
   857                           tblptrh	equ	0xFF7
   858                           tblptrl	equ	0xFF6
   859                           tablat	equ	0xFF5
   860                           postinc0	equ	0xFEE
   861                           wreg	equ	0xFE8
   862                           postdec1	equ	0xFE5
   863                           fsr1l	equ	0xFE1
   864                           
   865 ;; *************** function _InitPort *****************
   866 ;; Defined at:
   867 ;;		line 43 in file "init.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;		None
   870 ;; Auto vars:     Size  Location     Type
   871 ;;		None
   872 ;; Return value:  Size  Location     Type
   873 ;;		None               void
   874 ;; Registers used:
   875 ;;		wreg, status,2
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   885 ;;Total ram usage:        0 bytes
   886 ;; Hardware stack levels used:    1
   887 ;; Hardware stack levels required when called:    4
   888 ;; This function calls:
   889 ;;		Nothing
   890 ;; This function is called by:
   891 ;;		_Init
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text6
   896  000C4C                     __ptext6:
   897                           	opt stack 0
   898  000C4C                     _InitPort:
   899                           	opt stack 25
   900                           
   901                           ;init.c: 44: PORTA = 0b00010000;
   902                           
   903                           ;incstack = 0
   904  000C4C  0E10               	movlw	16
   905  000C4E  6E80               	movwf	3968,c	;volatile
   906                           
   907                           ;init.c: 45: PORTB = 0b00001000;
   908  000C50  0E08               	movlw	8
   909  000C52  6E81               	movwf	3969,c	;volatile
   910                           
   911                           ;init.c: 46: PORTC = 0b00000000;
   912  000C54  0E00               	movlw	0
   913  000C56  6E82               	movwf	3970,c	;volatile
   914                           
   915                           ;init.c: 47: PORTD = 0b00001000;
   916  000C58  0E08               	movlw	8
   917  000C5A  6E83               	movwf	3971,c	;volatile
   918                           
   919                           ;init.c: 48: PORTE = 0b00000000;
   920  000C5C  0E00               	movlw	0
   921  000C5E  6E84               	movwf	3972,c	;volatile
   922  000C60  0012               	return		;funcret
   923  000C62                     __end_of_InitPort:
   924                           	opt stack 0
   925                           tblptru	equ	0xFF8
   926                           tblptrh	equ	0xFF7
   927                           tblptrl	equ	0xFF6
   928                           tablat	equ	0xFF5
   929                           postinc0	equ	0xFEE
   930                           wreg	equ	0xFE8
   931                           postdec1	equ	0xFE5
   932                           fsr1l	equ	0xFE1
   933                           
   934 ;; *************** function _InitOsc *****************
   935 ;; Defined at:
   936 ;;		line 73 in file "init.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;		None
   939 ;; Auto vars:     Size  Location     Type
   940 ;;		None
   941 ;; Return value:  Size  Location     Type
   942 ;;		None               void
   943 ;; Registers used:
   944 ;;		wreg, status,2
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;Total ram usage:        0 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; Hardware stack levels required when called:    4
   957 ;; This function calls:
   958 ;;		Nothing
   959 ;; This function is called by:
   960 ;;		_Init
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text7
   965  000CD2                     __ptext7:
   966                           	opt stack 0
   967  000CD2                     _InitOsc:
   968                           	opt stack 25
   969                           
   970                           ;init.c: 74: OSCCON = 0b01110111;
   971                           
   972                           ;incstack = 0
   973  000CD2  0E77               	movlw	119
   974  000CD4  6ED3               	movwf	4051,c	;volatile
   975  000CD6  0012               	return		;funcret
   976  000CD8                     __end_of_InitOsc:
   977                           	opt stack 0
   978                           tblptru	equ	0xFF8
   979                           tblptrh	equ	0xFF7
   980                           tblptrl	equ	0xFF6
   981                           tablat	equ	0xFF5
   982                           postinc0	equ	0xFEE
   983                           wreg	equ	0xFE8
   984                           postdec1	equ	0xFE5
   985                           fsr1l	equ	0xFE1
   986                           
   987 ;; *************** function _InitInterrupt *****************
   988 ;; Defined at:
   989 ;;		line 144 in file "init.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;		None
   992 ;; Auto vars:     Size  Location     Type
   993 ;;		None
   994 ;; Return value:  Size  Location     Type
   995 ;;		None               void
   996 ;; Registers used:
   997 ;;		None
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;Total ram usage:        0 bytes
  1008 ;; Hardware stack levels used:    1
  1009 ;; Hardware stack levels required when called:    4
  1010 ;; This function calls:
  1011 ;;		Nothing
  1012 ;; This function is called by:
  1013 ;;		_Init
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           	psect	text8
  1018  000CCA                     __ptext8:
  1019                           	opt stack 0
  1020  000CCA                     _InitInterrupt:
  1021                           	opt stack 25
  1022                           
  1023                           ;init.c: 145: GIE = 1;
  1024                           
  1025                           ;incstack = 0
  1026  000CCA  8EF2               	bsf	intcon,7,c	;volatile
  1027                           
  1028                           ;init.c: 146: PEIE = 1;
  1029  000CCC  8CF2               	bsf	intcon,6,c	;volatile
  1030                           
  1031                           ;init.c: 148: TMR3GIE = 1;
  1032  000CCE  82A3               	bsf	4003,1,c	;volatile
  1033  000CD0  0012               	return		;funcret
  1034  000CD2                     __end_of_InitInterrupt:
  1035                           	opt stack 0
  1036                           tblptru	equ	0xFF8
  1037                           tblptrh	equ	0xFF7
  1038                           tblptrl	equ	0xFF6
  1039                           tablat	equ	0xFF5
  1040                           intcon	equ	0xFF2
  1041                           postinc0	equ	0xFEE
  1042                           wreg	equ	0xFE8
  1043                           postdec1	equ	0xFE5
  1044                           fsr1l	equ	0xFE1
  1045                           
  1046 ;; *************** function _InitAnsel *****************
  1047 ;; Defined at:
  1048 ;;		line 63 in file "init.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;		None
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;		None               void
  1055 ;; Registers used:
  1056 ;;		wreg, status,2
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1066 ;;Total ram usage:        0 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; Hardware stack levels required when called:    4
  1069 ;; This function calls:
  1070 ;;		Nothing
  1071 ;; This function is called by:
  1072 ;;		_Init
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text9
  1077  000C16                     __ptext9:
  1078                           	opt stack 0
  1079  000C16                     _InitAnsel:
  1080                           	opt stack 25
  1081                           
  1082                           ;init.c: 64: ANSELA = 0b00000000;
  1083                           
  1084                           ;incstack = 0
  1085  000C16  0E00               	movlw	0
  1086  000C18  010F               	movlb	15	; () banked
  1087  000C1A  6F38               	movwf	56,b	;volatile
  1088                           
  1089                           ;init.c: 65: ANSELB = 0b00000000;
  1090  000C1C  0E00               	movlw	0
  1091  000C1E  010F               	movlb	15	; () banked
  1092  000C20  6F39               	movwf	57,b	;volatile
  1093                           
  1094                           ;init.c: 66: ANSELC = 0b00000000;
  1095  000C22  0E00               	movlw	0
  1096  000C24  010F               	movlb	15	; () banked
  1097  000C26  6F3A               	movwf	58,b	;volatile
  1098                           
  1099                           ;init.c: 67: ANSELD = 0b00000000;
  1100  000C28  0E00               	movlw	0
  1101  000C2A  010F               	movlb	15	; () banked
  1102  000C2C  6F3B               	movwf	59,b	;volatile
  1103                           
  1104                           ;init.c: 68: ANSELE = 0b00000000;
  1105  000C2E  0E00               	movlw	0
  1106  000C30  010F               	movlb	15	; () banked
  1107  000C32  6F3C               	movwf	60,b	;volatile
  1108                           
  1109                           ; BSR set to: 15
  1110  000C34  0012               	return		;funcret
  1111  000C36                     __end_of_InitAnsel:
  1112                           	opt stack 0
  1113                           tblptru	equ	0xFF8
  1114                           tblptrh	equ	0xFF7
  1115                           tblptrl	equ	0xFF6
  1116                           tablat	equ	0xFF5
  1117                           intcon	equ	0xFF2
  1118                           postinc0	equ	0xFEE
  1119                           wreg	equ	0xFE8
  1120                           postdec1	equ	0xFE5
  1121                           fsr1l	equ	0xFE1
  1122                           
  1123 ;; *************** function _Isr *****************
  1124 ;; Defined at:
  1125 ;;		line 30 in file "interrupt.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;		None               void
  1132 ;; Registers used:
  1133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1141 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1142 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1143 ;;Total ram usage:       14 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; Hardware stack levels required when called:    3
  1146 ;; This function calls:
  1147 ;;		_CheckThrottle
  1148 ;;		_CompareFrames
  1149 ;;		_ModeCheck
  1150 ;;		_ReadHeight
  1151 ;;		_ReadObject
  1152 ;;		_StartHeightMeasure
  1153 ;; This function is called by:
  1154 ;;		Interrupt level 2
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           	psect	intcode
  1159  000008                     __pintcode:
  1160                           	opt stack 0
  1161  000008                     _Isr:
  1162                           	opt stack 25
  1163                           
  1164                           ; BSR set to: 15
  1165                           ;incstack = 0
  1166  000008  8258               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1167  00000A  CFFA F03B          	movff	pclath,??_Isr
  1168  00000E  CFFB F03C          	movff	pclatu,??_Isr+1
  1169  000012  CFE9 F03D          	movff	fsr0l,??_Isr+2
  1170  000016  CFEA F03E          	movff	fsr0h,??_Isr+3
  1171  00001A  CFE1 F03F          	movff	fsr1l,??_Isr+4
  1172  00001E  CFE2 F040          	movff	fsr1h,??_Isr+5
  1173  000022  CFD9 F041          	movff	fsr2l,??_Isr+6
  1174  000026  CFDA F042          	movff	fsr2h,??_Isr+7
  1175  00002A  CFF3 F043          	movff	prodl,??_Isr+8
  1176  00002E  CFF4 F044          	movff	prodh,??_Isr+9
  1177  000032  CFF6 F045          	movff	tblptrl,??_Isr+10
  1178  000036  CFF7 F046          	movff	tblptrh,??_Isr+11
  1179  00003A  CFF8 F047          	movff	tblptru,??_Isr+12
  1180  00003E  CFF5 F048          	movff	tablat,??_Isr+13
  1181                           
  1182                           ;interrupt.c: 31: __nop();
  1183  000042  F000               	nop	
  1184                           
  1185                           ;interrupt.c: 32: if(TMR3GIF == 1) {
  1186  000044  A2A4               	btfss	4004,1,c	;volatile
  1187  000046  D015               	goto	i2l406
  1188                           
  1189                           ;interrupt.c: 33: TMR3GIF = 0;
  1190  000048  92A4               	bcf	4004,1,c	;volatile
  1191                           
  1192                           ;interrupt.c: 34: ModeCheck();
  1193  00004A  ECBE  F005         	call	_ModeCheck	;wreg free
  1194                           
  1195                           ;interrupt.c: 35: StartHeightMeasure();
  1196  00004E  EC31  F006         	call	_StartHeightMeasure	;wreg free
  1197                           
  1198                           ;interrupt.c: 36: ReadObject(1,3,5);
  1199  000052  0E00               	movlw	0
  1200  000054  6E33               	movwf	ReadObject@des_obj+1,c
  1201  000056  0E03               	movlw	3
  1202  000058  6E32               	movwf	ReadObject@des_obj,c
  1203  00005A  0E05               	movlw	5
  1204  00005C  6E34               	movwf	ReadObject@max_obj,c
  1205  00005E  0E01               	movlw	1
  1206  000060  ECB8  F001         	call	_ReadObject
  1207                           
  1208                           ;interrupt.c: 37: CompareFrames();
  1209  000064  ECAB  F004         	call	_CompareFrames	;wreg free
  1210                           
  1211                           ;interrupt.c: 38: ReadHeight();
  1212  000068  ECFA  F005         	call	_ReadHeight	;wreg free
  1213                           
  1214                           ;interrupt.c: 39: CheckThrottle();
  1215  00006C  EC5B  F000         	call	_CheckThrottle	;wreg free
  1216                           
  1217                           ;interrupt.c: 41: }else if (TMR3IF == 1) {
  1218  000070  D002               	goto	i2l409
  1219  000072                     i2l406:
  1220  000072  B2A1               	btfsc	4001,1,c	;volatile
  1221                           
  1222                           ;interrupt.c: 42: TMR3IF = 0;
  1223  000074  92A1               	bcf	4001,1,c	;volatile
  1224  000076                     i2l409:
  1225  000076  C048  FFF5         	movff	??_Isr+13,tablat
  1226  00007A  C047  FFF8         	movff	??_Isr+12,tblptru
  1227  00007E  C046  FFF7         	movff	??_Isr+11,tblptrh
  1228  000082  C045  FFF6         	movff	??_Isr+10,tblptrl
  1229  000086  C044  FFF4         	movff	??_Isr+9,prodh
  1230  00008A  C043  FFF3         	movff	??_Isr+8,prodl
  1231  00008E  C042  FFDA         	movff	??_Isr+7,fsr2h
  1232  000092  C041  FFD9         	movff	??_Isr+6,fsr2l
  1233  000096  C040  FFE2         	movff	??_Isr+5,fsr1h
  1234  00009A  C03F  FFE1         	movff	??_Isr+4,fsr1l
  1235  00009E  C03E  FFEA         	movff	??_Isr+3,fsr0h
  1236  0000A2  C03D  FFE9         	movff	??_Isr+2,fsr0l
  1237  0000A6  C03C  FFFB         	movff	??_Isr+1,pclatu
  1238  0000AA  C03B  FFFA         	movff	??_Isr,pclath
  1239  0000AE  9258               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1240  0000B0  0011               	retfie		f
  1241  0000B2                     __end_of_Isr:
  1242                           	opt stack 0
  1243                           pclatu	equ	0xFFB
  1244                           pclath	equ	0xFFA
  1245                           tblptru	equ	0xFF8
  1246                           tblptrh	equ	0xFF7
  1247                           tblptrl	equ	0xFF6
  1248                           tablat	equ	0xFF5
  1249                           prodh	equ	0xFF4
  1250                           prodl	equ	0xFF3
  1251                           intcon	equ	0xFF2
  1252                           postinc0	equ	0xFEE
  1253                           fsr0h	equ	0xFEA
  1254                           fsr0l	equ	0xFE9
  1255                           wreg	equ	0xFE8
  1256                           postdec1	equ	0xFE5
  1257                           fsr1h	equ	0xFE2
  1258                           fsr1l	equ	0xFE1
  1259                           fsr2h	equ	0xFDA
  1260                           fsr2l	equ	0xFD9
  1261                           
  1262 ;; *************** function _StartHeightMeasure *****************
  1263 ;; Defined at:
  1264 ;;		line 27 in file "ultrasonic.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;		None
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;		None
  1269 ;; Return value:  Size  Location     Type
  1270 ;;		None               void
  1271 ;; Registers used:
  1272 ;;		wreg, status,2
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;Total ram usage:        0 bytes
  1283 ;; Hardware stack levels used:    1
  1284 ;; This function calls:
  1285 ;;		Nothing
  1286 ;; This function is called by:
  1287 ;;		_Isr
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text11
  1292  000C62                     __ptext11:
  1293                           	opt stack 0
  1294  000C62                     _StartHeightMeasure:
  1295                           	opt stack 27
  1296                           
  1297                           ;ultrasonic.c: 28: TMR5L = 0;
  1298                           
  1299                           ;incstack = 0
  1300  000C62  0E00               	movlw	0
  1301  000C64  010F               	movlb	15	; () banked
  1302  000C66  6F4F               	movwf	79,b	;volatile
  1303                           
  1304                           ;ultrasonic.c: 29: TMR5H = 0;
  1305  000C68  0E00               	movlw	0
  1306  000C6A  010F               	movlb	15	; () banked
  1307  000C6C  6F50               	movwf	80,b	;volatile
  1308                           
  1309                           ; BSR set to: 15
  1310                           ;ultrasonic.c: 30: PORTBbits.RB3 = 0;
  1311  000C6E  9681               	bcf	3969,3,c	;volatile
  1312                           
  1313                           ; BSR set to: 15
  1314  000C70  0012               	return		;funcret
  1315  000C72                     __end_of_StartHeightMeasure:
  1316                           	opt stack 0
  1317                           pclatu	equ	0xFFB
  1318                           pclath	equ	0xFFA
  1319                           tblptru	equ	0xFF8
  1320                           tblptrh	equ	0xFF7
  1321                           tblptrl	equ	0xFF6
  1322                           tablat	equ	0xFF5
  1323                           prodh	equ	0xFF4
  1324                           prodl	equ	0xFF3
  1325                           intcon	equ	0xFF2
  1326                           postinc0	equ	0xFEE
  1327                           fsr0h	equ	0xFEA
  1328                           fsr0l	equ	0xFE9
  1329                           wreg	equ	0xFE8
  1330                           postdec1	equ	0xFE5
  1331                           fsr1h	equ	0xFE2
  1332                           fsr1l	equ	0xFE1
  1333                           fsr2h	equ	0xFDA
  1334                           fsr2l	equ	0xFD9
  1335                           
  1336 ;; *************** function _ReadObject *****************
  1337 ;; Defined at:
  1338 ;;		line 27 in file "pixy.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  des_obj_type    1    wreg     unsigned char 
  1341 ;;  des_obj         2    5[COMRAM] unsigned int 
  1342 ;;  max_obj         1    7[COMRAM] unsigned char 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  des_obj_type    1    0[COMRAM] unsigned char 
  1345 ;;  checksum        2    8[COMRAM] unsigned int 
  1346 ;;  c_obj           1   11[COMRAM] unsigned char 
  1347 ;;  c               1   10[COMRAM] unsigned char 
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      unsigned char 
  1350 ;; Registers used:
  1351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1357 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1358 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1360 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1361 ;;Total ram usage:        7 bytes
  1362 ;; Hardware stack levels used:    1
  1363 ;; Hardware stack levels required when called:    1
  1364 ;; This function calls:
  1365 ;;		_ExchangeSpiWord
  1366 ;; This function is called by:
  1367 ;;		_Isr
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text12
  1372  000370                     __ptext12:
  1373                           	opt stack 0
  1374  000370                     _ReadObject:
  1375                           	opt stack 26
  1376                           
  1377                           ;pixy.c: 28: frame = 0;
  1378                           
  1379                           ; BSR set to: 15
  1380                           ;incstack = 0
  1381  000370  9257               	bcf	_frame/(0+8),_frame& (0+7),c
  1382                           
  1383                           ;pixy.c: 29: unsigned char c = 0;
  1384  000372  0E00               	movlw	0
  1385  000374  6E37               	movwf	ReadObject@c,c
  1386                           
  1387                           ;pixy.c: 30: for(unsigned char c_obj = 0; c_obj < max_obj; c_obj++) {
  1388  000376  0E00               	movlw	0
  1389  000378  6E38               	movwf	ReadObject@c_obj,c
  1390  00037A  D14A               	goto	i2l2376
  1391  00037C                     i2l529:
  1392                           
  1393                           ;pixy.c: 34: if(frame == 1) {
  1394  00037C  A257               	btfss	_frame/(0+8),_frame& (0+7),c
  1395  00037E  D07E               	goto	i2l534
  1396                           
  1397                           ;pixy.c: 35: w = ExchangeSpiWord(0x5a, 0);
  1398  000380  0E00               	movlw	0
  1399  000382  6E2D               	movwf	ExchangeSpiWord@byte2,c
  1400  000384  0E5A               	movlw	90
  1401  000386  EC77  F005         	call	_ExchangeSpiWord
  1402  00038A  C02D  F02B         	movff	?_ExchangeSpiWord,_w
  1403  00038E  C02E  F02C         	movff	?_ExchangeSpiWord+1,_w+1
  1404                           
  1405                           ;pixy.c: 36: if(w == 0xaa55) {
  1406  000392  0E55               	movlw	85
  1407  000394  182B               	xorwf	_w,w,c
  1408  000396  E10E               	bnz	i2l2318
  1409  000398  0EAA               	movlw	170
  1410  00039A  182C               	xorwf	_w+1,w,c
  1411  00039C  A4D8               	btfss	status,2,c
  1412  00039E  D00A               	goto	i2l2318
  1413                           
  1414                           ;pixy.c: 37: a_color[c_obj].type = 0xaa55;
  1415  0003A0  5038               	movf	ReadObject@c_obj,w,c
  1416  0003A2  0D0E               	mullw	14
  1417  0003A4  0E60               	movlw	low _a_color
  1418  0003A6  24F3               	addwf	prodl,w,c
  1419  0003A8  6ED9               	movwf	fsr2l,c
  1420  0003AA  0E00               	movlw	high _a_color
  1421  0003AC  20F4               	addwfc	prodh,w,c
  1422  0003AE  6EDA               	movwf	fsr2h,c
  1423  0003B0  0E55               	movlw	85
  1424  0003B2  D010               	goto	L1
  1425  0003B4                     i2l2318:
  1426  0003B4  0E56               	movlw	86
  1427  0003B6  182B               	xorwf	_w,w,c
  1428  0003B8  E161               	bnz	i2l534
  1429  0003BA  0EAA               	movlw	170
  1430  0003BC  182C               	xorwf	_w+1,w,c
  1431  0003BE  A4D8               	btfss	status,2,c
  1432  0003C0  D05D               	goto	i2l534
  1433                           
  1434                           ;pixy.c: 39: a_color[c_obj].type = 0xaa56;
  1435  0003C2  5038               	movf	ReadObject@c_obj,w,c
  1436  0003C4  0D0E               	mullw	14
  1437  0003C6  0E60               	movlw	low _a_color
  1438  0003C8  24F3               	addwf	prodl,w,c
  1439  0003CA  6ED9               	movwf	fsr2l,c
  1440  0003CC  0E00               	movlw	high _a_color
  1441  0003CE  20F4               	addwfc	prodh,w,c
  1442  0003D0  6EDA               	movwf	fsr2h,c
  1443  0003D2  0E56               	movlw	86
  1444  0003D4                     L1:
  1445  0003D4  6EDE               	movwf	postinc2,c
  1446  0003D6  0EAA               	movlw	170
  1447  0003D8  6EDD               	movwf	postdec2,c
  1448                           
  1449                           ;pixy.c: 40: }
  1450                           ;pixy.c: 41: }
  1451                           ;pixy.c: 42: while(frame == 0) {
  1452  0003DA  D050               	goto	i2l534
  1453  0003DC                     i2l2322:
  1454                           
  1455                           ;pixy.c: 43: w = ExchangeSpiWord(0x5a, 0);
  1456  0003DC  0E00               	movlw	0
  1457  0003DE  6E2D               	movwf	ExchangeSpiWord@byte2,c
  1458  0003E0  0E5A               	movlw	90
  1459  0003E2  EC77  F005         	call	_ExchangeSpiWord
  1460  0003E6  C02D  F02B         	movff	?_ExchangeSpiWord,_w
  1461  0003EA  C02E  F02C         	movff	?_ExchangeSpiWord+1,_w+1
  1462                           
  1463                           ;pixy.c: 44: if(lw == 0xaa55 && w == 0xaa55) {
  1464  0003EE  0E55               	movlw	85
  1465  0003F0  1827               	xorwf	_lw,w,c
  1466  0003F2  E117               	bnz	i2l2332
  1467  0003F4  0EAA               	movlw	170
  1468  0003F6  1828               	xorwf	_lw+1,w,c
  1469  0003F8  A4D8               	btfss	status,2,c
  1470  0003FA  D013               	goto	i2l2332
  1471  0003FC  0E55               	movlw	85
  1472  0003FE  182B               	xorwf	_w,w,c
  1473  000400  E110               	bnz	i2l2332
  1474  000402  0EAA               	movlw	170
  1475  000404  182C               	xorwf	_w+1,w,c
  1476  000406  A4D8               	btfss	status,2,c
  1477  000408  D00C               	goto	i2l2332
  1478                           
  1479                           ;pixy.c: 45: frame = 1;
  1480  00040A  8257               	bsf	_frame/(0+8),_frame& (0+7),c
  1481                           
  1482                           ;pixy.c: 46: obj_type = 0;
  1483  00040C  9657               	bcf	_obj_type/(0+8),_obj_type& (0+7),c
  1484                           
  1485                           ;pixy.c: 47: a_color[c_obj].type = 0xaa55;
  1486  00040E  5038               	movf	ReadObject@c_obj,w,c
  1487  000410  0D0E               	mullw	14
  1488  000412  0E60               	movlw	low _a_color
  1489  000414  24F3               	addwf	prodl,w,c
  1490  000416  6ED9               	movwf	fsr2l,c
  1491  000418  0E00               	movlw	high _a_color
  1492  00041A  20F4               	addwfc	prodh,w,c
  1493  00041C  6EDA               	movwf	fsr2h,c
  1494  00041E  0E55               	movlw	85
  1495  000420  D019               	goto	L2
  1496  000422                     i2l2332:
  1497  000422  0E55               	movlw	85
  1498  000424  1827               	xorwf	_lw,w,c
  1499  000426  E11A               	bnz	i2l2340
  1500  000428  0EAA               	movlw	170
  1501  00042A  1828               	xorwf	_lw+1,w,c
  1502  00042C  A4D8               	btfss	status,2,c
  1503  00042E  D016               	goto	i2l2340
  1504  000430  0E56               	movlw	86
  1505  000432  182B               	xorwf	_w,w,c
  1506  000434  E113               	bnz	i2l2340
  1507  000436  0EAA               	movlw	170
  1508  000438  182C               	xorwf	_w+1,w,c
  1509  00043A  A4D8               	btfss	status,2,c
  1510  00043C  D00F               	goto	i2l2340
  1511                           
  1512                           ;pixy.c: 49: frame = 1;
  1513  00043E  8257               	bsf	_frame/(0+8),_frame& (0+7),c
  1514                           
  1515                           ;pixy.c: 50: obj_type = 1;
  1516  000440  8657               	bsf	_obj_type/(0+8),_obj_type& (0+7),c
  1517                           
  1518                           ;pixy.c: 51: a_color[c_obj].type = 0xaa56;
  1519  000442  5038               	movf	ReadObject@c_obj,w,c
  1520  000444  0D0E               	mullw	14
  1521  000446  0E60               	movlw	low _a_color
  1522  000448  24F3               	addwf	prodl,w,c
  1523  00044A  6ED9               	movwf	fsr2l,c
  1524  00044C  0E00               	movlw	high _a_color
  1525  00044E  20F4               	addwfc	prodh,w,c
  1526  000450  6EDA               	movwf	fsr2h,c
  1527  000452  0E56               	movlw	86
  1528  000454                     L2:
  1529  000454  6EDE               	movwf	postinc2,c
  1530  000456  0EAA               	movlw	170
  1531  000458  6EDD               	movwf	postdec2,c
  1532                           
  1533                           ;pixy.c: 52: } else if(w == 0 && lw == 0){
  1534  00045A  D008               	goto	i2l537
  1535  00045C                     i2l2340:
  1536  00045C  502B               	movf	_w,w,c
  1537  00045E  102C               	iorwf	_w+1,w,c
  1538  000460  A4D8               	btfss	status,2,c
  1539  000462  D004               	goto	i2l537
  1540  000464  5027               	movf	_lw,w,c
  1541  000466  1028               	iorwf	_lw+1,w,c
  1542  000468  B4D8               	btfsc	status,2,c
  1543                           
  1544                           ;pixy.c: 53: frame = 0;
  1545  00046A  9257               	bcf	_frame/(0+8),_frame& (0+7),c
  1546  00046C                     i2l537:
  1547                           
  1548                           ;pixy.c: 54: }
  1549                           ;pixy.c: 55: lw = w;
  1550  00046C  C02B  F027         	movff	_w,_lw
  1551  000470  C02C  F028         	movff	_w+1,_lw+1
  1552                           
  1553                           ;pixy.c: 56: c++;
  1554  000474  2A37               	incf	ReadObject@c,f,c
  1555                           
  1556                           ;pixy.c: 57: if(c > 254) {
  1557  000476  2837               	incf	ReadObject@c,w,c
  1558  000478  B4D8               	btfsc	status,2,c
  1559  00047A  0012               	return	
  1560  00047C                     i2l534:
  1561  00047C  A257               	btfss	_frame/(0+8),_frame& (0+7),c
  1562  00047E  D7AE               	goto	i2l2322
  1563                           
  1564                           ;pixy.c: 59: }
  1565                           ;pixy.c: 60: }
  1566                           ;pixy.c: 62: unsigned int checksum = ExchangeSpiWord(0x5a, 0);
  1567  000480  0E00               	movlw	0
  1568  000482  6E2D               	movwf	ExchangeSpiWord@byte2,c
  1569  000484  0E5A               	movlw	90
  1570  000486  EC77  F005         	call	_ExchangeSpiWord
  1571  00048A  C02D  F035         	movff	?_ExchangeSpiWord,ReadObject@checksum
  1572  00048E  C02E  F036         	movff	?_ExchangeSpiWord+1,ReadObject@checksum+1
  1573                           
  1574                           ;pixy.c: 64: a_color[c_obj].num = ExchangeSpiWord(0x5a, 0);
  1575  000492  0E00               	movlw	0
  1576  000494  6E2D               	movwf	ExchangeSpiWord@byte2,c
  1577  000496  0E5A               	movlw	90
  1578  000498  EC77  F005         	call	_ExchangeSpiWord
  1579  00049C  5038               	movf	ReadObject@c_obj,w,c
  1580  00049E  0D0E               	mullw	14
  1581  0004A0  0E02               	movlw	2
  1582  0004A2  26F3               	addwf	prodl,f,c
  1583  0004A4  0E00               	movlw	0
  1584  0004A6  22F4               	addwfc	prodh,f,c
  1585  0004A8  0E60               	movlw	low _a_color
  1586  0004AA  24F3               	addwf	prodl,w,c
  1587  0004AC  6ED9               	movwf	fsr2l,c
  1588  0004AE  0E00               	movlw	high _a_color
  1589  0004B0  20F4               	addwfc	prodh,w,c
  1590  0004B2  6EDA               	movwf	fsr2h,c
  1591  0004B4  C02D  FFDE         	movff	?_ExchangeSpiWord,postinc2
  1592  0004B8  C02E  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
  1593                           
  1594                           ;pixy.c: 65: a_color[c_obj].pos_x = ExchangeSpiWord(0x5a, 0);
  1595  0004BC  0E00               	movlw	0
  1596  0004BE  6E2D               	movwf	ExchangeSpiWord@byte2,c
  1597  0004C0  0E5A               	movlw	90
  1598  0004C2  EC77  F005         	call	_ExchangeSpiWord
  1599  0004C6  5038               	movf	ReadObject@c_obj,w,c
  1600  0004C8  0D0E               	mullw	14
  1601  0004CA  0E04               	movlw	4
  1602  0004CC  26F3               	addwf	prodl,f,c
  1603  0004CE  0E00               	movlw	0
  1604  0004D0  22F4               	addwfc	prodh,f,c
  1605  0004D2  0E60               	movlw	low _a_color
  1606  0004D4  24F3               	addwf	prodl,w,c
  1607  0004D6  6ED9               	movwf	fsr2l,c
  1608  0004D8  0E00               	movlw	high _a_color
  1609  0004DA  20F4               	addwfc	prodh,w,c
  1610  0004DC  6EDA               	movwf	fsr2h,c
  1611  0004DE  C02D  FFDE         	movff	?_ExchangeSpiWord,postinc2
  1612  0004E2  C02E  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
  1613                           
  1614                           ;pixy.c: 66: a_color[c_obj].pos_y = ExchangeSpiWord(0x5a, 0);
  1615  0004E6  0E00               	movlw	0
  1616  0004E8  6E2D               	movwf	ExchangeSpiWord@byte2,c
  1617  0004EA  0E5A               	movlw	90
  1618  0004EC  EC77  F005         	call	_ExchangeSpiWord
  1619  0004F0  5038               	movf	ReadObject@c_obj,w,c
  1620  0004F2  0D0E               	mullw	14
  1621  0004F4  0E06               	movlw	6
  1622  0004F6  26F3               	addwf	prodl,f,c
  1623  0004F8  0E00               	movlw	0
  1624  0004FA  22F4               	addwfc	prodh,f,c
  1625  0004FC  0E60               	movlw	low _a_color
  1626  0004FE  24F3               	addwf	prodl,w,c
  1627  000500  6ED9               	movwf	fsr2l,c
  1628  000502  0E00               	movlw	high _a_color
  1629  000504  20F4               	addwfc	prodh,w,c
  1630  000506  6EDA               	movwf	fsr2h,c
  1631  000508  C02D  FFDE         	movff	?_ExchangeSpiWord,postinc2
  1632  00050C  C02E  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
  1633                           
  1634                           ;pixy.c: 67: a_color[c_obj].obj_width = ExchangeSpiWord(0x5a, 0);
  1635  000510  0E00               	movlw	0
  1636  000512  6E2D               	movwf	ExchangeSpiWord@byte2,c
  1637  000514  0E5A               	movlw	90
  1638  000516  EC77  F005         	call	_ExchangeSpiWord
  1639  00051A  5038               	movf	ReadObject@c_obj,w,c
  1640  00051C  0D0E               	mullw	14
  1641  00051E  0E08               	movlw	8
  1642  000520  26F3               	addwf	prodl,f,c
  1643  000522  0E00               	movlw	0
  1644  000524  22F4               	addwfc	prodh,f,c
  1645  000526  0E60               	movlw	low _a_color
  1646  000528  24F3               	addwf	prodl,w,c
  1647  00052A  6ED9               	movwf	fsr2l,c
  1648  00052C  0E00               	movlw	high _a_color
  1649  00052E  20F4               	addwfc	prodh,w,c
  1650  000530  6EDA               	movwf	fsr2h,c
  1651  000532  C02D  FFDE         	movff	?_ExchangeSpiWord,postinc2
  1652  000536  C02E  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
  1653                           
  1654                           ;pixy.c: 68: a_color[c_obj].obj_height = ExchangeSpiWord(0x5a, 0);
  1655  00053A  0E00               	movlw	0
  1656  00053C  6E2D               	movwf	ExchangeSpiWord@byte2,c
  1657  00053E  0E5A               	movlw	90
  1658  000540  EC77  F005         	call	_ExchangeSpiWord
  1659  000544  5038               	movf	ReadObject@c_obj,w,c
  1660  000546  0D0E               	mullw	14
  1661  000548  0E0A               	movlw	10
  1662  00054A  26F3               	addwf	prodl,f,c
  1663  00054C  0E00               	movlw	0
  1664  00054E  22F4               	addwfc	prodh,f,c
  1665  000550  0E60               	movlw	low _a_color
  1666  000552  24F3               	addwf	prodl,w,c
  1667  000554  6ED9               	movwf	fsr2l,c
  1668  000556  0E00               	movlw	high _a_color
  1669  000558  20F4               	addwfc	prodh,w,c
  1670  00055A  6EDA               	movwf	fsr2h,c
  1671  00055C  C02D  FFDE         	movff	?_ExchangeSpiWord,postinc2
  1672  000560  C02E  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
  1673                           
  1674                           ;pixy.c: 69: a_color[c_obj].angle = ExchangeSpiWord(0x5a, 0);
  1675  000564  0E00               	movlw	0
  1676  000566  6E2D               	movwf	ExchangeSpiWord@byte2,c
  1677  000568  0E5A               	movlw	90
  1678  00056A  EC77  F005         	call	_ExchangeSpiWord
  1679  00056E  5038               	movf	ReadObject@c_obj,w,c
  1680  000570  0D0E               	mullw	14
  1681  000572  0E0C               	movlw	12
  1682  000574  26F3               	addwf	prodl,f,c
  1683  000576  0E00               	movlw	0
  1684  000578  22F4               	addwfc	prodh,f,c
  1685  00057A  0E60               	movlw	low _a_color
  1686  00057C  24F3               	addwf	prodl,w,c
  1687  00057E  6ED9               	movwf	fsr2l,c
  1688  000580  0E00               	movlw	high _a_color
  1689  000582  20F4               	addwfc	prodh,w,c
  1690  000584  6EDA               	movwf	fsr2h,c
  1691  000586  C02D  FFDE         	movff	?_ExchangeSpiWord,postinc2
  1692  00058A  C02E  FFDD         	movff	?_ExchangeSpiWord+1,postdec2
  1693                           
  1694                           ;pixy.c: 71: a_frame[0].num = a_color[c_obj].num;
  1695  00058E  5038               	movf	ReadObject@c_obj,w,c
  1696  000590  0D0E               	mullw	14
  1697  000592  0E02               	movlw	2
  1698  000594  26F3               	addwf	prodl,f,c
  1699  000596  0E00               	movlw	0
  1700  000598  22F4               	addwfc	prodh,f,c
  1701  00059A  0E60               	movlw	low _a_color
  1702  00059C  24F3               	addwf	prodl,w,c
  1703  00059E  6ED9               	movwf	fsr2l,c
  1704  0005A0  0E00               	movlw	high _a_color
  1705  0005A2  20F4               	addwfc	prodh,w,c
  1706  0005A4  6EDA               	movwf	fsr2h,c
  1707  0005A6  CFDE F001          	movff	postinc2,_a_frame
  1708  0005AA  CFDD F002          	movff	postdec2,_a_frame+1
  1709                           
  1710                           ;pixy.c: 72: a_frame[0].pos_x = a_color[c_obj].pos_x;
  1711  0005AE  5038               	movf	ReadObject@c_obj,w,c
  1712  0005B0  0D0E               	mullw	14
  1713  0005B2  0E04               	movlw	4
  1714  0005B4  26F3               	addwf	prodl,f,c
  1715  0005B6  0E00               	movlw	0
  1716  0005B8  22F4               	addwfc	prodh,f,c
  1717  0005BA  0E60               	movlw	low _a_color
  1718  0005BC  24F3               	addwf	prodl,w,c
  1719  0005BE  6ED9               	movwf	fsr2l,c
  1720  0005C0  0E00               	movlw	high _a_color
  1721  0005C2  20F4               	addwfc	prodh,w,c
  1722  0005C4  6EDA               	movwf	fsr2h,c
  1723  0005C6  CFDE F003          	movff	postinc2,_a_frame+2
  1724  0005CA  CFDD F004          	movff	postdec2,_a_frame+3
  1725                           
  1726                           ;pixy.c: 73: a_frame[0].pos_y = a_color[c_obj].pos_y;
  1727  0005CE  5038               	movf	ReadObject@c_obj,w,c
  1728  0005D0  0D0E               	mullw	14
  1729  0005D2  0E06               	movlw	6
  1730  0005D4  26F3               	addwf	prodl,f,c
  1731  0005D6  0E00               	movlw	0
  1732  0005D8  22F4               	addwfc	prodh,f,c
  1733  0005DA  0E60               	movlw	low _a_color
  1734  0005DC  24F3               	addwf	prodl,w,c
  1735  0005DE  6ED9               	movwf	fsr2l,c
  1736  0005E0  0E00               	movlw	high _a_color
  1737  0005E2  20F4               	addwfc	prodh,w,c
  1738  0005E4  6EDA               	movwf	fsr2h,c
  1739  0005E6  CFDE F005          	movff	postinc2,_a_frame+4
  1740  0005EA  CFDD F006          	movff	postdec2,_a_frame+5
  1741                           
  1742                           ;pixy.c: 74: a_frame[0].angle = a_color[c_obj].angle;
  1743  0005EE  5038               	movf	ReadObject@c_obj,w,c
  1744  0005F0  0D0E               	mullw	14
  1745  0005F2  0E0C               	movlw	12
  1746  0005F4  26F3               	addwf	prodl,f,c
  1747  0005F6  0E00               	movlw	0
  1748  0005F8  22F4               	addwfc	prodh,f,c
  1749  0005FA  0E60               	movlw	low _a_color
  1750  0005FC  24F3               	addwf	prodl,w,c
  1751  0005FE  6ED9               	movwf	fsr2l,c
  1752  000600  0E00               	movlw	high _a_color
  1753  000602  20F4               	addwfc	prodh,w,c
  1754  000604  6EDA               	movwf	fsr2h,c
  1755  000606  CFDE F009          	movff	postinc2,_a_frame+8
  1756  00060A  CFDD F00A          	movff	postdec2,_a_frame+9
  1757  00060E  2A38               	incf	ReadObject@c_obj,f,c
  1758  000610                     i2l2376:
  1759  000610  5034               	movf	ReadObject@max_obj,w,c
  1760  000612  5C38               	subwf	ReadObject@c_obj,w,c
  1761  000614  B0D8               	btfsc	status,0,c
  1762  000616  0012               	return	
  1763  000618  D6B1               	goto	i2l529
  1764  00061A                     __end_of_ReadObject:
  1765                           	opt stack 0
  1766                           pclatu	equ	0xFFB
  1767                           pclath	equ	0xFFA
  1768                           tblptru	equ	0xFF8
  1769                           tblptrh	equ	0xFF7
  1770                           tblptrl	equ	0xFF6
  1771                           tablat	equ	0xFF5
  1772                           prodh	equ	0xFF4
  1773                           prodl	equ	0xFF3
  1774                           intcon	equ	0xFF2
  1775                           postinc0	equ	0xFEE
  1776                           fsr0h	equ	0xFEA
  1777                           fsr0l	equ	0xFE9
  1778                           wreg	equ	0xFE8
  1779                           postdec1	equ	0xFE5
  1780                           fsr1h	equ	0xFE2
  1781                           fsr1l	equ	0xFE1
  1782                           postinc2	equ	0xFDE
  1783                           postdec2	equ	0xFDD
  1784                           fsr2h	equ	0xFDA
  1785                           fsr2l	equ	0xFD9
  1786                           status	equ	0xFD8
  1787                           
  1788 ;; *************** function _ExchangeSpiWord *****************
  1789 ;; Defined at:
  1790 ;;		line 27 in file "communication.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  byte1           1    wreg     unsigned char 
  1793 ;;  byte2           1    0[COMRAM] unsigned char 
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;  byte1           1    2[COMRAM] unsigned char 
  1796 ;;  SPI_word        2    3[COMRAM] unsigned int 
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  2    0[COMRAM] unsigned int 
  1799 ;; Registers used:
  1800 ;;		wreg, status,2, status,0, cstack
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1807 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1809 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1810 ;;Total ram usage:        5 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; This function calls:
  1813 ;;		Nothing
  1814 ;; This function is called by:
  1815 ;;		_ReadObject
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text13
  1820  000AEE                     __ptext13:
  1821                           	opt stack 0
  1822  000AEE                     _ExchangeSpiWord:
  1823                           	opt stack 26
  1824                           
  1825                           ;incstack = 0
  1826                           ;ExchangeSpiWord@byte1 stored from wreg
  1827  000AEE  6E2F               	movwf	ExchangeSpiWord@byte1,c
  1828                           
  1829                           ;communication.c: 28: __nop();
  1830  000AF0  F000               	nop	
  1831                           
  1832                           ;communication.c: 29: unsigned int SPI_word = 0;
  1833  000AF2  0E00               	movlw	0
  1834  000AF4  6E31               	movwf	ExchangeSpiWord@SPI_word+1,c
  1835  000AF6  0E00               	movlw	0
  1836  000AF8  6E30               	movwf	ExchangeSpiWord@SPI_word,c
  1837                           
  1838                           ;communication.c: 30: if(SSP1IF == 1) {
  1839  000AFA  A69E               	btfss	3998,3,c	;volatile
  1840  000AFC  D005               	goto	i2l2106
  1841                           
  1842                           ;communication.c: 31: _delay((unsigned long)((100)*(16000000/4000000.0)));
  1843  000AFE  0E85               	movlw	133
  1844  000B00                     i2u173_47:
  1845  000B00  2EE8               	decfsz	wreg,f,c
  1846  000B02  D7FE               	goto	i2u173_47
  1847  000B04  F000               	nop	
  1848                           
  1849                           ;communication.c: 32: SSP1IF = 0;
  1850  000B06  969E               	bcf	3998,3,c	;volatile
  1851  000B08                     i2l2106:
  1852                           
  1853                           ;communication.c: 33: }
  1854                           ;communication.c: 34: SSP1BUF = byte1;
  1855  000B08  C02F  FFC9         	movff	ExchangeSpiWord@byte1,4041	;volatile
  1856  000B0C                     i2l741:
  1857  000B0C  A69E               	btfss	3998,3,c	;volatile
  1858  000B0E  D7FE               	goto	i2l741
  1859                           
  1860                           ;communication.c: 36: SSP1IF = 0;
  1861  000B10  969E               	bcf	3998,3,c	;volatile
  1862                           
  1863                           ;communication.c: 37: SPI_word = SSP1BUF;
  1864  000B12  CFC9 F030          	movff	4041,ExchangeSpiWord@SPI_word	;volatile
  1865  000B16  6A31               	clrf	ExchangeSpiWord@SPI_word+1,c
  1866                           
  1867                           ;communication.c: 38: SPI_word <<= 8;
  1868  000B18  5030               	movf	ExchangeSpiWord@SPI_word,w,c
  1869  000B1A  6E31               	movwf	ExchangeSpiWord@SPI_word+1,c
  1870  000B1C  6A30               	clrf	ExchangeSpiWord@SPI_word,c
  1871                           
  1872                           ;communication.c: 39: SSP1BUF = byte2;
  1873  000B1E  C02D  FFC9         	movff	ExchangeSpiWord@byte2,4041	;volatile
  1874  000B22                     i2l744:
  1875  000B22  A69E               	btfss	3998,3,c	;volatile
  1876  000B24  D7FE               	goto	i2l744
  1877                           
  1878                           ;communication.c: 41: SSP1IF = 0;
  1879  000B26  969E               	bcf	3998,3,c	;volatile
  1880                           
  1881                           ;communication.c: 42: SPI_word |= SSP1BUF;
  1882  000B28  50C9               	movf	4041,w,c	;volatile
  1883  000B2A  1230               	iorwf	ExchangeSpiWord@SPI_word,f,c
  1884                           
  1885                           ;communication.c: 43: __nop();
  1886  000B2C  F000               	nop	
  1887                           
  1888                           ;communication.c: 44: return (SPI_word);
  1889  000B2E  C030  F02D         	movff	ExchangeSpiWord@SPI_word,?_ExchangeSpiWord
  1890  000B32  C031  F02E         	movff	ExchangeSpiWord@SPI_word+1,?_ExchangeSpiWord+1
  1891  000B36  0012               	return	
  1892  000B38                     __end_of_ExchangeSpiWord:
  1893                           	opt stack 0
  1894                           pclatu	equ	0xFFB
  1895                           pclath	equ	0xFFA
  1896                           tblptru	equ	0xFF8
  1897                           tblptrh	equ	0xFF7
  1898                           tblptrl	equ	0xFF6
  1899                           tablat	equ	0xFF5
  1900                           prodh	equ	0xFF4
  1901                           prodl	equ	0xFF3
  1902                           intcon	equ	0xFF2
  1903                           postinc0	equ	0xFEE
  1904                           fsr0h	equ	0xFEA
  1905                           fsr0l	equ	0xFE9
  1906                           wreg	equ	0xFE8
  1907                           postdec1	equ	0xFE5
  1908                           fsr1h	equ	0xFE2
  1909                           fsr1l	equ	0xFE1
  1910                           postinc2	equ	0xFDE
  1911                           postdec2	equ	0xFDD
  1912                           fsr2h	equ	0xFDA
  1913                           fsr2l	equ	0xFD9
  1914                           status	equ	0xFD8
  1915                           
  1916 ;; *************** function _ReadHeight *****************
  1917 ;; Defined at:
  1918 ;;		line 33 in file "ultrasonic.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;		None
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;		None
  1923 ;; Return value:  Size  Location     Type
  1924 ;;		None               void
  1925 ;; Registers used:
  1926 ;;		wreg, status,2, status,0
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1936 ;;Total ram usage:        0 bytes
  1937 ;; Hardware stack levels used:    1
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_Isr
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           	psect	text14
  1946  000BF4                     __ptext14:
  1947                           	opt stack 0
  1948  000BF4                     _ReadHeight:
  1949                           	opt stack 27
  1950  000BF4                     i2l662:
  1951  000BF4  A27E               	btfss	3966,1,c	;volatile
  1952  000BF6  D7FE               	goto	i2l662
  1953                           
  1954                           ;ultrasonic.c: 35: TMR5IF = 0;
  1955  000BF8  927E               	bcf	3966,1,c	;volatile
  1956                           
  1957                           ;ultrasonic.c: 36: time_height = TMR5H;
  1958  000BFA  CF50 F029          	movff	3920,_time_height	;volatile
  1959  000BFE  6A2A               	clrf	_time_height+1,c
  1960                           
  1961                           ;ultrasonic.c: 37: time_height <<= 8;
  1962  000C00  5029               	movf	_time_height,w,c
  1963  000C02  6E2A               	movwf	_time_height+1,c
  1964  000C04  6A29               	clrf	_time_height,c
  1965                           
  1966                           ;ultrasonic.c: 38: time_height |= TMR5L;
  1967  000C06  010F               	movlb	15	; () banked
  1968  000C08  514F               	movf	79,w,b	;volatile
  1969  000C0A  1229               	iorwf	_time_height,f,c
  1970                           
  1971                           ; BSR set to: 15
  1972                           ;ultrasonic.c: 39: a_frame[0].height = time_height;
  1973  000C0C  C029  F007         	movff	_time_height,_a_frame+6
  1974  000C10  C02A  F008         	movff	_time_height+1,_a_frame+7
  1975                           
  1976                           ; BSR set to: 15
  1977  000C14  0012               	return		;funcret
  1978  000C16                     __end_of_ReadHeight:
  1979                           	opt stack 0
  1980                           pclatu	equ	0xFFB
  1981                           pclath	equ	0xFFA
  1982                           tblptru	equ	0xFF8
  1983                           tblptrh	equ	0xFF7
  1984                           tblptrl	equ	0xFF6
  1985                           tablat	equ	0xFF5
  1986                           prodh	equ	0xFF4
  1987                           prodl	equ	0xFF3
  1988                           intcon	equ	0xFF2
  1989                           postinc0	equ	0xFEE
  1990                           fsr0h	equ	0xFEA
  1991                           fsr0l	equ	0xFE9
  1992                           wreg	equ	0xFE8
  1993                           postdec1	equ	0xFE5
  1994                           fsr1h	equ	0xFE2
  1995                           fsr1l	equ	0xFE1
  1996                           postinc2	equ	0xFDE
  1997                           postdec2	equ	0xFDD
  1998                           fsr2h	equ	0xFDA
  1999                           fsr2l	equ	0xFD9
  2000                           status	equ	0xFD8
  2001                           
  2002 ;; *************** function _ModeCheck *****************
  2003 ;; Defined at:
  2004 ;;		line 30 in file "gear.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;		None
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  time_gear       2    4[COMRAM] unsigned int 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;		None               void
  2011 ;; Registers used:
  2012 ;;		wreg, status,2, status,0, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2019 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2021 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;Total ram usage:        2 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; Hardware stack levels required when called:    1
  2025 ;; This function calls:
  2026 ;;		_CalcTime
  2027 ;; This function is called by:
  2028 ;;		_Isr
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	text15
  2033  000B7C                     __ptext15:
  2034                           	opt stack 0
  2035  000B7C                     _ModeCheck:
  2036                           	opt stack 26
  2037                           
  2038                           ;gear.c: 31: unsigned int time_gear = CalcTime();
  2039                           
  2040                           ; BSR set to: 15
  2041                           ;incstack = 0
  2042  000B7C  ECD7  F005         	call	_CalcTime	;wreg free
  2043  000B80  C02D  F031         	movff	?_CalcTime,ModeCheck@time_gear
  2044  000B84  C02E  F032         	movff	?_CalcTime+1,ModeCheck@time_gear+1
  2045                           
  2046                           ;gear.c: 32: if(time_gear < 6800){
  2047  000B88  0E90               	movlw	144
  2048  000B8A  5C31               	subwf	ModeCheck@time_gear,w,c
  2049  000B8C  0E1A               	movlw	26
  2050  000B8E  5832               	subwfb	ModeCheck@time_gear+1,w,c
  2051  000B90  B0D8               	btfsc	status,0,c
  2052  000B92  D003               	goto	i2l2304
  2053                           
  2054                           ;gear.c: 33: PORTBbits.RB2 = 0;
  2055  000B94  9481               	bcf	3969,2,c	;volatile
  2056                           
  2057                           ;gear.c: 34: set_ret = 0;
  2058  000B96  9857               	bcf	_set_ret/(0+8),_set_ret& (0+7),c
  2059                           
  2060                           ;gear.c: 35: }else if(time_gear >= 6800) {
  2061  000B98  D008               	goto	i2l183
  2062  000B9A                     i2l2304:
  2063  000B9A  0E90               	movlw	144
  2064  000B9C  5C31               	subwf	ModeCheck@time_gear,w,c
  2065  000B9E  0E1A               	movlw	26
  2066  000BA0  5832               	subwfb	ModeCheck@time_gear+1,w,c
  2067  000BA2  A0D8               	btfss	status,0,c
  2068  000BA4  D002               	goto	i2l183
  2069                           
  2070                           ;gear.c: 36: PORTBbits.RB2 = 1;
  2071  000BA6  8481               	bsf	3969,2,c	;volatile
  2072                           
  2073                           ;gear.c: 37: set_ret = 1;
  2074  000BA8  8857               	bsf	_set_ret/(0+8),_set_ret& (0+7),c
  2075  000BAA                     i2l183:
  2076                           
  2077                           ;gear.c: 38: }
  2078                           ;gear.c: 39: __nop();
  2079  000BAA  F000               	nop	
  2080                           
  2081                           ;gear.c: 40: return set_ret;
  2082                           ;	Return value of _ModeCheck is never used
  2083  000BAC  0012               	return		;funcret
  2084  000BAE                     __end_of_ModeCheck:
  2085                           	opt stack 0
  2086                           pclatu	equ	0xFFB
  2087                           pclath	equ	0xFFA
  2088                           tblptru	equ	0xFF8
  2089                           tblptrh	equ	0xFF7
  2090                           tblptrl	equ	0xFF6
  2091                           tablat	equ	0xFF5
  2092                           prodh	equ	0xFF4
  2093                           prodl	equ	0xFF3
  2094                           intcon	equ	0xFF2
  2095                           postinc0	equ	0xFEE
  2096                           fsr0h	equ	0xFEA
  2097                           fsr0l	equ	0xFE9
  2098                           wreg	equ	0xFE8
  2099                           postdec1	equ	0xFE5
  2100                           fsr1h	equ	0xFE2
  2101                           fsr1l	equ	0xFE1
  2102                           postinc2	equ	0xFDE
  2103                           postdec2	equ	0xFDD
  2104                           fsr2h	equ	0xFDA
  2105                           fsr2l	equ	0xFD9
  2106                           status	equ	0xFD8
  2107                           
  2108 ;; *************** function _CalcTime *****************
  2109 ;; Defined at:
  2110 ;;		line 16 in file "gear.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;  time_gear       2    2[COMRAM] unsigned int 
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  2    0[COMRAM] unsigned int 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2125 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;Total ram usage:        4 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; This function calls:
  2131 ;;		Nothing
  2132 ;; This function is called by:
  2133 ;;		_ModeCheck
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text16
  2138  000BAE                     __ptext16:
  2139                           	opt stack 0
  2140  000BAE                     _CalcTime:
  2141                           	opt stack 26
  2142                           
  2143                           ;gear.c: 17: unsigned int time_gear = TMR3H;
  2144                           
  2145                           ;incstack = 0
  2146  000BAE  CFB3 F02F          	movff	4019,CalcTime@time_gear	;volatile
  2147  000BB2  6A30               	clrf	CalcTime@time_gear+1,c
  2148                           
  2149                           ;gear.c: 18: time_gear <<= 8;
  2150  000BB4  502F               	movf	CalcTime@time_gear,w,c
  2151  000BB6  6E30               	movwf	CalcTime@time_gear+1,c
  2152  000BB8  6A2F               	clrf	CalcTime@time_gear,c
  2153                           
  2154                           ;gear.c: 19: time_gear |= TMR3L;
  2155  000BBA  50B2               	movf	4018,w,c	;volatile
  2156  000BBC  122F               	iorwf	CalcTime@time_gear,f,c
  2157                           
  2158                           ;gear.c: 20: TMR3H = 0;
  2159  000BBE  0E00               	movlw	0
  2160  000BC0  6EB3               	movwf	4019,c	;volatile
  2161                           
  2162                           ;gear.c: 21: TMR3L = 0;
  2163  000BC2  0E00               	movlw	0
  2164  000BC4  6EB2               	movwf	4018,c	;volatile
  2165                           
  2166                           ;gear.c: 22: __nop();
  2167  000BC6  F000               	nop	
  2168                           
  2169                           ;gear.c: 23: return time_gear;
  2170  000BC8  C02F  F02D         	movff	CalcTime@time_gear,?_CalcTime
  2171  000BCC  C030  F02E         	movff	CalcTime@time_gear+1,?_CalcTime+1
  2172  000BD0  0012               	return	
  2173  000BD2                     __end_of_CalcTime:
  2174                           	opt stack 0
  2175                           pclatu	equ	0xFFB
  2176                           pclath	equ	0xFFA
  2177                           tblptru	equ	0xFF8
  2178                           tblptrh	equ	0xFF7
  2179                           tblptrl	equ	0xFF6
  2180                           tablat	equ	0xFF5
  2181                           prodh	equ	0xFF4
  2182                           prodl	equ	0xFF3
  2183                           intcon	equ	0xFF2
  2184                           postinc0	equ	0xFEE
  2185                           fsr0h	equ	0xFEA
  2186                           fsr0l	equ	0xFE9
  2187                           wreg	equ	0xFE8
  2188                           postdec1	equ	0xFE5
  2189                           fsr1h	equ	0xFE2
  2190                           fsr1l	equ	0xFE1
  2191                           postinc2	equ	0xFDE
  2192                           postdec2	equ	0xFDD
  2193                           fsr2h	equ	0xFDA
  2194                           fsr2l	equ	0xFD9
  2195                           status	equ	0xFD8
  2196                           
  2197 ;; *************** function _CompareFrames *****************
  2198 ;; Defined at:
  2199 ;;		line 32 in file "position.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;		None               void
  2206 ;; Registers used:
  2207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2216 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2217 ;;Total ram usage:        2 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    2
  2220 ;; This function calls:
  2221 ;;		_CheckAileron
  2222 ;;		_CheckElevator
  2223 ;;		_CheckRudderAhead
  2224 ;;		_CheckRudderBack
  2225 ;; This function is called by:
  2226 ;;		_Isr
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text17
  2231  000956                     __ptext17:
  2232                           	opt stack 0
  2233  000956                     _CompareFrames:
  2234                           	opt stack 25
  2235                           
  2236                           ;position.c: 34: a_frame_dif[0].dif_height = a_frame[1].height - a_frame[0].height;
  2237                           
  2238                           ;incstack = 0
  2239  000956  EE20  F007         	lfsr	2,_a_frame+6
  2240  00095A  CFDE F02F          	movff	postinc2,??_CompareFrames
  2241  00095E  CFDD F030          	movff	postdec2,??_CompareFrames+1
  2242  000962  1E2F               	comf	??_CompareFrames,f,c
  2243  000964  1E30               	comf	??_CompareFrames+1,f,c
  2244  000966  4A2F               	infsnz	??_CompareFrames,f,c
  2245  000968  2A30               	incf	??_CompareFrames+1,f,c
  2246  00096A  5011               	movf	_a_frame+16,w,c
  2247  00096C  242F               	addwf	??_CompareFrames,w,c
  2248  00096E  6E1B               	movwf	_a_frame_dif+6,c
  2249  000970  5012               	movf	_a_frame+17,w,c
  2250  000972  2030               	addwfc	??_CompareFrames+1,w,c
  2251  000974  6E1C               	movwf	_a_frame_dif+7,c
  2252                           
  2253                           ;position.c: 36: if (a_frame[1].num == a_frame[0].num) {
  2254  000976  5001               	movf	_a_frame,w,c
  2255  000978  180B               	xorwf	_a_frame+10,w,c
  2256  00097A  E140               	bnz	i2l824
  2257  00097C  5002               	movf	_a_frame+1,w,c
  2258  00097E  180C               	xorwf	_a_frame+11,w,c
  2259  000980  A4D8               	btfss	status,2,c
  2260  000982  0012               	return	
  2261                           
  2262                           ;position.c: 37: a_frame_dif[0].dif_pos_x = a_frame[1].pos_x - a_frame[0].pos_x;
  2263  000984  EE20  F003         	lfsr	2,_a_frame+2
  2264  000988  CFDE F02F          	movff	postinc2,??_CompareFrames
  2265  00098C  CFDD F030          	movff	postdec2,??_CompareFrames+1
  2266  000990  1E2F               	comf	??_CompareFrames,f,c
  2267  000992  1E30               	comf	??_CompareFrames+1,f,c
  2268  000994  4A2F               	infsnz	??_CompareFrames,f,c
  2269  000996  2A30               	incf	??_CompareFrames+1,f,c
  2270  000998  500D               	movf	_a_frame+12,w,c
  2271  00099A  242F               	addwf	??_CompareFrames,w,c
  2272  00099C  6E17               	movwf	_a_frame_dif+2,c
  2273  00099E  500E               	movf	_a_frame+13,w,c
  2274  0009A0  2030               	addwfc	??_CompareFrames+1,w,c
  2275  0009A2  6E18               	movwf	_a_frame_dif+3,c
  2276                           
  2277                           ;position.c: 38: a_frame_dif[0].dif_pos_y = a_frame[1].pos_y - a_frame[0].pos_y;
  2278  0009A4  EE20  F005         	lfsr	2,_a_frame+4
  2279  0009A8  CFDE F02F          	movff	postinc2,??_CompareFrames
  2280  0009AC  CFDD F030          	movff	postdec2,??_CompareFrames+1
  2281  0009B0  1E2F               	comf	??_CompareFrames,f,c
  2282  0009B2  1E30               	comf	??_CompareFrames+1,f,c
  2283  0009B4  4A2F               	infsnz	??_CompareFrames,f,c
  2284  0009B6  2A30               	incf	??_CompareFrames+1,f,c
  2285  0009B8  500F               	movf	_a_frame+14,w,c
  2286  0009BA  242F               	addwf	??_CompareFrames,w,c
  2287  0009BC  6E19               	movwf	_a_frame_dif+4,c
  2288  0009BE  5010               	movf	_a_frame+15,w,c
  2289  0009C0  2030               	addwfc	??_CompareFrames+1,w,c
  2290  0009C2  6E1A               	movwf	_a_frame_dif+5,c
  2291                           
  2292                           ;position.c: 39: a_frame_dif[0].dif_angle = a_frame[1].angle - a_frame[0].angle;
  2293  0009C4  EE20  F009         	lfsr	2,_a_frame+8
  2294  0009C8  CFDE F02F          	movff	postinc2,??_CompareFrames
  2295  0009CC  CFDD F030          	movff	postdec2,??_CompareFrames+1
  2296  0009D0  1E2F               	comf	??_CompareFrames,f,c
  2297  0009D2  1E30               	comf	??_CompareFrames+1,f,c
  2298  0009D4  4A2F               	infsnz	??_CompareFrames,f,c
  2299  0009D6  2A30               	incf	??_CompareFrames+1,f,c
  2300  0009D8  5013               	movf	_a_frame+18,w,c
  2301  0009DA  242F               	addwf	??_CompareFrames,w,c
  2302  0009DC  6E1D               	movwf	_a_frame_dif+8,c
  2303  0009DE  5014               	movf	_a_frame+19,w,c
  2304  0009E0  2030               	addwfc	??_CompareFrames+1,w,c
  2305  0009E2  6E1E               	movwf	_a_frame_dif+9,c
  2306                           
  2307                           ;position.c: 40: CheckAileron();
  2308  0009E4  EC4A  F004         	call	_CheckAileron	;wreg free
  2309                           
  2310                           ;position.c: 41: CheckElevator();
  2311  0009E8  ECE9  F003         	call	_CheckElevator	;wreg free
  2312                           
  2313                           ;position.c: 42: if (direction == 0) {
  2314  0009EC  B057               	btfsc	_direction/(0+8),_direction& (0+7),c
  2315  0009EE  D003               	goto	i2l2392
  2316                           
  2317                           ;position.c: 43: CheckRudderAhead();
  2318  0009F0  EC7B  F003         	call	_CheckRudderAhead	;wreg free
  2319                           
  2320                           ;position.c: 44: } else {
  2321  0009F4  0012               	return	
  2322  0009F6                     i2l2392:
  2323                           
  2324                           ;position.c: 45: CheckRudderBack();
  2325  0009F6  EC0D  F003         	call	_CheckRudderBack	;wreg free
  2326                           
  2327                           ;position.c: 48: return;
  2328                           
  2329                           ;position.c: 46: }
  2330                           ;position.c: 47: } else {
  2331  0009FA  0012               	return	
  2332  0009FC                     i2l824:
  2333  0009FC  0012               	return		;funcret
  2334  0009FE                     __end_of_CompareFrames:
  2335                           	opt stack 0
  2336                           pclatu	equ	0xFFB
  2337                           pclath	equ	0xFFA
  2338                           tblptru	equ	0xFF8
  2339                           tblptrh	equ	0xFF7
  2340                           tblptrl	equ	0xFF6
  2341                           tablat	equ	0xFF5
  2342                           prodh	equ	0xFF4
  2343                           prodl	equ	0xFF3
  2344                           intcon	equ	0xFF2
  2345                           postinc0	equ	0xFEE
  2346                           fsr0h	equ	0xFEA
  2347                           fsr0l	equ	0xFE9
  2348                           wreg	equ	0xFE8
  2349                           postdec1	equ	0xFE5
  2350                           fsr1h	equ	0xFE2
  2351                           fsr1l	equ	0xFE1
  2352                           postinc2	equ	0xFDE
  2353                           postdec2	equ	0xFDD
  2354                           fsr2h	equ	0xFDA
  2355                           fsr2l	equ	0xFD9
  2356                           status	equ	0xFD8
  2357                           
  2358 ;; *************** function _CheckRudderBack *****************
  2359 ;; Defined at:
  2360 ;;		line 392 in file "position.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;		None               void
  2367 ;; Registers used:
  2368 ;;		wreg, status,2, status,0, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2376 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2377 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2378 ;;Total ram usage:        1 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    1
  2381 ;; This function calls:
  2382 ;;		_ActRudder
  2383 ;; This function is called by:
  2384 ;;		_CompareFrames
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text18
  2389  00061A                     __ptext18:
  2390                           	opt stack 0
  2391  00061A                     _CheckRudderBack:
  2392                           	opt stack 25
  2393                           
  2394                           ;position.c: 395: if (a_frame[0].angle <= -175 || a_frame[0].angle >= 175) {
  2395                           
  2396                           ;incstack = 0
  2397  00061A  AE0A               	btfss	_a_frame+9,7,c
  2398  00061C  D006               	goto	i2l2232
  2399  00061E  0E52               	movlw	82
  2400  000620  5C09               	subwf	_a_frame+8,w,c
  2401  000622  0EFF               	movlw	255
  2402  000624  580A               	subwfb	_a_frame+9,w,c
  2403  000626  A0D8               	btfss	status,0,c
  2404  000628  D008               	goto	i2l2234
  2405  00062A                     i2l2232:
  2406  00062A  BE0A               	btfsc	_a_frame+9,7,c
  2407  00062C  D00A               	goto	i2l2236
  2408  00062E  500A               	movf	_a_frame+9,w,c
  2409  000630  E104               	bnz	i2l2234
  2410  000632  0EAF               	movlw	175
  2411  000634  5C09               	subwf	_a_frame+8,w,c
  2412  000636  A0D8               	btfss	status,0,c
  2413  000638  D004               	goto	i2l2236
  2414  00063A                     i2l2234:
  2415                           
  2416                           ;position.c: 396: ActRudder(0);
  2417  00063A  0E00               	movlw	0
  2418  00063C  EC40  F006         	call	_ActRudder
  2419                           
  2420                           ;position.c: 397: }
  2421  000640  0012               	return	
  2422  000642                     i2l2236:
  2423                           
  2424                           ;position.c: 399: else if (a_frame[0].angle > -175) {
  2425  000642  AE0A               	btfss	_a_frame+9,7,c
  2426  000644  D006               	goto	i2l2238
  2427  000646  0E52               	movlw	82
  2428  000648  5C09               	subwf	_a_frame+8,w,c
  2429  00064A  0EFF               	movlw	255
  2430  00064C  580A               	subwfb	_a_frame+9,w,c
  2431  00064E  A0D8               	btfss	status,0,c
  2432  000650  D02A               	goto	i2l2252
  2433  000652                     i2l2238:
  2434                           
  2435                           ;position.c: 401: if (a_frame[1].angle > a_frame[0].angle) {
  2436  000652  5013               	movf	_a_frame+18,w,c
  2437  000654  5C09               	subwf	_a_frame+8,w,c
  2438  000656  500A               	movf	_a_frame+9,w,c
  2439  000658  0A80               	xorlw	128
  2440  00065A  6E2E               	movwf	??_CheckRudderBack& (0+255),c
  2441  00065C  5014               	movf	_a_frame+19,w,c
  2442  00065E  0A80               	xorlw	128
  2443  000660  582E               	subwfb	??_CheckRudderBack& (0+255),w,c
  2444  000662  B0D8               	btfsc	status,0,c
  2445  000664  D01C               	goto	i2l2250
  2446                           
  2447                           ;position.c: 403: if (a_frame_dif[0].dif_angle <= 2) {
  2448  000666  BE1E               	btfsc	_a_frame_dif+9,7,c
  2449  000668  D006               	goto	i2l2242
  2450  00066A  501E               	movf	_a_frame_dif+9,w,c
  2451  00066C  E114               	bnz	i2l2248
  2452  00066E  0E03               	movlw	3
  2453  000670  5C1D               	subwf	_a_frame_dif+8,w,c
  2454  000672  B0D8               	btfsc	status,0,c
  2455  000674  D010               	goto	i2l2248
  2456  000676                     i2l2242:
  2457                           
  2458                           ;position.c: 404: if (a_frame_dif[0].dif_angle <= 1) {
  2459  000676  BE1E               	btfsc	_a_frame_dif+9,7,c
  2460  000678  D006               	goto	i2l2244
  2461  00067A  501E               	movf	_a_frame_dif+9,w,c
  2462  00067C  E108               	bnz	i2l2246
  2463  00067E  0E02               	movlw	2
  2464  000680  5C1D               	subwf	_a_frame_dif+8,w,c
  2465  000682  B0D8               	btfsc	status,0,c
  2466  000684  D004               	goto	i2l2246
  2467  000686                     i2l2244:
  2468                           
  2469                           ;position.c: 405: ActRudder(-3);
  2470  000686  0EFD               	movlw	253
  2471  000688  EC40  F006         	call	_ActRudder
  2472                           
  2473                           ;position.c: 406: } else {
  2474  00068C  0012               	return	
  2475  00068E                     i2l2246:
  2476                           
  2477                           ;position.c: 407: ActRudder(0);
  2478  00068E  0E00               	movlw	0
  2479  000690  EC40  F006         	call	_ActRudder
  2480                           
  2481                           ;position.c: 408: }
  2482                           ;position.c: 409: } else {
  2483  000694  0012               	return	
  2484  000696                     i2l2248:
  2485                           
  2486                           ;position.c: 411: ActRudder(3);
  2487  000696  0E03               	movlw	3
  2488  000698  EC40  F006         	call	_ActRudder
  2489                           
  2490                           ;position.c: 412: }
  2491                           ;position.c: 413: } else {
  2492  00069C  0012               	return	
  2493  00069E                     i2l2250:
  2494                           
  2495                           ;position.c: 415: ActRudder(-3);
  2496  00069E  0EFD               	movlw	253
  2497  0006A0  EC40  F006         	call	_ActRudder
  2498                           
  2499                           ;position.c: 416: }
  2500                           ;position.c: 417: }
  2501  0006A4  0012               	return	
  2502  0006A6                     i2l2252:
  2503                           
  2504                           ;position.c: 419: else {
  2505                           ;position.c: 421: if (a_frame[1].angle < a_frame[0].angle) {
  2506  0006A6  5009               	movf	_a_frame+8,w,c
  2507  0006A8  5C13               	subwf	_a_frame+18,w,c
  2508  0006AA  5014               	movf	_a_frame+19,w,c
  2509  0006AC  0A80               	xorlw	128
  2510  0006AE  6E2E               	movwf	??_CheckRudderBack& (0+255),c
  2511  0006B0  500A               	movf	_a_frame+9,w,c
  2512  0006B2  0A80               	xorlw	128
  2513  0006B4  582E               	subwfb	??_CheckRudderBack& (0+255),w,c
  2514  0006B6  B0D8               	btfsc	status,0,c
  2515  0006B8  D01A               	goto	i2l2264
  2516                           
  2517                           ;position.c: 423: if (a_frame_dif[0].dif_angle <= -2) {
  2518  0006BA  AE1E               	btfss	_a_frame_dif+9,7,c
  2519  0006BC  D014               	goto	i2l2262
  2520  0006BE  281D               	incf	_a_frame_dif+8,w,c
  2521  0006C0  0EFF               	movlw	255
  2522  0006C2  581E               	subwfb	_a_frame_dif+9,w,c
  2523  0006C4  B0D8               	btfsc	status,0,c
  2524  0006C6  D00F               	goto	i2l2262
  2525                           
  2526                           ;position.c: 424: if (a_frame_dif[0].dif_angle <= -2) {
  2527  0006C8  AE1E               	btfss	_a_frame_dif+9,7,c
  2528  0006CA  D009               	goto	i2l2260
  2529  0006CC  281D               	incf	_a_frame_dif+8,w,c
  2530  0006CE  0EFF               	movlw	255
  2531  0006D0  581E               	subwfb	_a_frame_dif+9,w,c
  2532  0006D2  B0D8               	btfsc	status,0,c
  2533  0006D4  D004               	goto	i2l2260
  2534                           
  2535                           ;position.c: 425: ActRudder(3);
  2536  0006D6  0E03               	movlw	3
  2537  0006D8  EC40  F006         	call	_ActRudder
  2538                           
  2539                           ;position.c: 426: } else {
  2540  0006DC  0012               	return	
  2541  0006DE                     i2l2260:
  2542                           
  2543                           ;position.c: 427: ActRudder(0);
  2544  0006DE  0E00               	movlw	0
  2545  0006E0  EC40  F006         	call	_ActRudder
  2546                           
  2547                           ;position.c: 428: }
  2548                           ;position.c: 429: } else {
  2549  0006E4  0012               	return	
  2550  0006E6                     i2l2262:
  2551                           
  2552                           ;position.c: 431: ActRudder(-3);
  2553  0006E6  0EFD               	movlw	253
  2554  0006E8  EC40  F006         	call	_ActRudder
  2555                           
  2556                           ;position.c: 432: }
  2557                           ;position.c: 433: } else {
  2558  0006EC  0012               	return	
  2559  0006EE                     i2l2264:
  2560                           
  2561                           ;position.c: 435: ActRudder(3);
  2562  0006EE  0E03               	movlw	3
  2563  0006F0  EC40  F006         	call	_ActRudder
  2564  0006F4  0012               	return	
  2565  0006F6                     __end_of_CheckRudderBack:
  2566                           	opt stack 0
  2567                           pclatu	equ	0xFFB
  2568                           pclath	equ	0xFFA
  2569                           tblptru	equ	0xFF8
  2570                           tblptrh	equ	0xFF7
  2571                           tblptrl	equ	0xFF6
  2572                           tablat	equ	0xFF5
  2573                           prodh	equ	0xFF4
  2574                           prodl	equ	0xFF3
  2575                           intcon	equ	0xFF2
  2576                           postinc0	equ	0xFEE
  2577                           fsr0h	equ	0xFEA
  2578                           fsr0l	equ	0xFE9
  2579                           wreg	equ	0xFE8
  2580                           postdec1	equ	0xFE5
  2581                           fsr1h	equ	0xFE2
  2582                           fsr1l	equ	0xFE1
  2583                           postinc2	equ	0xFDE
  2584                           postdec2	equ	0xFDD
  2585                           fsr2h	equ	0xFDA
  2586                           fsr2l	equ	0xFD9
  2587                           status	equ	0xFD8
  2588                           
  2589 ;; *************** function _CheckRudderAhead *****************
  2590 ;; Defined at:
  2591 ;;		line 333 in file "position.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;		None
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;		None
  2596 ;; Return value:  Size  Location     Type
  2597 ;;		None               void
  2598 ;; Registers used:
  2599 ;;		wreg, status,2, status,0, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2609 ;;Total ram usage:        1 bytes
  2610 ;; Hardware stack levels used:    1
  2611 ;; Hardware stack levels required when called:    1
  2612 ;; This function calls:
  2613 ;;		_ActRudder
  2614 ;; This function is called by:
  2615 ;;		_CompareFrames
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text19
  2620  0006F6                     __ptext19:
  2621                           	opt stack 0
  2622  0006F6                     _CheckRudderAhead:
  2623                           	opt stack 25
  2624                           
  2625                           ;position.c: 335: if (a_frame[0].angle >= -5 && a_frame[0].angle <= 5) {
  2626                           
  2627                           ;incstack = 0
  2628  0006F6  AE0A               	btfss	_a_frame+9,7,c
  2629  0006F8  D006               	goto	i2l2196
  2630  0006FA  0EFB               	movlw	251
  2631  0006FC  5C09               	subwf	_a_frame+8,w,c
  2632  0006FE  0EFF               	movlw	255
  2633  000700  580A               	subwfb	_a_frame+9,w,c
  2634  000702  A0D8               	btfss	status,0,c
  2635  000704  D00C               	goto	i2l2200
  2636  000706                     i2l2196:
  2637  000706  BE0A               	btfsc	_a_frame+9,7,c
  2638  000708  D006               	goto	i2l2198
  2639  00070A  500A               	movf	_a_frame+9,w,c
  2640  00070C  E108               	bnz	i2l2200
  2641  00070E  0E06               	movlw	6
  2642  000710  5C09               	subwf	_a_frame+8,w,c
  2643  000712  B0D8               	btfsc	status,0,c
  2644  000714  D004               	goto	i2l2200
  2645  000716                     i2l2198:
  2646                           
  2647                           ;position.c: 336: ActRudder(0);
  2648  000716  0E00               	movlw	0
  2649  000718  EC40  F006         	call	_ActRudder
  2650                           
  2651                           ;position.c: 337: }
  2652  00071C  0012               	return	
  2653  00071E                     i2l2200:
  2654                           
  2655                           ;position.c: 339: else if (a_frame[0].angle > 5) {
  2656  00071E  BE0A               	btfsc	_a_frame+9,7,c
  2657  000720  D030               	goto	i2l2216
  2658  000722  500A               	movf	_a_frame+9,w,c
  2659  000724  E104               	bnz	i2u112_40
  2660  000726  0E06               	movlw	6
  2661  000728  5C09               	subwf	_a_frame+8,w,c
  2662  00072A  A0D8               	btfss	status,0,c
  2663  00072C  D02A               	goto	i2l2216
  2664  00072E                     i2u112_40:
  2665                           
  2666                           ;position.c: 341: if (a_frame[1].angle > a_frame[0].angle) {
  2667  00072E  5013               	movf	_a_frame+18,w,c
  2668  000730  5C09               	subwf	_a_frame+8,w,c
  2669  000732  500A               	movf	_a_frame+9,w,c
  2670  000734  0A80               	xorlw	128
  2671  000736  6E2E               	movwf	??_CheckRudderAhead& (0+255),c
  2672  000738  5014               	movf	_a_frame+19,w,c
  2673  00073A  0A80               	xorlw	128
  2674  00073C  582E               	subwfb	??_CheckRudderAhead& (0+255),w,c
  2675  00073E  B0D8               	btfsc	status,0,c
  2676  000740  D01C               	goto	i2l2214
  2677                           
  2678                           ;position.c: 343: if (a_frame_dif[0].dif_angle <= 2) {
  2679  000742  BE1E               	btfsc	_a_frame_dif+9,7,c
  2680  000744  D006               	goto	i2l2206
  2681  000746  501E               	movf	_a_frame_dif+9,w,c
  2682  000748  E114               	bnz	i2l2212
  2683  00074A  0E03               	movlw	3
  2684  00074C  5C1D               	subwf	_a_frame_dif+8,w,c
  2685  00074E  B0D8               	btfsc	status,0,c
  2686  000750  D010               	goto	i2l2212
  2687  000752                     i2l2206:
  2688                           
  2689                           ;position.c: 344: if (a_frame_dif[0].dif_angle <= 1) {
  2690  000752  BE1E               	btfsc	_a_frame_dif+9,7,c
  2691  000754  D006               	goto	i2l2208
  2692  000756  501E               	movf	_a_frame_dif+9,w,c
  2693  000758  E108               	bnz	i2l2210
  2694  00075A  0E02               	movlw	2
  2695  00075C  5C1D               	subwf	_a_frame_dif+8,w,c
  2696  00075E  B0D8               	btfsc	status,0,c
  2697  000760  D004               	goto	i2l2210
  2698  000762                     i2l2208:
  2699                           
  2700                           ;position.c: 345: ActRudder(-3);
  2701  000762  0EFD               	movlw	253
  2702  000764  EC40  F006         	call	_ActRudder
  2703                           
  2704                           ;position.c: 346: } else {
  2705  000768  0012               	return	
  2706  00076A                     i2l2210:
  2707                           
  2708                           ;position.c: 347: ActRudder(0);
  2709  00076A  0E00               	movlw	0
  2710  00076C  EC40  F006         	call	_ActRudder
  2711                           
  2712                           ;position.c: 348: }
  2713                           ;position.c: 349: } else {
  2714  000770  0012               	return	
  2715  000772                     i2l2212:
  2716                           
  2717                           ;position.c: 351: ActRudder(3);
  2718  000772  0E03               	movlw	3
  2719  000774  EC40  F006         	call	_ActRudder
  2720                           
  2721                           ;position.c: 352: }
  2722                           ;position.c: 353: } else {
  2723  000778  0012               	return	
  2724  00077A                     i2l2214:
  2725                           
  2726                           ;position.c: 355: ActRudder(-3);
  2727  00077A  0EFD               	movlw	253
  2728  00077C  EC40  F006         	call	_ActRudder
  2729                           
  2730                           ;position.c: 356: }
  2731                           ;position.c: 357: }
  2732  000780  0012               	return	
  2733  000782                     i2l2216:
  2734                           
  2735                           ;position.c: 359: else {
  2736                           ;position.c: 361: if (a_frame[1].angle < a_frame[0].angle) {
  2737  000782  5009               	movf	_a_frame+8,w,c
  2738  000784  5C13               	subwf	_a_frame+18,w,c
  2739  000786  5014               	movf	_a_frame+19,w,c
  2740  000788  0A80               	xorlw	128
  2741  00078A  6E2E               	movwf	??_CheckRudderAhead& (0+255),c
  2742  00078C  500A               	movf	_a_frame+9,w,c
  2743  00078E  0A80               	xorlw	128
  2744  000790  582E               	subwfb	??_CheckRudderAhead& (0+255),w,c
  2745  000792  B0D8               	btfsc	status,0,c
  2746  000794  D01A               	goto	i2l2228
  2747                           
  2748                           ;position.c: 363: if (a_frame_dif[0].dif_angle <= -2) {
  2749  000796  AE1E               	btfss	_a_frame_dif+9,7,c
  2750  000798  D014               	goto	i2l2226
  2751  00079A  281D               	incf	_a_frame_dif+8,w,c
  2752  00079C  0EFF               	movlw	255
  2753  00079E  581E               	subwfb	_a_frame_dif+9,w,c
  2754  0007A0  B0D8               	btfsc	status,0,c
  2755  0007A2  D00F               	goto	i2l2226
  2756                           
  2757                           ;position.c: 364: if (a_frame_dif[0].dif_angle <= -2) {
  2758  0007A4  AE1E               	btfss	_a_frame_dif+9,7,c
  2759  0007A6  D009               	goto	i2l2224
  2760  0007A8  281D               	incf	_a_frame_dif+8,w,c
  2761  0007AA  0EFF               	movlw	255
  2762  0007AC  581E               	subwfb	_a_frame_dif+9,w,c
  2763  0007AE  B0D8               	btfsc	status,0,c
  2764  0007B0  D004               	goto	i2l2224
  2765                           
  2766                           ;position.c: 365: ActRudder(3);
  2767  0007B2  0E03               	movlw	3
  2768  0007B4  EC40  F006         	call	_ActRudder
  2769                           
  2770                           ;position.c: 366: } else {
  2771  0007B8  0012               	return	
  2772  0007BA                     i2l2224:
  2773                           
  2774                           ;position.c: 367: ActRudder(0);
  2775  0007BA  0E00               	movlw	0
  2776  0007BC  EC40  F006         	call	_ActRudder
  2777                           
  2778                           ;position.c: 368: }
  2779                           ;position.c: 369: } else {
  2780  0007C0  0012               	return	
  2781  0007C2                     i2l2226:
  2782                           
  2783                           ;position.c: 371: ActRudder(-3);
  2784  0007C2  0EFD               	movlw	253
  2785  0007C4  EC40  F006         	call	_ActRudder
  2786                           
  2787                           ;position.c: 372: }
  2788                           ;position.c: 373: } else {
  2789  0007C8  0012               	return	
  2790  0007CA                     i2l2228:
  2791                           
  2792                           ;position.c: 375: ActRudder(3);
  2793  0007CA  0E03               	movlw	3
  2794  0007CC  EC40  F006         	call	_ActRudder
  2795  0007D0  0012               	return	
  2796  0007D2                     __end_of_CheckRudderAhead:
  2797                           	opt stack 0
  2798                           pclatu	equ	0xFFB
  2799                           pclath	equ	0xFFA
  2800                           tblptru	equ	0xFF8
  2801                           tblptrh	equ	0xFF7
  2802                           tblptrl	equ	0xFF6
  2803                           tablat	equ	0xFF5
  2804                           prodh	equ	0xFF4
  2805                           prodl	equ	0xFF3
  2806                           intcon	equ	0xFF2
  2807                           postinc0	equ	0xFEE
  2808                           fsr0h	equ	0xFEA
  2809                           fsr0l	equ	0xFE9
  2810                           wreg	equ	0xFE8
  2811                           postdec1	equ	0xFE5
  2812                           fsr1h	equ	0xFE2
  2813                           fsr1l	equ	0xFE1
  2814                           postinc2	equ	0xFDE
  2815                           postdec2	equ	0xFDD
  2816                           fsr2h	equ	0xFDA
  2817                           fsr2l	equ	0xFD9
  2818                           status	equ	0xFD8
  2819                           
  2820 ;; *************** function _ActRudder *****************
  2821 ;; Defined at:
  2822 ;;		line 51 in file "actors.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;  change          1    wreg     unsigned char 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  change          1    0[COMRAM] unsigned char 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;		None               void
  2829 ;; Registers used:
  2830 ;;		wreg, status,2, status,0
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2837 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2840 ;;Total ram usage:        1 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; This function calls:
  2843 ;;		Nothing
  2844 ;; This function is called by:
  2845 ;;		_CheckRudderAhead
  2846 ;;		_CheckRudderBack
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           	psect	text20
  2851  000C80                     __ptext20:
  2852                           	opt stack 0
  2853  000C80                     _ActRudder:
  2854                           	opt stack 25
  2855                           
  2856                           ;incstack = 0
  2857                           ;ActRudder@change stored from wreg
  2858  000C80  6E2D               	movwf	ActRudder@change,c
  2859                           
  2860                           ;actors.c: 52: a_actors[0].rudd += change;
  2861  000C82  502D               	movf	ActRudder@change,w,c
  2862  000C84  0100               	movlb	0	; () banked
  2863  000C86  27D6               	addwf	(_a_actors+6)& (0+255),f,b
  2864  000C88  0E00               	movlw	0
  2865  000C8A  23D7               	addwfc	(_a_actors+7)& (0+255),f,b
  2866                           
  2867                           ; BSR set to: 0
  2868  000C8C  0012               	return		;funcret
  2869  000C8E                     __end_of_ActRudder:
  2870                           	opt stack 0
  2871                           pclatu	equ	0xFFB
  2872                           pclath	equ	0xFFA
  2873                           tblptru	equ	0xFF8
  2874                           tblptrh	equ	0xFF7
  2875                           tblptrl	equ	0xFF6
  2876                           tablat	equ	0xFF5
  2877                           prodh	equ	0xFF4
  2878                           prodl	equ	0xFF3
  2879                           intcon	equ	0xFF2
  2880                           postinc0	equ	0xFEE
  2881                           fsr0h	equ	0xFEA
  2882                           fsr0l	equ	0xFE9
  2883                           wreg	equ	0xFE8
  2884                           postdec1	equ	0xFE5
  2885                           fsr1h	equ	0xFE2
  2886                           fsr1l	equ	0xFE1
  2887                           postinc2	equ	0xFDE
  2888                           postdec2	equ	0xFDD
  2889                           fsr2h	equ	0xFDA
  2890                           fsr2l	equ	0xFD9
  2891                           status	equ	0xFD8
  2892                           
  2893 ;; *************** function _CheckElevator *****************
  2894 ;; Defined at:
  2895 ;;		line 129 in file "position.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;		None
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;		None
  2900 ;; Return value:  Size  Location     Type
  2901 ;;		None               void
  2902 ;; Registers used:
  2903 ;;		wreg, status,2, status,0, cstack
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;Total ram usage:        0 bytes
  2914 ;; Hardware stack levels used:    1
  2915 ;; Hardware stack levels required when called:    1
  2916 ;; This function calls:
  2917 ;;		_ActElevator
  2918 ;; This function is called by:
  2919 ;;		_CompareFrames
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           	psect	text21
  2924  0007D2                     __ptext21:
  2925                           	opt stack 0
  2926  0007D2                     _CheckElevator:
  2927                           	opt stack 25
  2928                           
  2929                           ;position.c: 131: if (a_frame[0].pos_y >= 90 && a_frame[0].pos_y <= 110) {
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;incstack = 0
  2933  0007D2  5006               	movf	_a_frame+5,w,c
  2934  0007D4  E104               	bnz	i2u101_40
  2935  0007D6  0E5A               	movlw	90
  2936  0007D8  5C05               	subwf	_a_frame+4,w,c
  2937  0007DA  A0D8               	btfss	status,0,c
  2938  0007DC  D00A               	goto	i2l2164
  2939  0007DE                     i2u101_40:
  2940  0007DE  5006               	movf	_a_frame+5,w,c
  2941  0007E0  E108               	bnz	i2l2164
  2942  0007E2  0E6F               	movlw	111
  2943  0007E4  5C05               	subwf	_a_frame+4,w,c
  2944  0007E6  B0D8               	btfsc	status,0,c
  2945  0007E8  D004               	goto	i2l2164
  2946                           
  2947                           ;position.c: 133: ActElevator(0);
  2948  0007EA  0E00               	movlw	0
  2949  0007EC  EC47  F006         	call	_ActElevator
  2950                           
  2951                           ;position.c: 134: }
  2952  0007F0  0012               	return	
  2953  0007F2                     i2l2164:
  2954                           
  2955                           ;position.c: 136: else if (a_frame[0].pos_y > 110) {
  2956  0007F2  5006               	movf	_a_frame+5,w,c
  2957  0007F4  E104               	bnz	i2u103_40
  2958  0007F6  0E6F               	movlw	111
  2959  0007F8  5C05               	subwf	_a_frame+4,w,c
  2960  0007FA  A0D8               	btfss	status,0,c
  2961  0007FC  D025               	goto	i2l2180
  2962  0007FE                     i2u103_40:
  2963                           
  2964                           ;position.c: 138: if (a_frame[1].pos_y < a_frame[0].pos_y) {
  2965  0007FE  5005               	movf	_a_frame+4,w,c
  2966  000800  5C0F               	subwf	_a_frame+14,w,c
  2967  000802  5006               	movf	_a_frame+5,w,c
  2968  000804  5810               	subwfb	_a_frame+15,w,c
  2969  000806  B0D8               	btfsc	status,0,c
  2970  000808  D01B               	goto	i2l2178
  2971                           
  2972                           ;position.c: 140: if (a_frame_dif[0].dif_pos_y >= -8) {
  2973  00080A  AE1A               	btfss	_a_frame_dif+5,7,c
  2974  00080C  D006               	goto	i2l2170
  2975  00080E  0EF8               	movlw	248
  2976  000810  5C19               	subwf	_a_frame_dif+4,w,c
  2977  000812  0EFF               	movlw	255
  2978  000814  581A               	subwfb	_a_frame_dif+5,w,c
  2979  000816  A0D8               	btfss	status,0,c
  2980  000818  D00F               	goto	i2l2176
  2981  00081A                     i2l2170:
  2982                           
  2983                           ;position.c: 141: if (a_frame_dif[0].dif_pos_y >= -1) {
  2984  00081A  AE1A               	btfss	_a_frame_dif+5,7,c
  2985  00081C  D005               	goto	i2l2172
  2986  00081E  2819               	incf	_a_frame_dif+4,w,c
  2987  000820  0EFF               	movlw	255
  2988  000822  581A               	subwfb	_a_frame_dif+5,w,c
  2989  000824  A0D8               	btfss	status,0,c
  2990  000826  D004               	goto	i2l2174
  2991  000828                     i2l2172:
  2992                           
  2993                           ;position.c: 143: ActElevator(3);
  2994  000828  0E03               	movlw	3
  2995  00082A  EC47  F006         	call	_ActElevator
  2996                           
  2997                           ;position.c: 144: } else {
  2998  00082E  0012               	return	
  2999  000830                     i2l2174:
  3000                           
  3001                           ;position.c: 146: ActElevator(0);
  3002  000830  0E00               	movlw	0
  3003  000832  EC47  F006         	call	_ActElevator
  3004                           
  3005                           ;position.c: 147: }
  3006                           ;position.c: 148: } else {
  3007  000836  0012               	return	
  3008  000838                     i2l2176:
  3009                           
  3010                           ;position.c: 150: ActElevator(-3);
  3011  000838  0EFD               	movlw	253
  3012  00083A  EC47  F006         	call	_ActElevator
  3013                           
  3014                           ;position.c: 151: }
  3015                           ;position.c: 152: } else {
  3016  00083E  0012               	return	
  3017  000840                     i2l2178:
  3018                           
  3019                           ;position.c: 158: ActElevator(3);
  3020  000840  0E03               	movlw	3
  3021  000842  EC47  F006         	call	_ActElevator
  3022                           
  3023                           ;position.c: 159: }
  3024                           ;position.c: 160: }
  3025  000846  0012               	return	
  3026  000848                     i2l2180:
  3027                           
  3028                           ;position.c: 162: else {
  3029                           ;position.c: 164: if (a_frame[1].pos_y > a_frame[0].pos_y) {
  3030  000848  500F               	movf	_a_frame+14,w,c
  3031  00084A  5C05               	subwf	_a_frame+4,w,c
  3032  00084C  5010               	movf	_a_frame+15,w,c
  3033  00084E  5806               	subwfb	_a_frame+5,w,c
  3034  000850  B0D8               	btfsc	status,0,c
  3035  000852  D01C               	goto	i2l2192
  3036                           
  3037                           ;position.c: 166: if (a_frame_dif[0].dif_pos_y <= 8) {
  3038  000854  BE1A               	btfsc	_a_frame_dif+5,7,c
  3039  000856  D006               	goto	i2l2184
  3040  000858  501A               	movf	_a_frame_dif+5,w,c
  3041  00085A  E114               	bnz	i2l2190
  3042  00085C  0E09               	movlw	9
  3043  00085E  5C19               	subwf	_a_frame_dif+4,w,c
  3044  000860  B0D8               	btfsc	status,0,c
  3045  000862  D010               	goto	i2l2190
  3046  000864                     i2l2184:
  3047                           
  3048                           ;position.c: 167: if (a_frame_dif[0].dif_pos_y <= 1) {
  3049  000864  BE1A               	btfsc	_a_frame_dif+5,7,c
  3050  000866  D006               	goto	i2l2186
  3051  000868  501A               	movf	_a_frame_dif+5,w,c
  3052  00086A  E108               	bnz	i2l2188
  3053  00086C  0E02               	movlw	2
  3054  00086E  5C19               	subwf	_a_frame_dif+4,w,c
  3055  000870  B0D8               	btfsc	status,0,c
  3056  000872  D004               	goto	i2l2188
  3057  000874                     i2l2186:
  3058                           
  3059                           ;position.c: 169: ActElevator(-3);
  3060  000874  0EFD               	movlw	253
  3061  000876  EC47  F006         	call	_ActElevator
  3062                           
  3063                           ;position.c: 170: } else {
  3064  00087A  0012               	return	
  3065  00087C                     i2l2188:
  3066                           
  3067                           ;position.c: 172: ActElevator(0);
  3068  00087C  0E00               	movlw	0
  3069  00087E  EC47  F006         	call	_ActElevator
  3070                           
  3071                           ;position.c: 173: }
  3072                           ;position.c: 174: } else {
  3073  000882  0012               	return	
  3074  000884                     i2l2190:
  3075                           
  3076                           ;position.c: 176: ActElevator(3);
  3077  000884  0E03               	movlw	3
  3078  000886  EC47  F006         	call	_ActElevator
  3079                           
  3080                           ;position.c: 177: }
  3081                           ;position.c: 178: } else {
  3082  00088A  0012               	return	
  3083  00088C                     i2l2192:
  3084                           
  3085                           ;position.c: 184: ActElevator(-3);
  3086  00088C  0EFD               	movlw	253
  3087  00088E  EC47  F006         	call	_ActElevator
  3088  000892  0012               	return	
  3089  000894                     __end_of_CheckElevator:
  3090                           	opt stack 0
  3091                           pclatu	equ	0xFFB
  3092                           pclath	equ	0xFFA
  3093                           tblptru	equ	0xFF8
  3094                           tblptrh	equ	0xFF7
  3095                           tblptrl	equ	0xFF6
  3096                           tablat	equ	0xFF5
  3097                           prodh	equ	0xFF4
  3098                           prodl	equ	0xFF3
  3099                           intcon	equ	0xFF2
  3100                           postinc0	equ	0xFEE
  3101                           fsr0h	equ	0xFEA
  3102                           fsr0l	equ	0xFE9
  3103                           wreg	equ	0xFE8
  3104                           postdec1	equ	0xFE5
  3105                           fsr1h	equ	0xFE2
  3106                           fsr1l	equ	0xFE1
  3107                           postinc2	equ	0xFDE
  3108                           postdec2	equ	0xFDD
  3109                           fsr2h	equ	0xFDA
  3110                           fsr2l	equ	0xFD9
  3111                           status	equ	0xFD8
  3112                           
  3113 ;; *************** function _ActElevator *****************
  3114 ;; Defined at:
  3115 ;;		line 33 in file "actors.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  change          1    wreg     unsigned char 
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;  change          1    0[COMRAM] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;		None               void
  3122 ;; Registers used:
  3123 ;;		wreg, status,2, status,0
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3130 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;Total ram usage:        1 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; This function calls:
  3136 ;;		Nothing
  3137 ;; This function is called by:
  3138 ;;		_CheckElevator
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           	psect	text22
  3143  000C8E                     __ptext22:
  3144                           	opt stack 0
  3145  000C8E                     _ActElevator:
  3146                           	opt stack 25
  3147                           
  3148                           ;incstack = 0
  3149                           ;ActElevator@change stored from wreg
  3150  000C8E  6E2D               	movwf	ActElevator@change,c
  3151                           
  3152                           ;actors.c: 34: a_actors[0].elev += change;
  3153  000C90  502D               	movf	ActElevator@change,w,c
  3154  000C92  0100               	movlb	0	; () banked
  3155  000C94  27D2               	addwf	(_a_actors+2)& (0+255),f,b
  3156  000C96  0E00               	movlw	0
  3157  000C98  23D3               	addwfc	(_a_actors+3)& (0+255),f,b
  3158                           
  3159                           ; BSR set to: 0
  3160  000C9A  0012               	return		;funcret
  3161  000C9C                     __end_of_ActElevator:
  3162                           	opt stack 0
  3163                           pclatu	equ	0xFFB
  3164                           pclath	equ	0xFFA
  3165                           tblptru	equ	0xFF8
  3166                           tblptrh	equ	0xFF7
  3167                           tblptrl	equ	0xFF6
  3168                           tablat	equ	0xFF5
  3169                           prodh	equ	0xFF4
  3170                           prodl	equ	0xFF3
  3171                           intcon	equ	0xFF2
  3172                           postinc0	equ	0xFEE
  3173                           fsr0h	equ	0xFEA
  3174                           fsr0l	equ	0xFE9
  3175                           wreg	equ	0xFE8
  3176                           postdec1	equ	0xFE5
  3177                           fsr1h	equ	0xFE2
  3178                           fsr1l	equ	0xFE1
  3179                           postinc2	equ	0xFDE
  3180                           postdec2	equ	0xFDD
  3181                           fsr2h	equ	0xFDA
  3182                           fsr2l	equ	0xFD9
  3183                           status	equ	0xFD8
  3184                           
  3185 ;; *************** function _CheckAileron *****************
  3186 ;; Defined at:
  3187 ;;		line 59 in file "position.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;		None
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;		None
  3192 ;; Return value:  Size  Location     Type
  3193 ;;		None               void
  3194 ;; Registers used:
  3195 ;;		wreg, status,2, status,0, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3205 ;;Total ram usage:        0 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; Hardware stack levels required when called:    1
  3208 ;; This function calls:
  3209 ;;		_ActAileron
  3210 ;; This function is called by:
  3211 ;;		_CompareFrames
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           	psect	text23
  3216  000894                     __ptext23:
  3217                           	opt stack 0
  3218  000894                     _CheckAileron:
  3219                           	opt stack 25
  3220                           
  3221                           ;position.c: 62: if (a_frame[0].pos_x >= 150 && a_frame[0].pos_x <= 170) {
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;incstack = 0
  3225  000894  5004               	movf	_a_frame+3,w,c
  3226  000896  E104               	bnz	i2u92_40
  3227  000898  0E96               	movlw	150
  3228  00089A  5C03               	subwf	_a_frame+2,w,c
  3229  00089C  A0D8               	btfss	status,0,c
  3230  00089E  D00A               	goto	i2l2126
  3231  0008A0                     i2u92_40:
  3232  0008A0  5004               	movf	_a_frame+3,w,c
  3233  0008A2  E108               	bnz	i2l2126
  3234  0008A4  0EAB               	movlw	171
  3235  0008A6  5C03               	subwf	_a_frame+2,w,c
  3236  0008A8  B0D8               	btfsc	status,0,c
  3237  0008AA  D004               	goto	i2l2126
  3238                           
  3239                           ;position.c: 64: ActAileron(0);
  3240  0008AC  0E00               	movlw	0
  3241  0008AE  EC4E  F006         	call	_ActAileron
  3242                           
  3243                           ;position.c: 65: }
  3244  0008B2  0012               	return	
  3245  0008B4                     i2l2126:
  3246                           
  3247                           ;position.c: 67: else if (a_frame[0].pos_x > 170) {
  3248  0008B4  5004               	movf	_a_frame+3,w,c
  3249  0008B6  E104               	bnz	i2u94_40
  3250  0008B8  0EAB               	movlw	171
  3251  0008BA  5C03               	subwf	_a_frame+2,w,c
  3252  0008BC  A0D8               	btfss	status,0,c
  3253  0008BE  D026               	goto	i2l2142
  3254  0008C0                     i2u94_40:
  3255                           
  3256                           ;position.c: 69: if (a_frame[1].pos_x > a_frame[0].pos_x) {
  3257  0008C0  500D               	movf	_a_frame+12,w,c
  3258  0008C2  5C03               	subwf	_a_frame+2,w,c
  3259  0008C4  500E               	movf	_a_frame+13,w,c
  3260  0008C6  5804               	subwfb	_a_frame+3,w,c
  3261  0008C8  B0D8               	btfsc	status,0,c
  3262  0008CA  D01C               	goto	i2l2140
  3263                           
  3264                           ;position.c: 71: if (a_frame_dif[0].dif_pos_x <= 8) {
  3265  0008CC  BE18               	btfsc	_a_frame_dif+3,7,c
  3266  0008CE  D006               	goto	i2l2132
  3267  0008D0  5018               	movf	_a_frame_dif+3,w,c
  3268  0008D2  E114               	bnz	i2l2138
  3269  0008D4  0E09               	movlw	9
  3270  0008D6  5C17               	subwf	_a_frame_dif+2,w,c
  3271  0008D8  B0D8               	btfsc	status,0,c
  3272  0008DA  D010               	goto	i2l2138
  3273  0008DC                     i2l2132:
  3274                           
  3275                           ;position.c: 72: if (a_frame_dif[0].dif_pos_x <= 1) {
  3276  0008DC  BE18               	btfsc	_a_frame_dif+3,7,c
  3277  0008DE  D006               	goto	i2l2134
  3278  0008E0  5018               	movf	_a_frame_dif+3,w,c
  3279  0008E2  E108               	bnz	i2l2136
  3280  0008E4  0E02               	movlw	2
  3281  0008E6  5C17               	subwf	_a_frame_dif+2,w,c
  3282  0008E8  B0D8               	btfsc	status,0,c
  3283  0008EA  D004               	goto	i2l2136
  3284  0008EC                     i2l2134:
  3285                           
  3286                           ;position.c: 74: ActAileron(-3);
  3287  0008EC  0EFD               	movlw	253
  3288  0008EE  EC4E  F006         	call	_ActAileron
  3289                           
  3290                           ;position.c: 75: } else {
  3291  0008F2  0012               	return	
  3292  0008F4                     i2l2136:
  3293                           
  3294                           ;position.c: 77: ActAileron(0);
  3295  0008F4  0E00               	movlw	0
  3296  0008F6  EC4E  F006         	call	_ActAileron
  3297                           
  3298                           ;position.c: 78: }
  3299                           ;position.c: 79: } else {
  3300  0008FA  0012               	return	
  3301  0008FC                     i2l2138:
  3302                           
  3303                           ;position.c: 81: ActAileron(3);
  3304  0008FC  0E03               	movlw	3
  3305  0008FE  EC4E  F006         	call	_ActAileron
  3306                           
  3307                           ;position.c: 82: }
  3308                           ;position.c: 83: } else {
  3309  000902  0012               	return	
  3310  000904                     i2l2140:
  3311                           
  3312                           ;position.c: 89: ActAileron(-3);
  3313  000904  0EFD               	movlw	253
  3314  000906  EC4E  F006         	call	_ActAileron
  3315                           
  3316                           ;position.c: 90: }
  3317                           ;position.c: 91: }
  3318  00090A  0012               	return	
  3319  00090C                     i2l2142:
  3320                           
  3321                           ;position.c: 93: else {
  3322                           ;position.c: 95: if (a_frame[1].pos_x < a_frame[0].pos_x) {
  3323  00090C  5003               	movf	_a_frame+2,w,c
  3324  00090E  5C0D               	subwf	_a_frame+12,w,c
  3325  000910  5004               	movf	_a_frame+3,w,c
  3326  000912  580E               	subwfb	_a_frame+13,w,c
  3327  000914  B0D8               	btfsc	status,0,c
  3328  000916  D01B               	goto	i2l2154
  3329                           
  3330                           ;position.c: 97: if (a_frame_dif[0].dif_pos_x >= -8) {
  3331  000918  AE18               	btfss	_a_frame_dif+3,7,c
  3332  00091A  D006               	goto	i2l2146
  3333  00091C  0EF8               	movlw	248
  3334  00091E  5C17               	subwf	_a_frame_dif+2,w,c
  3335  000920  0EFF               	movlw	255
  3336  000922  5818               	subwfb	_a_frame_dif+3,w,c
  3337  000924  A0D8               	btfss	status,0,c
  3338  000926  D00F               	goto	i2l2152
  3339  000928                     i2l2146:
  3340                           
  3341                           ;position.c: 98: if (a_frame_dif[0].dif_pos_x >= -1) {
  3342  000928  AE18               	btfss	_a_frame_dif+3,7,c
  3343  00092A  D005               	goto	i2l2148
  3344  00092C  2817               	incf	_a_frame_dif+2,w,c
  3345  00092E  0EFF               	movlw	255
  3346  000930  5818               	subwfb	_a_frame_dif+3,w,c
  3347  000932  A0D8               	btfss	status,0,c
  3348  000934  D004               	goto	i2l2150
  3349  000936                     i2l2148:
  3350                           
  3351                           ;position.c: 100: ActAileron(3);
  3352  000936  0E03               	movlw	3
  3353  000938  EC4E  F006         	call	_ActAileron
  3354                           
  3355                           ;position.c: 101: } else {
  3356  00093C  0012               	return	
  3357  00093E                     i2l2150:
  3358                           
  3359                           ;position.c: 103: ActAileron(0);
  3360  00093E  0E00               	movlw	0
  3361  000940  EC4E  F006         	call	_ActAileron
  3362                           
  3363                           ;position.c: 104: }
  3364                           ;position.c: 105: } else {
  3365  000944  0012               	return	
  3366  000946                     i2l2152:
  3367                           
  3368                           ;position.c: 107: ActAileron(-3);
  3369  000946  0EFD               	movlw	253
  3370  000948  EC4E  F006         	call	_ActAileron
  3371                           
  3372                           ;position.c: 108: }
  3373                           ;position.c: 109: } else {
  3374  00094C  0012               	return	
  3375  00094E                     i2l2154:
  3376                           
  3377                           ;position.c: 115: ActAileron(3);
  3378  00094E  0E03               	movlw	3
  3379  000950  EC4E  F006         	call	_ActAileron
  3380  000954  0012               	return	
  3381  000956                     __end_of_CheckAileron:
  3382                           	opt stack 0
  3383                           pclatu	equ	0xFFB
  3384                           pclath	equ	0xFFA
  3385                           tblptru	equ	0xFF8
  3386                           tblptrh	equ	0xFF7
  3387                           tblptrl	equ	0xFF6
  3388                           tablat	equ	0xFF5
  3389                           prodh	equ	0xFF4
  3390                           prodl	equ	0xFF3
  3391                           intcon	equ	0xFF2
  3392                           postinc0	equ	0xFEE
  3393                           fsr0h	equ	0xFEA
  3394                           fsr0l	equ	0xFE9
  3395                           wreg	equ	0xFE8
  3396                           postdec1	equ	0xFE5
  3397                           fsr1h	equ	0xFE2
  3398                           fsr1l	equ	0xFE1
  3399                           postinc2	equ	0xFDE
  3400                           postdec2	equ	0xFDD
  3401                           fsr2h	equ	0xFDA
  3402                           fsr2l	equ	0xFD9
  3403                           status	equ	0xFD8
  3404                           
  3405 ;; *************** function _ActAileron *****************
  3406 ;; Defined at:
  3407 ;;		line 24 in file "actors.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;  change          1    wreg     unsigned char 
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;  change          1    0[COMRAM] unsigned char 
  3412 ;; Return value:  Size  Location     Type
  3413 ;;		None               void
  3414 ;; Registers used:
  3415 ;;		wreg, status,2, status,0
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3422 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;Total ram usage:        1 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; This function calls:
  3428 ;;		Nothing
  3429 ;; This function is called by:
  3430 ;;		_CheckAileron
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           	psect	text24
  3435  000C9C                     __ptext24:
  3436                           	opt stack 0
  3437  000C9C                     _ActAileron:
  3438                           	opt stack 25
  3439                           
  3440                           ;incstack = 0
  3441                           ;ActAileron@change stored from wreg
  3442  000C9C  6E2D               	movwf	ActAileron@change,c
  3443                           
  3444                           ;actors.c: 25: a_actors[0].aile += change;
  3445  000C9E  502D               	movf	ActAileron@change,w,c
  3446  000CA0  0100               	movlb	0	; () banked
  3447  000CA2  27D0               	addwf	_a_actors& (0+255),f,b
  3448  000CA4  0E00               	movlw	0
  3449  000CA6  23D1               	addwfc	(_a_actors+1)& (0+255),f,b
  3450                           
  3451                           ; BSR set to: 0
  3452  000CA8  0012               	return		;funcret
  3453  000CAA                     __end_of_ActAileron:
  3454                           	opt stack 0
  3455                           pclatu	equ	0xFFB
  3456                           pclath	equ	0xFFA
  3457                           tblptru	equ	0xFF8
  3458                           tblptrh	equ	0xFF7
  3459                           tblptrl	equ	0xFF6
  3460                           tablat	equ	0xFF5
  3461                           prodh	equ	0xFF4
  3462                           prodl	equ	0xFF3
  3463                           intcon	equ	0xFF2
  3464                           postinc0	equ	0xFEE
  3465                           fsr0h	equ	0xFEA
  3466                           fsr0l	equ	0xFE9
  3467                           wreg	equ	0xFE8
  3468                           postdec1	equ	0xFE5
  3469                           fsr1h	equ	0xFE2
  3470                           fsr1l	equ	0xFE1
  3471                           postinc2	equ	0xFDE
  3472                           postdec2	equ	0xFDD
  3473                           fsr2h	equ	0xFDA
  3474                           fsr2l	equ	0xFD9
  3475                           status	equ	0xFD8
  3476                           
  3477 ;; *************** function _CheckThrottle *****************
  3478 ;; Defined at:
  3479 ;;		line 237 in file "position.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;		None
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  i               2    6[COMRAM] int 
  3484 ;;  i               2   12[COMRAM] int 
  3485 ;;  i               2   10[COMRAM] int 
  3486 ;;  tmp             2    8[COMRAM] int 
  3487 ;; Return value:  Size  Location     Type
  3488 ;;		None               void
  3489 ;; Registers used:
  3490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3498 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3499 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3500 ;;Total ram usage:       13 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    2
  3503 ;; This function calls:
  3504 ;;		_ActThrottle
  3505 ;;		_BeneathFloor
  3506 ;;		_BeneathTable
  3507 ;; This function is called by:
  3508 ;;		_Isr
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           	psect	text25
  3513  0000B6                     __ptext25:
  3514                           	opt stack 0
  3515  0000B6                     _CheckThrottle:
  3516                           	opt stack 25
  3517                           
  3518                           ;position.c: 239: if (id_current_cc == 0) {
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;incstack = 0
  3522  0000B6  5025               	movf	_id_current_cc,w,c
  3523  0000B8  1026               	iorwf	_id_current_cc+1,w,c
  3524  0000BA  A4D8               	btfss	status,2,c
  3525  0000BC  D01D               	goto	i2l2406
  3526                           
  3527                           ;position.c: 241: if (a_frame_dif[0].dif_height < -cm50) {
  3528  0000BE  C053  F02E         	movff	_cm50,??_CheckThrottle
  3529  0000C2  C054  F02F         	movff	_cm50+1,??_CheckThrottle+1
  3530  0000C6  1E2E               	comf	??_CheckThrottle,f,c
  3531  0000C8  1E2F               	comf	??_CheckThrottle+1,f,c
  3532  0000CA  4A2E               	infsnz	??_CheckThrottle,f,c
  3533  0000CC  2A2F               	incf	??_CheckThrottle+1,f,c
  3534  0000CE  502E               	movf	??_CheckThrottle,w,c
  3535  0000D0  5C1B               	subwf	_a_frame_dif+6,w,c
  3536  0000D2  502F               	movf	??_CheckThrottle+1,w,c
  3537  0000D4  581C               	subwfb	_a_frame_dif+7,w,c
  3538  0000D6  B0D8               	btfsc	status,0,c
  3539  0000D8  D006               	goto	i2l884
  3540                           
  3541                           ;position.c: 242: if (storedif) {
  3542  0000DA  AA57               	btfss	_storedif/(0+8),_storedif& (0+7),c
  3543  0000DC  D002               	goto	i2l885
  3544                           
  3545                           ;position.c: 243: table = 0;
  3546  0000DE  9C57               	bcf	_table/(0+8),_table& (0+7),c
  3547                           
  3548                           ;position.c: 244: } else {
  3549  0000E0  D003               	goto	i2l887
  3550  0000E2                     i2l885:
  3551                           
  3552                           ;position.c: 245: storedif = 1;
  3553  0000E2  8A57               	bsf	_storedif/(0+8),_storedif& (0+7),c
  3554                           
  3555                           ;position.c: 246: }
  3556                           ;position.c: 247: }else{
  3557  0000E4  D001               	goto	i2l887
  3558  0000E6                     i2l884:
  3559                           
  3560                           ;position.c: 248: storedif = 0;
  3561  0000E6  9A57               	bcf	_storedif/(0+8),_storedif& (0+7),c
  3562  0000E8                     i2l887:
  3563                           
  3564                           ;position.c: 249: }
  3565                           ;position.c: 250: if (table) {
  3566  0000E8  AC57               	btfss	_table/(0+8),_table& (0+7),c
  3567  0000EA  D003               	goto	i2l2404
  3568                           
  3569                           ;position.c: 251: BeneathTable();
  3570  0000EC  EC27  F005         	call	_BeneathTable	;wreg free
  3571                           
  3572                           ;position.c: 252: } else {
  3573  0000F0  0012               	return	
  3574  0000F2                     i2l2404:
  3575                           
  3576                           ;position.c: 253: BeneathFloor();
  3577  0000F2  EC4F  F005         	call	_BeneathFloor	;wreg free
  3578                           
  3579                           ;position.c: 254: }
  3580                           ;position.c: 255: } else if (id_current_cc > 0 && id_current_cc < (c_path - 1)) {
  3581  0000F6  0012               	return	
  3582  0000F8                     i2l2406:
  3583  0000F8  BE26               	btfsc	_id_current_cc+1,7,c
  3584  0000FA  D01E               	goto	i2l2412
  3585  0000FC  5026               	movf	_id_current_cc+1,w,c
  3586  0000FE  E103               	bnz	i2u156_40
  3587  000100  0425               	decf	_id_current_cc,w,c
  3588  000102  A0D8               	btfss	status,0,c
  3589  000104  D019               	goto	i2l2412
  3590  000106                     i2u156_40:
  3591  000106  0EFF               	movlw	255
  3592  000108  6E2E               	movwf	??_CheckThrottle& (0+255),c
  3593  00010A  0EFF               	movlw	255
  3594  00010C  6E2F               	movwf	(??_CheckThrottle+1)& (0+255),c
  3595  00010E  C049  F030         	movff	_c_path,??_CheckThrottle+2
  3596  000112  C04A  F031         	movff	_c_path+1,??_CheckThrottle+3
  3597  000116  502E               	movf	??_CheckThrottle,w,c
  3598  000118  2630               	addwf	??_CheckThrottle+2,f,c
  3599  00011A  502F               	movf	??_CheckThrottle+1,w,c
  3600  00011C  2231               	addwfc	??_CheckThrottle+3,f,c
  3601  00011E  5030               	movf	??_CheckThrottle+2,w,c
  3602  000120  5C25               	subwf	_id_current_cc,w,c
  3603  000122  5026               	movf	_id_current_cc+1,w,c
  3604  000124  0A80               	xorlw	128
  3605  000126  6E32               	movwf	(??_CheckThrottle+4)& (0+255),c
  3606  000128  5031               	movf	??_CheckThrottle+3,w,c
  3607  00012A  0A80               	xorlw	128
  3608  00012C  5832               	subwfb	(??_CheckThrottle+4)& (0+255),w,c
  3609  00012E  B0D8               	btfsc	status,0,c
  3610  000130  D003               	goto	i2l2412
  3611                           
  3612                           ;position.c: 256: BeneathFloor();
  3613  000132  EC4F  F005         	call	_BeneathFloor	;wreg free
  3614                           
  3615                           ;position.c: 257: } else if (id_current_cc == (c_path - 1)) {
  3616  000136  0012               	return	
  3617  000138                     i2l2412:
  3618  000138  0EFF               	movlw	255
  3619  00013A  6E2E               	movwf	??_CheckThrottle& (0+255),c
  3620  00013C  0EFF               	movlw	255
  3621  00013E  6E2F               	movwf	(??_CheckThrottle+1)& (0+255),c
  3622  000140  C049  F030         	movff	_c_path,??_CheckThrottle+2
  3623  000144  C04A  F031         	movff	_c_path+1,??_CheckThrottle+3
  3624  000148  502E               	movf	??_CheckThrottle,w,c
  3625  00014A  2630               	addwf	??_CheckThrottle+2,f,c
  3626  00014C  502F               	movf	??_CheckThrottle+1,w,c
  3627  00014E  2231               	addwfc	??_CheckThrottle+3,f,c
  3628  000150  5025               	movf	_id_current_cc,w,c
  3629  000152  1830               	xorwf	??_CheckThrottle+2,w,c
  3630  000154  E119               	bnz	i2l2424
  3631  000156  5026               	movf	_id_current_cc+1,w,c
  3632  000158  1831               	xorwf	??_CheckThrottle+3,w,c
  3633  00015A  A4D8               	btfss	status,2,c
  3634  00015C  D015               	goto	i2l2424
  3635                           
  3636                           ;position.c: 259: if (a_frame_dif[0].dif_height > cm50) {
  3637  00015E  501B               	movf	_a_frame_dif+6,w,c
  3638  000160  5C53               	subwf	_cm50,w,c
  3639  000162  501C               	movf	_a_frame_dif+7,w,c
  3640  000164  5854               	subwfb	_cm50+1,w,c
  3641  000166  B0D8               	btfsc	status,0,c
  3642  000168  D006               	goto	i2l894
  3643                           
  3644                           ;position.c: 260: if (storedif) {
  3645  00016A  AA57               	btfss	_storedif/(0+8),_storedif& (0+7),c
  3646  00016C  D002               	goto	i2l895
  3647                           
  3648                           ;position.c: 261: table = 1;
  3649  00016E  8C57               	bsf	_table/(0+8),_table& (0+7),c
  3650                           
  3651                           ;position.c: 262: } else {
  3652  000170  D003               	goto	i2l897
  3653  000172                     i2l895:
  3654                           
  3655                           ;position.c: 263: storedif = 1;
  3656  000172  8A57               	bsf	_storedif/(0+8),_storedif& (0+7),c
  3657                           
  3658                           ;position.c: 264: }
  3659                           ;position.c: 265: }else{
  3660  000174  D001               	goto	i2l897
  3661  000176                     i2l894:
  3662                           
  3663                           ;position.c: 266: storedif = 0;
  3664  000176  9A57               	bcf	_storedif/(0+8),_storedif& (0+7),c
  3665  000178                     i2l897:
  3666                           
  3667                           ;position.c: 267: }
  3668                           ;position.c: 268: if (table) {
  3669  000178  AC57               	btfss	_table/(0+8),_table& (0+7),c
  3670  00017A  D003               	goto	i2l2422
  3671                           
  3672                           ;position.c: 269: BeneathTable();
  3673  00017C  EC27  F005         	call	_BeneathTable	;wreg free
  3674                           
  3675                           ;position.c: 270: } else {
  3676  000180  0012               	return	
  3677  000182                     i2l2422:
  3678                           
  3679                           ;position.c: 271: BeneathFloor();
  3680  000182  EC4F  F005         	call	_BeneathFloor	;wreg free
  3681                           
  3682                           ;position.c: 272: }
  3683                           ;position.c: 273: } else {
  3684  000186  0012               	return	
  3685  000188                     i2l2424:
  3686                           
  3687                           ;position.c: 278: if (a_frame[0].height >= 30) {
  3688  000188  5008               	movf	_a_frame+7,w,c
  3689  00018A  E104               	bnz	i2u162_40
  3690  00018C  0E1E               	movlw	30
  3691  00018E  5C07               	subwf	_a_frame+6,w,c
  3692  000190  A0D8               	btfss	status,0,c
  3693  000192  D026               	goto	i2l901
  3694  000194                     i2u162_40:
  3695                           
  3696                           ;position.c: 279: if (a_frame[1].height > a_frame[0].height) {
  3697  000194  5011               	movf	_a_frame+16,w,c
  3698  000196  5C07               	subwf	_a_frame+6,w,c
  3699  000198  5012               	movf	_a_frame+17,w,c
  3700  00019A  5808               	subwfb	_a_frame+7,w,c
  3701  00019C  B0D8               	btfsc	status,0,c
  3702  00019E  D01C               	goto	i2l2438
  3703                           
  3704                           ;position.c: 281: if (a_frame_dif[0].dif_height <= 46) {
  3705  0001A0  BE1C               	btfsc	_a_frame_dif+7,7,c
  3706  0001A2  D006               	goto	i2l2430
  3707  0001A4  501C               	movf	_a_frame_dif+7,w,c
  3708  0001A6  E114               	bnz	i2l2436
  3709  0001A8  0E2F               	movlw	47
  3710  0001AA  5C1B               	subwf	_a_frame_dif+6,w,c
  3711  0001AC  B0D8               	btfsc	status,0,c
  3712  0001AE  D010               	goto	i2l2436
  3713  0001B0                     i2l2430:
  3714                           
  3715                           ;position.c: 282: if (a_frame_dif[0].dif_pos_x <= 23) {
  3716  0001B0  BE18               	btfsc	_a_frame_dif+3,7,c
  3717  0001B2  D006               	goto	i2l2432
  3718  0001B4  5018               	movf	_a_frame_dif+3,w,c
  3719  0001B6  E108               	bnz	i2l2434
  3720  0001B8  0E18               	movlw	24
  3721  0001BA  5C17               	subwf	_a_frame_dif+2,w,c
  3722  0001BC  B0D8               	btfsc	status,0,c
  3723  0001BE  D004               	goto	i2l2434
  3724  0001C0                     i2l2432:
  3725                           
  3726                           ;position.c: 284: ActThrottle(-3);
  3727  0001C0  0EFD               	movlw	253
  3728  0001C2  EC55  F006         	call	_ActThrottle
  3729                           
  3730                           ;position.c: 285: } else {
  3731  0001C6  0012               	return	
  3732  0001C8                     i2l2434:
  3733                           
  3734                           ;position.c: 286: ActThrottle(0);
  3735  0001C8  0E00               	movlw	0
  3736  0001CA  EC55  F006         	call	_ActThrottle
  3737                           
  3738                           ;position.c: 287: }
  3739                           ;position.c: 288: } else {
  3740  0001CE  0012               	return	
  3741  0001D0                     i2l2436:
  3742                           
  3743                           ;position.c: 289: ActThrottle(3);
  3744  0001D0  0E03               	movlw	3
  3745  0001D2  EC55  F006         	call	_ActThrottle
  3746                           
  3747                           ;position.c: 290: }
  3748                           ;position.c: 291: } else {
  3749  0001D6  0012               	return	
  3750  0001D8                     i2l2438:
  3751                           
  3752                           ;position.c: 293: ActThrottle(-3);
  3753  0001D8  0EFD               	movlw	253
  3754  0001DA  EC55  F006         	call	_ActThrottle
  3755                           
  3756                           ;position.c: 294: }
  3757                           ;position.c: 295: } else {
  3758  0001DE  0012               	return	
  3759  0001E0                     i2l901:
  3760                           
  3761                           ;position.c: 300: if(direction){
  3762  0001E0  A057               	btfss	_direction/(0+8),_direction& (0+7),c
  3763  0001E2  D002               	goto	i2l909
  3764                           
  3765                           ;position.c: 301: direction = 0;
  3766  0001E4  9057               	bcf	_direction/(0+8),_direction& (0+7),c
  3767                           
  3768                           ;position.c: 302: }else{
  3769  0001E6  D001               	goto	i2l2442
  3770  0001E8                     i2l909:
  3771                           
  3772                           ;position.c: 303: direction = 1;
  3773  0001E8  8057               	bsf	_direction/(0+8),_direction& (0+7),c
  3774  0001EA                     i2l2442:
  3775                           
  3776                           ;position.c: 304: }
  3777                           ;position.c: 305: int tmp = c_path - 1;
  3778  0001EA  0EFF               	movlw	255
  3779  0001EC  2449               	addwf	_c_path,w,c
  3780  0001EE  6E35               	movwf	CheckThrottle@tmp,c
  3781  0001F0  0EFF               	movlw	255
  3782  0001F2  204A               	addwfc	_c_path+1,w,c
  3783  0001F4  6E36               	movwf	CheckThrottle@tmp+1,c
  3784                           
  3785                           ;position.c: 306: for (int i = 0; i <= tmp; i++) {
  3786  0001F6  0E00               	movlw	0
  3787  0001F8  6E38               	movwf	CheckThrottle@i+1,c
  3788  0001FA  0E00               	movlw	0
  3789  0001FC  6E37               	movwf	CheckThrottle@i,c
  3790  0001FE  D03A               	goto	i2l911
  3791  000200                     i2l2446:
  3792                           
  3793                           ;position.c: 307: a_path_old[i].higher_cc = a_path[i].higher_cc;
  3794  000200  C037  F02E         	movff	CheckThrottle@i,??_CheckThrottle
  3795  000204  C038  F02F         	movff	CheckThrottle@i+1,??_CheckThrottle+1
  3796  000208  90D8               	bcf	status,0,c
  3797  00020A  362E               	rlcf	??_CheckThrottle,f,c
  3798  00020C  362F               	rlcf	??_CheckThrottle+1,f,c
  3799  00020E  0E01               	movlw	1
  3800  000210  262E               	addwf	??_CheckThrottle,f,c
  3801  000212  0E00               	movlw	0
  3802  000214  222F               	addwfc	??_CheckThrottle+1,f,c
  3803  000216  0EA6               	movlw	low _a_path
  3804  000218  242E               	addwf	??_CheckThrottle,w,c
  3805  00021A  6ED9               	movwf	fsr2l,c
  3806  00021C  0E00               	movlw	high _a_path
  3807  00021E  202F               	addwfc	??_CheckThrottle+1,w,c
  3808  000220  6EDA               	movwf	fsr2h,c
  3809  000222  C037  F030         	movff	CheckThrottle@i,??_CheckThrottle+2
  3810  000226  C038  F031         	movff	CheckThrottle@i+1,??_CheckThrottle+3
  3811  00022A  90D8               	bcf	status,0,c
  3812  00022C  3630               	rlcf	??_CheckThrottle+2,f,c
  3813  00022E  3631               	rlcf	??_CheckThrottle+3,f,c
  3814  000230  0E01               	movlw	1
  3815  000232  2630               	addwf	??_CheckThrottle+2,f,c
  3816  000234  0E00               	movlw	0
  3817  000236  2231               	addwfc	??_CheckThrottle+3,f,c
  3818  000238  0E00               	movlw	low _a_path_old
  3819  00023A  2430               	addwf	??_CheckThrottle+2,w,c
  3820  00023C  6EE1               	movwf	fsr1l,c
  3821  00023E  0E01               	movlw	high _a_path_old
  3822  000240  2031               	addwfc	??_CheckThrottle+3,w,c
  3823  000242  6EE2               	movwf	fsr1h,c
  3824  000244  CFDF FFE7          	movff	indf2,indf1
  3825                           
  3826                           ;position.c: 308: a_path_old[i].lower_cc = a_path[i].lower_cc;
  3827  000248  90D8               	bcf	status,0,c
  3828  00024A  3437               	rlcf	CheckThrottle@i,w,c
  3829  00024C  6ED9               	movwf	fsr2l,c
  3830  00024E  3438               	rlcf	CheckThrottle@i+1,w,c
  3831  000250  6EDA               	movwf	fsr2h,c
  3832  000252  0EA6               	movlw	low _a_path
  3833  000254  26D9               	addwf	fsr2l,f,c
  3834  000256  0E00               	movlw	high _a_path
  3835  000258  22DA               	addwfc	fsr2h,f,c
  3836  00025A  90D8               	bcf	status,0,c
  3837  00025C  3437               	rlcf	CheckThrottle@i,w,c
  3838  00025E  6EE1               	movwf	fsr1l,c
  3839  000260  3438               	rlcf	CheckThrottle@i+1,w,c
  3840  000262  6EE2               	movwf	fsr1h,c
  3841  000264  0E00               	movlw	low _a_path_old
  3842  000266  26E1               	addwf	fsr1l,f,c
  3843  000268  0E01               	movlw	high _a_path_old
  3844  00026A  22E2               	addwfc	fsr1h,f,c
  3845  00026C  CFDF FFE7          	movff	indf2,indf1
  3846  000270  4A37               	infsnz	CheckThrottle@i,f,c
  3847  000272  2A38               	incf	CheckThrottle@i+1,f,c
  3848  000274                     i2l911:
  3849  000274  5037               	movf	CheckThrottle@i,w,c
  3850  000276  5C35               	subwf	CheckThrottle@tmp,w,c
  3851  000278  5036               	movf	CheckThrottle@tmp+1,w,c
  3852  00027A  0A80               	xorlw	128
  3853  00027C  6E2E               	movwf	??_CheckThrottle& (0+255),c
  3854  00027E  5038               	movf	CheckThrottle@i+1,w,c
  3855  000280  0A80               	xorlw	128
  3856  000282  582E               	subwfb	??_CheckThrottle& (0+255),w,c
  3857  000284  B0D8               	btfsc	status,0,c
  3858  000286  D7BC               	goto	i2l2446
  3859                           
  3860                           ;position.c: 309: }
  3861                           ;position.c: 310: for (int i = 0; i <= tmp; i++) {
  3862  000288  0E00               	movlw	0
  3863  00028A  6E3A               	movwf	CheckThrottle@i_1241+1,c
  3864  00028C  0E00               	movlw	0
  3865  00028E  6E39               	movwf	CheckThrottle@i_1241,c
  3866  000290  D04E               	goto	i2l2458
  3867  000292                     i2l2454:
  3868                           
  3869                           ;position.c: 311: a_path[(tmp - i)].higher_cc = a_path_old[i].higher_cc;
  3870  000292  C039  F02E         	movff	CheckThrottle@i_1241,??_CheckThrottle
  3871  000296  C03A  F02F         	movff	CheckThrottle@i_1241+1,??_CheckThrottle+1
  3872  00029A  90D8               	bcf	status,0,c
  3873  00029C  362E               	rlcf	??_CheckThrottle,f,c
  3874  00029E  362F               	rlcf	??_CheckThrottle+1,f,c
  3875  0002A0  0E01               	movlw	1
  3876  0002A2  262E               	addwf	??_CheckThrottle,f,c
  3877  0002A4  0E00               	movlw	0
  3878  0002A6  222F               	addwfc	??_CheckThrottle+1,f,c
  3879  0002A8  0E00               	movlw	low _a_path_old
  3880  0002AA  242E               	addwf	??_CheckThrottle,w,c
  3881  0002AC  6ED9               	movwf	fsr2l,c
  3882  0002AE  0E01               	movlw	high _a_path_old
  3883  0002B0  202F               	addwfc	??_CheckThrottle+1,w,c
  3884  0002B2  6EDA               	movwf	fsr2h,c
  3885  0002B4  C039  F030         	movff	CheckThrottle@i_1241,??_CheckThrottle+2
  3886  0002B8  C03A  F031         	movff	CheckThrottle@i_1241+1,??_CheckThrottle+3
  3887  0002BC  1E30               	comf	??_CheckThrottle+2,f,c
  3888  0002BE  1E31               	comf	??_CheckThrottle+3,f,c
  3889  0002C0  4A30               	infsnz	??_CheckThrottle+2,f,c
  3890  0002C2  2A31               	incf	??_CheckThrottle+3,f,c
  3891  0002C4  5035               	movf	CheckThrottle@tmp,w,c
  3892  0002C6  2630               	addwf	??_CheckThrottle+2,f,c
  3893  0002C8  5036               	movf	CheckThrottle@tmp+1,w,c
  3894  0002CA  2231               	addwfc	??_CheckThrottle+3,f,c
  3895  0002CC  90D8               	bcf	status,0,c
  3896  0002CE  3630               	rlcf	??_CheckThrottle+2,f,c
  3897  0002D0  3631               	rlcf	??_CheckThrottle+3,f,c
  3898  0002D2  0E01               	movlw	1
  3899  0002D4  2630               	addwf	??_CheckThrottle+2,f,c
  3900  0002D6  0E00               	movlw	0
  3901  0002D8  2231               	addwfc	??_CheckThrottle+3,f,c
  3902  0002DA  0EA6               	movlw	low _a_path
  3903  0002DC  2430               	addwf	??_CheckThrottle+2,w,c
  3904  0002DE  6EE1               	movwf	fsr1l,c
  3905  0002E0  0E00               	movlw	high _a_path
  3906  0002E2  2031               	addwfc	??_CheckThrottle+3,w,c
  3907  0002E4  6EE2               	movwf	fsr1h,c
  3908  0002E6  CFDF FFE7          	movff	indf2,indf1
  3909                           
  3910                           ;position.c: 312: a_path[(tmp - i)].lower_cc = a_path_old[i].lower_cc;
  3911  0002EA  90D8               	bcf	status,0,c
  3912  0002EC  3439               	rlcf	CheckThrottle@i_1241,w,c
  3913  0002EE  6ED9               	movwf	fsr2l,c
  3914  0002F0  343A               	rlcf	CheckThrottle@i_1241+1,w,c
  3915  0002F2  6EDA               	movwf	fsr2h,c
  3916  0002F4  0E00               	movlw	low _a_path_old
  3917  0002F6  26D9               	addwf	fsr2l,f,c
  3918  0002F8  0E01               	movlw	high _a_path_old
  3919  0002FA  22DA               	addwfc	fsr2h,f,c
  3920  0002FC  C039  F02E         	movff	CheckThrottle@i_1241,??_CheckThrottle
  3921  000300  C03A  F02F         	movff	CheckThrottle@i_1241+1,??_CheckThrottle+1
  3922  000304  1E2E               	comf	??_CheckThrottle,f,c
  3923  000306  1E2F               	comf	??_CheckThrottle+1,f,c
  3924  000308  4A2E               	infsnz	??_CheckThrottle,f,c
  3925  00030A  2A2F               	incf	??_CheckThrottle+1,f,c
  3926  00030C  5035               	movf	CheckThrottle@tmp,w,c
  3927  00030E  262E               	addwf	??_CheckThrottle,f,c
  3928  000310  5036               	movf	CheckThrottle@tmp+1,w,c
  3929  000312  222F               	addwfc	??_CheckThrottle+1,f,c
  3930  000314  90D8               	bcf	status,0,c
  3931  000316  362E               	rlcf	??_CheckThrottle,f,c
  3932  000318  362F               	rlcf	??_CheckThrottle+1,f,c
  3933  00031A  0EA6               	movlw	low _a_path
  3934  00031C  242E               	addwf	??_CheckThrottle,w,c
  3935  00031E  6EE1               	movwf	fsr1l,c
  3936  000320  0E00               	movlw	high _a_path
  3937  000322  202F               	addwfc	??_CheckThrottle+1,w,c
  3938  000324  6EE2               	movwf	fsr1h,c
  3939  000326  CFDF FFE7          	movff	indf2,indf1
  3940  00032A  4A39               	infsnz	CheckThrottle@i_1241,f,c
  3941  00032C  2A3A               	incf	CheckThrottle@i_1241+1,f,c
  3942  00032E                     i2l2458:
  3943  00032E  5039               	movf	CheckThrottle@i_1241,w,c
  3944  000330  5C35               	subwf	CheckThrottle@tmp,w,c
  3945  000332  5036               	movf	CheckThrottle@tmp+1,w,c
  3946  000334  0A80               	xorlw	128
  3947  000336  6E2E               	movwf	??_CheckThrottle& (0+255),c
  3948  000338  503A               	movf	CheckThrottle@i_1241+1,w,c
  3949  00033A  0A80               	xorlw	128
  3950  00033C  582E               	subwfb	??_CheckThrottle& (0+255),w,c
  3951  00033E  B0D8               	btfsc	status,0,c
  3952  000340  D7A8               	goto	i2l2454
  3953                           
  3954                           ;position.c: 313: }
  3955                           ;position.c: 315: for (int i = 0; i <= 10000; i++) {
  3956  000342  0E00               	movlw	0
  3957  000344  6E34               	movwf	CheckThrottle@i_1242+1,c
  3958  000346  0E00               	movlw	0
  3959  000348  6E33               	movwf	CheckThrottle@i_1242,c
  3960  00034A                     i2l2462:
  3961  00034A  BE34               	btfsc	CheckThrottle@i_1242+1,7,c
  3962  00034C  D006               	goto	i2l2466
  3963  00034E  0E11               	movlw	17
  3964  000350  5C33               	subwf	CheckThrottle@i_1242,w,c
  3965  000352  0E27               	movlw	39
  3966  000354  5834               	subwfb	CheckThrottle@i_1242+1,w,c
  3967  000356  B0D8               	btfsc	status,0,c
  3968  000358  0012               	return	
  3969  00035A                     i2l2466:
  3970                           
  3971                           ;position.c: 316: _delay((unsigned long)((3)*(16000000/4000.0)));
  3972  00035A  0E10               	movlw	16
  3973  00035C  6E2E               	movwf	??_CheckThrottle& (0+255),c
  3974  00035E  0E94               	movlw	148
  3975  000360                     i2u174_47:
  3976  000360  2EE8               	decfsz	wreg,f,c
  3977  000362  D7FE               	goto	i2u174_47
  3978  000364  2E2E               	decfsz	??_CheckThrottle& (0+255),f,c
  3979  000366  D7FC               	goto	i2u174_47
  3980  000368  D000               	nop2	
  3981  00036A  4A33               	infsnz	CheckThrottle@i_1242,f,c
  3982  00036C  2A34               	incf	CheckThrottle@i_1242+1,f,c
  3983  00036E  D7ED               	goto	i2l2462
  3984  000370                     __end_of_CheckThrottle:
  3985                           	opt stack 0
  3986                           pclatu	equ	0xFFB
  3987                           pclath	equ	0xFFA
  3988                           tblptru	equ	0xFF8
  3989                           tblptrh	equ	0xFF7
  3990                           tblptrl	equ	0xFF6
  3991                           tablat	equ	0xFF5
  3992                           prodh	equ	0xFF4
  3993                           prodl	equ	0xFF3
  3994                           intcon	equ	0xFF2
  3995                           postinc0	equ	0xFEE
  3996                           fsr0h	equ	0xFEA
  3997                           fsr0l	equ	0xFE9
  3998                           wreg	equ	0xFE8
  3999                           indf1	equ	0xFE7
  4000                           postdec1	equ	0xFE5
  4001                           fsr1h	equ	0xFE2
  4002                           fsr1l	equ	0xFE1
  4003                           indf2	equ	0xFDF
  4004                           postinc2	equ	0xFDE
  4005                           postdec2	equ	0xFDD
  4006                           fsr2h	equ	0xFDA
  4007                           fsr2l	equ	0xFD9
  4008                           status	equ	0xFD8
  4009                           
  4010 ;; *************** function _BeneathTable *****************
  4011 ;; Defined at:
  4012 ;;		line 196 in file "position.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;		None
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;		None
  4017 ;; Return value:  Size  Location     Type
  4018 ;;		None               void
  4019 ;; Registers used:
  4020 ;;		wreg, status,2, status,0, cstack
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4030 ;;Total ram usage:        0 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    1
  4033 ;; This function calls:
  4034 ;;		_ActThrottle
  4035 ;; This function is called by:
  4036 ;;		_CheckThrottle
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           	psect	text26
  4041  000A4E                     __ptext26:
  4042                           	opt stack 0
  4043  000A4E                     _BeneathTable:
  4044                           	opt stack 25
  4045                           
  4046                           ;position.c: 197: if (a_frame[0].height <= cm120 && a_frame[0].height >= cm80) {
  4047                           
  4048                           ;incstack = 0
  4049  000A4E  5007               	movf	_a_frame+6,w,c
  4050  000A50  5C4D               	subwf	_cm120,w,c
  4051  000A52  5008               	movf	_a_frame+7,w,c
  4052  000A54  584E               	subwfb	_cm120+1,w,c
  4053  000A56  A0D8               	btfss	status,0,c
  4054  000A58  D00A               	goto	i2l2272
  4055  000A5A  5055               	movf	_cm80,w,c
  4056  000A5C  5C07               	subwf	_a_frame+6,w,c
  4057  000A5E  5056               	movf	_cm80+1,w,c
  4058  000A60  5808               	subwfb	_a_frame+7,w,c
  4059  000A62  A0D8               	btfss	status,0,c
  4060  000A64  D004               	goto	i2l2272
  4061                           
  4062                           ;position.c: 198: ActThrottle(0);
  4063  000A66  0E00               	movlw	0
  4064  000A68  EC55  F006         	call	_ActThrottle
  4065                           
  4066                           ;position.c: 199: } else if (a_frame[0].height < cm80) {
  4067  000A6C  0012               	return	
  4068  000A6E                     i2l2272:
  4069  000A6E  5055               	movf	_cm80,w,c
  4070  000A70  5C07               	subwf	_a_frame+6,w,c
  4071  000A72  5056               	movf	_cm80+1,w,c
  4072  000A74  5808               	subwfb	_a_frame+7,w,c
  4073  000A76  B0D8               	btfsc	status,0,c
  4074  000A78  D00E               	goto	i2l2280
  4075                           
  4076                           ;position.c: 200: if (a_frame[0].height < cm50) {
  4077  000A7A  5053               	movf	_cm50,w,c
  4078  000A7C  5C07               	subwf	_a_frame+6,w,c
  4079  000A7E  5054               	movf	_cm50+1,w,c
  4080  000A80  5808               	subwfb	_a_frame+7,w,c
  4081  000A82  B0D8               	btfsc	status,0,c
  4082  000A84  D004               	goto	i2l2278
  4083                           
  4084                           ;position.c: 201: ActThrottle(6);
  4085  000A86  0E06               	movlw	6
  4086  000A88  EC55  F006         	call	_ActThrottle
  4087                           
  4088                           ;position.c: 202: } else {
  4089  000A8C  0012               	return	
  4090  000A8E                     i2l2278:
  4091                           
  4092                           ;position.c: 203: ActThrottle(3);
  4093  000A8E  0E03               	movlw	3
  4094  000A90  EC55  F006         	call	_ActThrottle
  4095                           
  4096                           ;position.c: 204: }
  4097                           ;position.c: 205: } else {
  4098  000A94  0012               	return	
  4099  000A96                     i2l2280:
  4100                           
  4101                           ;position.c: 206: ActThrottle(-3);
  4102  000A96  0EFD               	movlw	253
  4103  000A98  EC55  F006         	call	_ActThrottle
  4104  000A9C  0012               	return	
  4105  000A9E                     __end_of_BeneathTable:
  4106                           	opt stack 0
  4107                           pclatu	equ	0xFFB
  4108                           pclath	equ	0xFFA
  4109                           tblptru	equ	0xFF8
  4110                           tblptrh	equ	0xFF7
  4111                           tblptrl	equ	0xFF6
  4112                           tablat	equ	0xFF5
  4113                           prodh	equ	0xFF4
  4114                           prodl	equ	0xFF3
  4115                           intcon	equ	0xFF2
  4116                           postinc0	equ	0xFEE
  4117                           fsr0h	equ	0xFEA
  4118                           fsr0l	equ	0xFE9
  4119                           wreg	equ	0xFE8
  4120                           indf1	equ	0xFE7
  4121                           postdec1	equ	0xFE5
  4122                           fsr1h	equ	0xFE2
  4123                           fsr1l	equ	0xFE1
  4124                           indf2	equ	0xFDF
  4125                           postinc2	equ	0xFDE
  4126                           postdec2	equ	0xFDD
  4127                           fsr2h	equ	0xFDA
  4128                           fsr2l	equ	0xFD9
  4129                           status	equ	0xFD8
  4130                           
  4131 ;; *************** function _BeneathFloor *****************
  4132 ;; Defined at:
  4133 ;;		line 216 in file "position.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;		None
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;		None
  4138 ;; Return value:  Size  Location     Type
  4139 ;;		None               void
  4140 ;; Registers used:
  4141 ;;		wreg, status,2, status,0, cstack
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4151 ;;Total ram usage:        0 bytes
  4152 ;; Hardware stack levels used:    1
  4153 ;; Hardware stack levels required when called:    1
  4154 ;; This function calls:
  4155 ;;		_ActThrottle
  4156 ;; This function is called by:
  4157 ;;		_CheckThrottle
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161                           	psect	text27
  4162  000A9E                     __ptext27:
  4163                           	opt stack 0
  4164  000A9E                     _BeneathFloor:
  4165                           	opt stack 25
  4166                           
  4167                           ;position.c: 217: if (a_frame[0].height <= cm220 && a_frame[0].height >= cm180) {
  4168                           
  4169                           ;incstack = 0
  4170  000A9E  5007               	movf	_a_frame+6,w,c
  4171  000AA0  5C51               	subwf	_cm220,w,c
  4172  000AA2  5008               	movf	_a_frame+7,w,c
  4173  000AA4  5852               	subwfb	_cm220+1,w,c
  4174  000AA6  A0D8               	btfss	status,0,c
  4175  000AA8  D00A               	goto	i2l2288
  4176  000AAA  504F               	movf	_cm180,w,c
  4177  000AAC  5C07               	subwf	_a_frame+6,w,c
  4178  000AAE  5050               	movf	_cm180+1,w,c
  4179  000AB0  5808               	subwfb	_a_frame+7,w,c
  4180  000AB2  A0D8               	btfss	status,0,c
  4181  000AB4  D004               	goto	i2l2288
  4182                           
  4183                           ;position.c: 218: ActThrottle(0);
  4184  000AB6  0E00               	movlw	0
  4185  000AB8  EC55  F006         	call	_ActThrottle
  4186                           
  4187                           ;position.c: 219: } else if (a_frame[0].height < cm180) {
  4188  000ABC  0012               	return	
  4189  000ABE                     i2l2288:
  4190  000ABE  504F               	movf	_cm180,w,c
  4191  000AC0  5C07               	subwf	_a_frame+6,w,c
  4192  000AC2  5050               	movf	_cm180+1,w,c
  4193  000AC4  5808               	subwfb	_a_frame+7,w,c
  4194  000AC6  B0D8               	btfsc	status,0,c
  4195  000AC8  D00E               	goto	i2l2296
  4196                           
  4197                           ;position.c: 220: if (a_frame[0].height < cm100) {
  4198  000ACA  504B               	movf	_cm100,w,c
  4199  000ACC  5C07               	subwf	_a_frame+6,w,c
  4200  000ACE  504C               	movf	_cm100+1,w,c
  4201  000AD0  5808               	subwfb	_a_frame+7,w,c
  4202  000AD2  B0D8               	btfsc	status,0,c
  4203  000AD4  D004               	goto	i2l2294
  4204                           
  4205                           ;position.c: 221: ActThrottle(6);
  4206  000AD6  0E06               	movlw	6
  4207  000AD8  EC55  F006         	call	_ActThrottle
  4208                           
  4209                           ;position.c: 222: } else {
  4210  000ADC  0012               	return	
  4211  000ADE                     i2l2294:
  4212                           
  4213                           ;position.c: 223: ActThrottle(3);
  4214  000ADE  0E03               	movlw	3
  4215  000AE0  EC55  F006         	call	_ActThrottle
  4216                           
  4217                           ;position.c: 224: }
  4218                           ;position.c: 225: } else {
  4219  000AE4  0012               	return	
  4220  000AE6                     i2l2296:
  4221                           
  4222                           ;position.c: 226: ActThrottle(-3);
  4223  000AE6  0EFD               	movlw	253
  4224  000AE8  EC55  F006         	call	_ActThrottle
  4225  000AEC  0012               	return	
  4226  000AEE                     __end_of_BeneathFloor:
  4227                           	opt stack 0
  4228                           pclatu	equ	0xFFB
  4229                           pclath	equ	0xFFA
  4230                           tblptru	equ	0xFF8
  4231                           tblptrh	equ	0xFF7
  4232                           tblptrl	equ	0xFF6
  4233                           tablat	equ	0xFF5
  4234                           prodh	equ	0xFF4
  4235                           prodl	equ	0xFF3
  4236                           intcon	equ	0xFF2
  4237                           postinc0	equ	0xFEE
  4238                           fsr0h	equ	0xFEA
  4239                           fsr0l	equ	0xFE9
  4240                           wreg	equ	0xFE8
  4241                           indf1	equ	0xFE7
  4242                           postdec1	equ	0xFE5
  4243                           fsr1h	equ	0xFE2
  4244                           fsr1l	equ	0xFE1
  4245                           indf2	equ	0xFDF
  4246                           postinc2	equ	0xFDE
  4247                           postdec2	equ	0xFDD
  4248                           fsr2h	equ	0xFDA
  4249                           fsr2l	equ	0xFD9
  4250                           status	equ	0xFD8
  4251                           
  4252 ;; *************** function _ActThrottle *****************
  4253 ;; Defined at:
  4254 ;;		line 42 in file "actors.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;  change          1    wreg     unsigned char 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;  change          1    0[COMRAM] unsigned char 
  4259 ;; Return value:  Size  Location     Type
  4260 ;;		None               void
  4261 ;; Registers used:
  4262 ;;		wreg, status,2, status,0
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4269 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;Total ram usage:        1 bytes
  4273 ;; Hardware stack levels used:    1
  4274 ;; This function calls:
  4275 ;;		Nothing
  4276 ;; This function is called by:
  4277 ;;		_BeneathTable
  4278 ;;		_BeneathFloor
  4279 ;;		_CheckThrottle
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283                           	psect	text28
  4284  000CAA                     __ptext28:
  4285                           	opt stack 0
  4286  000CAA                     _ActThrottle:
  4287                           	opt stack 25
  4288                           
  4289                           ;incstack = 0
  4290                           ;ActThrottle@change stored from wreg
  4291  000CAA  6E2D               	movwf	ActThrottle@change,c
  4292                           
  4293                           ;actors.c: 43: a_actors[0].thro += change;
  4294  000CAC  502D               	movf	ActThrottle@change,w,c
  4295  000CAE  0100               	movlb	0	; () banked
  4296  000CB0  27D4               	addwf	(_a_actors+4)& (0+255),f,b
  4297  000CB2  0E00               	movlw	0
  4298  000CB4  23D5               	addwfc	(_a_actors+5)& (0+255),f,b
  4299                           
  4300                           ; BSR set to: 0
  4301  000CB6  0012               	return		;funcret
  4302  000CB8                     __end_of_ActThrottle:
  4303                           	opt stack 0
  4304  0000                     pclatu	equ	0xFFB
  4305                           pclath	equ	0xFFA
  4306                           tblptru	equ	0xFF8
  4307                           tblptrh	equ	0xFF7
  4308                           tblptrl	equ	0xFF6
  4309                           tablat	equ	0xFF5
  4310                           prodh	equ	0xFF4
  4311                           prodl	equ	0xFF3
  4312                           intcon	equ	0xFF2
  4313                           postinc0	equ	0xFEE
  4314                           fsr0h	equ	0xFEA
  4315                           fsr0l	equ	0xFE9
  4316                           wreg	equ	0xFE8
  4317                           indf1	equ	0xFE7
  4318                           postdec1	equ	0xFE5
  4319                           fsr1h	equ	0xFE2
  4320                           fsr1l	equ	0xFE1
  4321                           indf2	equ	0xFDF
  4322                           postinc2	equ	0xFDE
  4323                           postdec2	equ	0xFDD
  4324                           fsr2h	equ	0xFDA
  4325                           fsr2l	equ	0xFD9
  4326                           status	equ	0xFD8
  4327                           pclatu	equ	0xFFB
  4328                           pclath	equ	0xFFA
  4329                           tblptru	equ	0xFF8
  4330                           tblptrh	equ	0xFF7
  4331                           tblptrl	equ	0xFF6
  4332                           tablat	equ	0xFF5
  4333                           prodh	equ	0xFF4
  4334                           prodl	equ	0xFF3
  4335                           intcon	equ	0xFF2
  4336                           postinc0	equ	0xFEE
  4337                           fsr0h	equ	0xFEA
  4338                           fsr0l	equ	0xFE9
  4339                           wreg	equ	0xFE8
  4340                           indf1	equ	0xFE7
  4341                           postdec1	equ	0xFE5
  4342                           fsr1h	equ	0xFE2
  4343                           fsr1l	equ	0xFE1
  4344                           indf2	equ	0xFDF
  4345                           postinc2	equ	0xFDE
  4346                           postdec2	equ	0xFDD
  4347                           fsr2h	equ	0xFDA
  4348                           fsr2l	equ	0xFD9
  4349                           status	equ	0xFD8
  4350                           
  4351                           	psect	rparam
  4352  0000                     pclatu	equ	0xFFB
  4353                           pclath	equ	0xFFA
  4354                           tblptru	equ	0xFF8
  4355                           tblptrh	equ	0xFF7
  4356                           tblptrl	equ	0xFF6
  4357                           tablat	equ	0xFF5
  4358                           prodh	equ	0xFF4
  4359                           prodl	equ	0xFF3
  4360                           intcon	equ	0xFF2
  4361                           postinc0	equ	0xFEE
  4362                           fsr0h	equ	0xFEA
  4363                           fsr0l	equ	0xFE9
  4364                           wreg	equ	0xFE8
  4365                           indf1	equ	0xFE7
  4366                           postdec1	equ	0xFE5
  4367                           fsr1h	equ	0xFE2
  4368                           fsr1l	equ	0xFE1
  4369                           indf2	equ	0xFDF
  4370                           postinc2	equ	0xFDE
  4371                           postdec2	equ	0xFDD
  4372                           fsr2h	equ	0xFDA
  4373                           fsr2l	equ	0xFD9
  4374                           status	equ	0xFD8
  4375                           
  4376                           	psect	temp
  4377  000058                     btemp:
  4378                           	opt stack 0
  4379  000058                     	ds	1
  4380  0000                     int$flags	set	btemp
  4381                           pclatu	equ	0xFFB
  4382                           pclath	equ	0xFFA
  4383                           tblptru	equ	0xFF8
  4384                           tblptrh	equ	0xFF7
  4385                           tblptrl	equ	0xFF6
  4386                           tablat	equ	0xFF5
  4387                           prodh	equ	0xFF4
  4388                           prodl	equ	0xFF3
  4389                           intcon	equ	0xFF2
  4390                           postinc0	equ	0xFEE
  4391                           fsr0h	equ	0xFEA
  4392                           fsr0l	equ	0xFE9
  4393                           wreg	equ	0xFE8
  4394                           indf1	equ	0xFE7
  4395                           postdec1	equ	0xFE5
  4396                           fsr1h	equ	0xFE2
  4397                           fsr1l	equ	0xFE1
  4398                           indf2	equ	0xFDF
  4399                           postinc2	equ	0xFDE
  4400                           postdec2	equ	0xFDD
  4401                           fsr2h	equ	0xFDA
  4402                           fsr2l	equ	0xFD9
  4403                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         206
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      87
    BANK0           160      0     120
    BANK1           256      0      42
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Isr in COMRAM

    _Isr->_CheckThrottle
    _ReadObject->_ExchangeSpiWord
    _ModeCheck->_CalcTime
    _CompareFrames->_CheckRudderAhead
    _CompareFrames->_CheckRudderBack
    _CheckRudderBack->_ActRudder
    _CheckRudderAhead->_ActRudder
    _CheckElevator->_ActElevator
    _CheckAileron->_ActAileron
    _CheckThrottle->_ActThrottle
    _BeneathTable->_ActThrottle
    _BeneathFloor->_ActThrottle

Critical Paths under _main in BANK0

    None.

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _Init
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                          _InitAnsel
                      _InitInterrupt
                            _InitOsc
                           _InitPort
                            _InitSpi
                          _InitTimer
                           _InitTris
                           _InitUart
 ---------------------------------------------------------------------------------
 (2) _InitUart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitSpi                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitOsc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Isr                                                 14    14      0    1505
                                             14 COMRAM    14    14      0
                      _CheckThrottle
                      _CompareFrames
                          _ModeCheck
                         _ReadHeight
                         _ReadObject
                 _StartHeightMeasure
 ---------------------------------------------------------------------------------
 (4) _StartHeightMeasure                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ReadObject                                           8     5      3     922
                                              5 COMRAM     7     4      3
                    _ExchangeSpiWord
 ---------------------------------------------------------------------------------
 (5) _ExchangeSpiWord                                      5     3      2     457
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _ReadHeight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ModeCheck                                            2     2      0      70
                                              4 COMRAM     2     2      0
                           _CalcTime
 ---------------------------------------------------------------------------------
 (5) _CalcTime                                             4     2      2      25
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _CompareFrames                                        2     2      0      88
                                              2 COMRAM     2     2      0
                       _CheckAileron
                      _CheckElevator
                   _CheckRudderAhead
                    _CheckRudderBack
 ---------------------------------------------------------------------------------
 (5) _CheckRudderBack                                      1     1      0      22
                                              1 COMRAM     1     1      0
                          _ActRudder
 ---------------------------------------------------------------------------------
 (5) _CheckRudderAhead                                     1     1      0      22
                                              1 COMRAM     1     1      0
                          _ActRudder
 ---------------------------------------------------------------------------------
 (6) _ActRudder                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _CheckElevator                                        0     0      0      22
                        _ActElevator
 ---------------------------------------------------------------------------------
 (6) _ActElevator                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _CheckAileron                                         0     0      0      22
                         _ActAileron
 ---------------------------------------------------------------------------------
 (6) _ActAileron                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _CheckThrottle                                       13    13      0     425
                                              1 COMRAM    13    13      0
                        _ActThrottle
                       _BeneathFloor
                       _BeneathTable
 ---------------------------------------------------------------------------------
 (5) _BeneathTable                                         0     0      0      22
                        _ActThrottle
 ---------------------------------------------------------------------------------
 (5) _BeneathFloor                                         0     0      0      22
                        _ActThrottle
 ---------------------------------------------------------------------------------
 (6) _ActThrottle                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
     _InitAnsel
     _InitInterrupt
     _InitOsc
     _InitPort
     _InitSpi
     _InitTimer
     _InitTris
     _InitUart

 _Isr (ROOT)
   _CheckThrottle
     _ActThrottle
     _BeneathFloor
       _ActThrottle
     _BeneathTable
       _ActThrottle
   _CompareFrames
     _CheckAileron
       _ActAileron
     _CheckElevator
       _ActElevator
     _CheckRudderAhead
       _ActRudder
     _CheckRudderBack
       _ActRudder
   _ModeCheck
     _CalcTime
   _ReadHeight
   _ReadObject
     _ExchangeSpiWord
   _StartHeightMeasure

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      2A       7       16.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      78       5       75.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     1C      57       1       92.6%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F9      12        0.0%
DATA                 0      0      F9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Jan 11 10:41:29 2016

                 _ActAileron 0C9C              _highpassallowed 02BA                            _w 002B  
                         _lw 0027       ReadObject@des_obj_type 002D                 __CFG_CP0$OFF 000000  
                _ActElevator 0C8E                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                          _GIE 007F97                 __CFG_CPB$OFF 000000  
               __CFG_CPD$OFF 000000                          _Isr 0008            ActThrottle@change 002D  
                        prod 000FF3                          wreg 000FE8            ReadObject@des_obj 0032  
               __CFG_LVP$OFF 000000            ReadObject@max_obj 0034                         ?_Isr 002D  
                       l2534 0CC6                         _PEIE 007F96              _ExchangeSpiWord 0AEE  
                       _Init 0BD2                         _cm50 0053                         _cm80 0055  
                _ActThrottle 0CAA                         _main 0CC2                         fsr0h 000FEA  
                       fsr1h 000FE2                         fsr0l 000FE9                         fsr2h 000FDA  
                       indf1 000FE7                         fsr1l 000FE1                         indf2 000FDF  
                       fsr2l 000FD9                         btemp 0058                __CFG_BORV$190 000000  
                       pclat 000FFA                         prodh 000FF4                         prodl 000FF3  
         ReadObject@checksum 0035                         start 00B2            ??_CheckRudderBack 002E  
              __CFG_IESO$OFF 000000                 ___param_bank 000010                _InitInterrupt 0CCA  
            __end_of_InitOsc 0CD8              __end_of_InitSpi 0CC2                        ??_Isr 003B  
                      ?_Init 002D                        ?_main 002D               __CFG_DEBUG$OFF 000000  
                      i2l406 0072                        i2l183 0BAA                        i2l409 0076  
                      i2l534 047C                        i2l537 046C                        i2l529 037C  
                      i2l901 01E0                        i2l741 0B0C                        i2l662 0BF4  
                      i2l911 0274                        i2l824 09FC                        i2l744 0B22  
                      i2l909 01E8                        i2l884 00E6                        i2l885 00E2  
                      i2l894 0176                        i2l895 0172                        i2l887 00E8  
                      i2l897 0178                        _TMR3H 000FB3                        _TMR3L 000FB2  
                      _TMR5H 000F50                        _TMR5L 000F4F                        _PORTA 000F80  
                      _PORTB 000F81                        _PORTC 000F82                        _PORTD 000F83  
                      _PORTE 000F84        __size_of_CheckAileron 00C2                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TRISE 000F96                __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000  
              __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000                        _cm100 004B  
                      _cm120 004D                        _cm220 0051                        _cm180 004F  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000  
                      _frame 02B9                        _table 02BE           __CFG_MCLRE$EXTMCLR 000000  
                ReadObject@c 0037            ?_CheckRudderAhead 002D               __pbitbssCOMRAM 02B8  
                      tablat 000FF5             __end_of_CalcTime 0BD2        __size_of_BeneathFloor 0050  
      __size_of_BeneathTable 0050                        status 000FD8           ??_CheckRudderAhead 002E  
             __CFG_HFOFST$ON 000000               __CFG_PBADEN$ON 000000           __size_of_ActRudder 000E  
             ?_InitInterrupt 002D                   _ReadHeight 0BF4              __initialization 09FE  
               __end_of_Init 0BF4           _StartHeightMeasure 0C62                   _ReadObject 0370  
                ?_ActAileron 002D                 __end_of_main 0CCA                 _CheckAileron 0894  
           __end_of_InitUart 0CDA             __end_of_InitPort 0C62             __end_of_InitTris 0C4C  
                     ??_Init 0000          ?_StartHeightMeasure 002D                       ??_main 0000  
              __activetblptr 000000      __end_of_ExchangeSpiWord 0B38                 _BeneathFloor 0A9E  
               _BeneathTable 0A4E                       _ANSELA 000F38                       _ANSELB 000F39  
                     _ANSELC 000F3A                       _ANSELD 000F3B                       _ANSELE 000F3C  
                     i2l2200 071E                       i2l2210 076A                       i2l2106 0B08  
                     i2l2132 08DC                       i2l2140 0904                       i2l2212 0772  
                     i2l2150 093E                       i2l2134 08EC                       i2l2142 090C  
                     i2l2126 08B4                       i2l2206 0752                       i2l2214 077A  
                     i2l2152 0946                       i2l2136 08F4                       i2l2224 07BA  
                     i2l2208 0762                       i2l2216 0782                       i2l2232 062A  
                     i2l2304 0B9A                       i2l2146 0928                       i2l2154 094E  
                     i2l2138 08FC                       i2l2170 081A                       i2l2226 07C2  
                     i2l2242 0676                       i2l2250 069E                       i2l2234 063A  
                     i2l2322 03DC                       i2l2412 0138                       i2l2404 00F2  
                     i2l2148 0936                       i2l2172 0828                       i2l2180 0848  
                     i2l2164 07F2                       i2l2228 07CA                       i2l2260 06DE  
                     i2l2244 0686                       i2l2252 06A6                       i2l2236 0642  
                     i2l2340 045C                       i2l2332 0422                       i2l2430 01B0  
                     i2l2422 0182                       i2l2406 00F8                       i2l2190 0884  
                     i2l2174 0830                       i2l2262 06E6                       i2l2246 068E  
                     i2l2238 0652                       i2l2318 03B4                       i2l2280 0A96  
                     i2l2272 0A6E                       i2l2432 01C0                       i2l2424 0188  
                     i2l2184 0864                       i2l2192 088C                       i2l2176 0838  
                     i2l2264 06EE                       i2l2248 0696                       i2l2442 01EA  
                     i2l2434 01C8                       i2l2186 0874                       i2l2178 0840  
                     i2l2436 01D0                       i2l2188 087C                       i2l2196 0706  
                     i2l2294 0ADE                       i2l2278 0A8E                       i2l2462 034A  
                     i2l2454 0292                       i2l2446 0200                       i2l2438 01D8  
                     i2l2198 0716               __CFG_WDTEN$OFF 000000                       i2l2296 0AE6  
                     i2l2288 0ABE                       i2l2392 09F6                       i2l2376 0610  
                     i2l2466 035A                       i2l2458 032E                       _OSCCON 000FD3  
         __size_of_InitAnsel 0020         ??_StartHeightMeasure 002D                       _TMR3IF 007D09  
                     _TMR5IF 007BF1                       _SSP1IF 007CF3           __size_of_InitTimer 0044  
         __size_of_ModeCheck 0032                    ??_InitOsc 0000                    ??_InitSpi 0000  
     __size_of_CheckElevator 00C2               __CFG_XINST$OFF 000000                       _a_path 00A6  
                     _c_path 0049               __CFG_STVREN$ON 000000                       clear_0 0A04  
                     clear_1 0A10                       clear_2 0A1E                 __pdataCOMRAM 0049  
     __size_of_CheckThrottle 02BA                       tblptrh 000FF7                       tblptrl 000FF6  
          __end_of_ActRudder 0C8E                       tblptru 000FF8          __size_of_ActAileron 000E  
                 __accesstop 0060      __end_of__initialization 0A44              ??_InitInterrupt 0000  
              ___rparam_used 000001                  ?_ReadHeight 002D                  ?_ReadObject 0032  
             __pcstackCOMRAM 002D                 ?_ActElevator 002D            __end_of_InitAnsel 0C36  
                 _a_path_old 0100                    ?_CalcTime 002D            __end_of_InitTimer 0B7C  
          __end_of_ModeCheck 0BAE                _CheckElevator 07D2             ?_ExchangeSpiWord 002D  
            _CheckRudderBack 061A                   __pbssBANK0 0060                   __pbssBANK1 0100  
            __CFG_PLLCFG$OFF 000000                    ?_InitUart 002D                    ?_InitPort 002D  
                 _changerate 001F                    ?_InitTris 002D                 ?_ActThrottle 002D  
              _CheckThrottle 00B6           __CFG_CCP2MX$PORTC1 000000        __end_of_CompareFrames 09FE  
         __CFG_CCP3MX$PORTB5 000000                   ??_CalcTime 002F               ?_CheckElevator 002D  
          __CFG_PRICLKEN$OFF 000000                      _TMR3GIE 007D19                      _TMR3GIF 007D21  
                    i2u92_40 08A0                      i2u94_40 08C0                      _SSP1BUF 000FC9  
        __size_of_ReadHeight 0022          __size_of_ReadObject 02AA                   ??_InitUart 0000  
                 ??_InitPort 0000                   ??_InitTris 0000                      _InitOsc 0CD2  
                    _InitSpi 0CB8               ?_CheckThrottle 002D              __CFG_PWRTEN$OFF 000000  
                    __Hparam 0000                      __Lparam 0000                 ??_ActAileron 002D  
  __size_of_CheckRudderAhead 00DC                      _a_color 0060                      _a_frame 0001  
                    __pcinit 09FE                      __ramtop 1000                      __ptext0 0CC2  
                    __ptext1 0BD2                      __ptext2 0CD8                      __ptext3 0C36  
                    __ptext4 0B38                      __ptext5 0CB8                      __ptext6 0C4C  
                    __ptext7 0CD2                      __ptext8 0CCA                      __ptext9 0C16  
    __end_of_CheckRudderBack 06F6                 __size_of_Isr 00AA                    _T3CONbits 000FB1  
                  _T5CONbits 000F4E                      _set_ret 02BC             CheckThrottle@tmp 0035  
       end_of_initialization 0A44           __end_of_ActAileron 0CAA                      postdec1 000FE5  
                    postdec2 000FDD                      postinc0 000FEE                      postinc2 000FDE  
            ??_CheckElevator 002E                    _PORTBbits 000F81         __size_of_ActElevator 000E  
       ExchangeSpiWord@byte1 002F         ExchangeSpiWord@byte2 002D          CheckThrottle@i_1241 0039  
        CheckThrottle@i_1242 0033                    _ActRudder 0C80  __size_of_StartHeightMeasure 0010  
            ??_CheckThrottle 002E         __size_of_ActThrottle 000E                 ??_ReadHeight 002D  
               ??_ReadObject 0035                  _a_frame_dif 0015                __pidataCOMRAM 0C72  
           ?_CheckRudderBack 002D          start_initialization 09FE            __size_of_CalcTime 0024  
                  _InitAnsel 0C16                  __end_of_Isr 00B2                    _InitTimer 0B38  
                  _ModeCheck 0B7C           __end_of_ReadHeight 0C16           __end_of_ReadObject 061A  
                 ?_ActRudder 002D            ActElevator@change 002D             ActAileron@change 002D  
          __size_of_InitUart 0002            __size_of_InitPort 0016            __size_of_InitTris 0016  
      __end_of_InitInterrupt 0CD2             _CheckRudderAhead 06F6              ActRudder@change 002D  
                __pbssCOMRAM 0001                   ?_InitAnsel 002D                __pcstackBANK0 0000  
                 ?_InitTimer 002D                   ?_ModeCheck 002D     __size_of_ExchangeSpiWord 004A  
                   ?_InitOsc 002D                     ?_InitSpi 002D                    __pintcode 0008  
              ?_CheckAileron 002D                    _direction 02B8                ?_BeneathFloor 002D  
              ?_BeneathTable 002D       __size_of_CompareFrames 00A8                  ??_ActRudder 002D  
                   i2u101_40 07DE                     i2u103_40 07FE                     i2u112_40 072E  
                   i2u162_40 0194                     i2u156_40 0106                     i2u173_47 0B00  
                   i2u174_47 0360               ??_CheckAileron 002E             __CFG_WDTPS$32768 000000  
                   _SSP1CON1 000FC6                     _SSP1STAT 000FC7                     _CalcTime 0BAE  
            ReadObject@c_obj 0038               ??_BeneathFloor 002E               ??_BeneathTable 002E  
                ??_InitAnsel 0000                  ??_InitTimer 0000                  ??_ModeCheck 0031  
              _id_current_cc 0025                    copy_data0 0A38                     _InitUart 0CD8  
                   _InitPort 0C4C                     _InitTris 0C36                     __Hrparam 0000  
           __size_of_InitOsc 0006             __size_of_InitSpi 000A                     __Lrparam 0000  
          ??_ExchangeSpiWord 002F           __CFG_BOREN$SBORDIS 000000                _CompareFrames 0956  
          __CFG_P2BMX$PORTD2 000000                ??_ActElevator 002D                     _a_actors 00D0  
      __end_of_CheckElevator 0894                     __ptext11 0C62                     __ptext20 0C80  
                   __ptext12 0370                     __ptext21 07D2                     __ptext13 0AEE  
                   __ptext22 0C8E                     __ptext14 0BF4                     __ptext23 0894  
                   __ptext15 0B7C                     __ptext24 0C9C                     __ptext16 0BAE  
                   __ptext25 00B6                     __ptext17 0956                     __ptext26 0A4E  
                   __ptext18 061A                     __ptext27 0A9E                     __ptext19 06F6  
                   __ptext28 0CAA     __end_of_CheckRudderAhead 07D2   __end_of_StartHeightMeasure 0C72  
                 _T3GCONbits 000FB4                __size_of_Init 0022                ??_ActThrottle 002D  
                   _obj_type 02BB                __size_of_main 0008                   _T5GCONbits 000F4D  
      __end_of_CheckThrottle 0370               CheckThrottle@i 0037               ?_CompareFrames 002D  
    ExchangeSpiWord@SPI_word 0030                     int$flags 0058                     _outgoing 0022  
                   _storedif 02BD          __end_of_ActElevator 0C9C         __end_of_CheckAileron 0956  
   __size_of_CheckRudderBack 00DC                     intlevel2 0000         __end_of_BeneathFloor 0AEE  
       __end_of_BeneathTable 0A9E            CalcTime@time_gear 002F          __end_of_ActThrottle 0CB8  
         ModeCheck@time_gear 0031                  _time_height 0029            __CFG_T3CMX$PORTC0 000000  
     __size_of_InitInterrupt 0008            __CFG_FOSC$INTIO67 000000              ??_CompareFrames 002F  
