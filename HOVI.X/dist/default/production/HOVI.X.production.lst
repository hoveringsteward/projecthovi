

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Mar 28 13:10:17 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	bitnvCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           	psect	idataCOMRAM
    54  000B9A                     __pidataCOMRAM:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _c_path
    58  000B9A  000A               	dw	10
    59                           
    60                           ;initializer for _cm180
    61  000B9C  51FF               	dw	20991
    62                           
    63                           ;initializer for _cm50
    64  000B9E  1770               	dw	6000
    65                           
    66                           ;initializer for _cm80
    67  000BA0  2710               	dw	10000
    68                           
    69                           ;initializer for _pin_out
    70  000BA2  41                 	db	65
    71                           
    72                           	psect	idataBANK0
    73  000BA3                     __pidataBANK0:
    74                           	opt stack 0
    75                           
    76                           ;initializer for _cm100
    77  000BA3  5B1B               	dw	23323
    78                           
    79                           ;initializer for _cm120
    80  000BA5  2CEC               	dw	11500
    81                           
    82                           ;initializer for _cm220
    83  000BA7  6437               	dw	25655
    84                           
    85                           	psect	bitnvCOMRAM
    86  000260                     __pbitnvCOMRAM:
    87                           	opt stack 0
    88  000260                     _table:
    89                           	opt stack 0
    90  000260                     	ds	1
    91  0000                     _ANSELA	set	3896
    92  0000                     _ANSELB	set	3897
    93  0000                     _ANSELC	set	3898
    94  0000                     _ANSELD	set	3899
    95  0000                     _ANSELE	set	3900
    96  0000                     _T5CONbits	set	3918
    97  0000                     _T5GCONbits	set	3917
    98  0000                     _TMR5H	set	3920
    99  0000                     _TMR5L	set	3919
   100  0000                     _BAUDCON1bits	set	4024
   101  0000                     _CCP1CONbits	set	4029
   102  0000                     _CCPR1H	set	4031
   103  0000                     _CCPR1L	set	4030
   104  0000                     _OSCCON	set	4051
   105  0000                     _PORTA	set	3968
   106  0000                     _PORTAbits	set	3968
   107  0000                     _PORTB	set	3969
   108  0000                     _PORTBbits	set	3969
   109  0000                     _PORTC	set	3970
   110  0000                     _PORTD	set	3971
   111  0000                     _PORTDbits	set	3971
   112  0000                     _PORTE	set	3972
   113  0000                     _RCREG1	set	4014
   114  0000                     _RCSTA1bits	set	4011
   115  0000                     _SPBRG1	set	4015
   116  0000                     _SSP1BUF	set	4041
   117  0000                     _SSP1CON1	set	4038
   118  0000                     _SSP1STAT	set	4039
   119  0000                     _T1CONbits	set	4045
   120  0000                     _T3CONbits	set	4017
   121  0000                     _T3GCONbits	set	4020
   122  0000                     _TMR1H	set	4047
   123  0000                     _TMR1L	set	4046
   124  0000                     _TMR3H	set	4019
   125  0000                     _TMR3L	set	4018
   126  0000                     _TRISA	set	3986
   127  0000                     _TRISB	set	3987
   128  0000                     _TRISC	set	3988
   129  0000                     _TRISD	set	3989
   130  0000                     _TRISE	set	3990
   131  0000                     _TXREG1	set	4013
   132  0000                     _TXSTA1bits	set	4012
   133  0000                     _CCP1IE	set	31978
   134  0000                     _CCP1IF	set	31986
   135  0000                     _GIE	set	32663
   136  0000                     _PEIE	set	32662
   137  0000                     _SSP1IF	set	31987
   138  0000                     _TMR3GIE	set	32025
   139  0000                     _TMR3GIF	set	32033
   140  0000                     _TMR3IF	set	32009
   141  0000                     _TMR5GIF	set	32034
   142  0000                     _TX1IF	set	31988
   143                           
   144                           ; #config settings
   145  0000                     
   146                           	psect	cinit
   147  000722                     __pcinit:
   148                           	opt stack 0
   149  000722                     start_initialization:
   150                           	opt stack 0
   151  000722                     __initialization:
   152                           	opt stack 0
   153                           
   154                           ; Clear objects allocated to BANK1 (42 bytes)
   155  000722  EE01  F000         	lfsr	0,__pbssBANK1
   156  000726  0E2A               	movlw	42
   157  000728                     clear_0:
   158  000728  6AEE               	clrf	postinc0,c
   159  00072A  06E8               	decf	wreg,f,c
   160  00072C  E1FD               	bnz	clear_0
   161                           
   162                           ; Clear objects allocated to BANK0 (130 bytes)
   163  00072E  EE00  F060         	lfsr	0,__pbssBANK0
   164  000732  0E82               	movlw	130
   165  000734                     clear_1:
   166  000734  6AEE               	clrf	postinc0,c
   167  000736  06E8               	decf	wreg,f,c
   168  000738  E1FD               	bnz	clear_1
   169                           
   170                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   171  00073A  6A4B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   172                           
   173                           ; Clear objects allocated to COMRAM (46 bytes)
   174  00073C  EE00  F001         	lfsr	0,__pbssCOMRAM
   175  000740  0E2E               	movlw	46
   176  000742                     clear_2:
   177  000742  6AEE               	clrf	postinc0,c
   178  000744  06E8               	decf	wreg,f,c
   179  000746  E1FD               	bnz	clear_2
   180                           
   181                           ; Initialize objects allocated to BANK0 (6 bytes)
   182                           ; load TBLPTR registers with __pidataBANK0
   183  000748  0EA3               	movlw	low __pidataBANK0
   184  00074A  6EF6               	movwf	tblptrl,c
   185  00074C  0E0B               	movlw	high __pidataBANK0
   186  00074E  6EF7               	movwf	tblptrh,c
   187  000750  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   188  000752  6EF8               	movwf	tblptru,c
   189  000754  EE00  F0F3         	lfsr	0,__pdataBANK0
   190  000758  EE10 F006          	lfsr	1,6
   191  00075C                     copy_data0:
   192  00075C  0009               	tblrd		*+
   193  00075E  CFF5 FFEE          	movff	tablat,postinc0
   194  000762  50E5               	movf	postdec1,w,c
   195  000764  50E1               	movf	fsr1l,w,c
   196  000766  E1FA               	bnz	copy_data0
   197                           
   198                           ; Initialize objects allocated to COMRAM (9 bytes)
   199                           ; load TBLPTR registers with __pidataCOMRAM
   200  000768  0E9A               	movlw	low __pidataCOMRAM
   201  00076A  6EF6               	movwf	tblptrl,c
   202  00076C  0E0B               	movlw	high __pidataCOMRAM
   203  00076E  6EF7               	movwf	tblptrh,c
   204  000770  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   205  000772  6EF8               	movwf	tblptru,c
   206  000774  EE00  F042         	lfsr	0,__pdataCOMRAM
   207  000778  EE10 F009          	lfsr	1,9
   208  00077C                     copy_data1:
   209  00077C  0009               	tblrd		*+
   210  00077E  CFF5 FFEE          	movff	tablat,postinc0
   211  000782  50E5               	movf	postdec1,w,c
   212  000784  50E1               	movf	fsr1l,w,c
   213  000786  E1FA               	bnz	copy_data1
   214  000788                     end_of_initialization:
   215                           	opt stack 0
   216  000788                     __end_of__initialization:
   217                           	opt stack 0
   218  000788  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   219  00078A  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   220  00078C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   221  00078E  6EF8               	movwf	tblptru,c
   222  000790  0100               	movlb	0
   223  000792  EF89  F005         	goto	_main	;jump to C main() function
   224                           tblptru	equ	0xFF8
   225                           tblptrh	equ	0xFF7
   226                           tblptrl	equ	0xFF6
   227                           tablat	equ	0xFF5
   228                           postinc0	equ	0xFEE
   229                           wreg	equ	0xFE8
   230                           postdec1	equ	0xFE5
   231                           fsr1l	equ	0xFE1
   232                           
   233                           	psect	bitbssCOMRAM
   234  000258                     __pbitbssCOMRAM:
   235                           	opt stack 0
   236  000258                     _direction:
   237                           	opt stack 0
   238  000258                     	ds	1
   239  000259                     _frame:
   240                           	opt stack 0
   241  000259                     	ds	1
   242  00025A                     _highpassallowed:
   243                           	opt stack 0
   244  00025A                     	ds	1
   245  00025B                     _obj_type:
   246                           	opt stack 0
   247  00025B                     	ds	1
   248  00025C                     _set_ret:
   249                           	opt stack 0
   250  00025C                     	ds	1
   251  00025D                     _storedif:
   252                           	opt stack 0
   253  00025D                     	ds	1
   254                           tblptru	equ	0xFF8
   255                           tblptrh	equ	0xFF7
   256                           tblptrl	equ	0xFF6
   257                           tablat	equ	0xFF5
   258                           postinc0	equ	0xFEE
   259                           wreg	equ	0xFE8
   260                           postdec1	equ	0xFE5
   261                           fsr1l	equ	0xFE1
   262                           
   263                           	psect	bssCOMRAM
   264  000001                     __pbssCOMRAM:
   265                           	opt stack 0
   266  000001                     _a_frame:
   267                           	opt stack 0
   268  000001                     	ds	20
   269  000015                     _a_frame_dif:
   270                           	opt stack 0
   271  000015                     	ds	10
   272  00001F                     _outgoing:
   273                           	opt stack 0
   274  00001F                     	ds	3
   275  000022                     _id_current_cc:
   276                           	opt stack 0
   277  000022                     	ds	2
   278  000024                     _lw:
   279                           	opt stack 0
   280  000024                     	ds	2
   281  000026                     _seconddifference:
   282                           	opt stack 0
   283  000026                     	ds	2
   284  000028                     _storeheight:
   285                           	opt stack 0
   286  000028                     	ds	2
   287  00002A                     _time_gear:
   288                           	opt stack 0
   289  00002A                     	ds	2
   290  00002C                     _w:
   291                           	opt stack 0
   292  00002C                     	ds	2
   293  00002E                     _pulsecounter:
   294                           	opt stack 0
   295  00002E                     	ds	1
   296                           tblptru	equ	0xFF8
   297                           tblptrh	equ	0xFF7
   298                           tblptrl	equ	0xFF6
   299                           tablat	equ	0xFF5
   300                           postinc0	equ	0xFEE
   301                           wreg	equ	0xFE8
   302                           postdec1	equ	0xFE5
   303                           fsr1l	equ	0xFE1
   304                           
   305                           	psect	dataCOMRAM
   306  000042                     __pdataCOMRAM:
   307                           	opt stack 0
   308  000042                     _c_path:
   309                           	opt stack 0
   310  000042                     	ds	2
   311  000044                     _cm180:
   312                           	opt stack 0
   313  000044                     	ds	2
   314  000046                     _cm50:
   315                           	opt stack 0
   316  000046                     	ds	2
   317  000048                     _cm80:
   318                           	opt stack 0
   319  000048                     	ds	2
   320  00004A                     _pin_out:
   321                           	opt stack 0
   322  00004A                     	ds	1
   323                           tblptru	equ	0xFF8
   324                           tblptrh	equ	0xFF7
   325                           tblptrl	equ	0xFF6
   326                           tablat	equ	0xFF5
   327                           postinc0	equ	0xFEE
   328                           wreg	equ	0xFE8
   329                           postdec1	equ	0xFE5
   330                           fsr1l	equ	0xFE1
   331                           
   332                           	psect	bssBANK0
   333  000060                     __pbssBANK0:
   334                           	opt stack 0
   335  000060                     _a_color:
   336                           	opt stack 0
   337  000060                     	ds	70
   338  0000A6                     _a_path:
   339                           	opt stack 0
   340  0000A6                     	ds	42
   341  0000D0                     _a_actors:
   342                           	opt stack 0
   343  0000D0                     	ds	8
   344  0000D8                     _send_info:
   345                           	opt stack 0
   346  0000D8                     	ds	5
   347  0000DD                     _changerate:
   348                           	opt stack 0
   349  0000DD                     	ds	3
   350  0000E0                     _time_height:
   351                           	opt stack 0
   352  0000E0                     	ds	2
   353                           tblptru	equ	0xFF8
   354                           tblptrh	equ	0xFF7
   355                           tblptrl	equ	0xFF6
   356                           tablat	equ	0xFF5
   357                           postinc0	equ	0xFEE
   358                           wreg	equ	0xFE8
   359                           postdec1	equ	0xFE5
   360                           fsr1l	equ	0xFE1
   361                           
   362                           	psect	dataBANK0
   363  0000F3                     __pdataBANK0:
   364                           	opt stack 0
   365  0000F3                     _cm100:
   366                           	opt stack 0
   367  0000F3                     	ds	2
   368  0000F5                     _cm120:
   369                           	opt stack 0
   370  0000F5                     	ds	2
   371  0000F7                     _cm220:
   372                           	opt stack 0
   373  0000F7                     	ds	2
   374                           tblptru	equ	0xFF8
   375                           tblptrh	equ	0xFF7
   376                           tblptrl	equ	0xFF6
   377                           tablat	equ	0xFF5
   378                           postinc0	equ	0xFEE
   379                           wreg	equ	0xFE8
   380                           postdec1	equ	0xFE5
   381                           fsr1l	equ	0xFE1
   382                           
   383                           	psect	bssBANK1
   384  000100                     __pbssBANK1:
   385                           	opt stack 0
   386  000100                     _a_path_old:
   387                           	opt stack 0
   388  000100                     	ds	42
   389                           tblptru	equ	0xFF8
   390                           tblptrh	equ	0xFF7
   391                           tblptrl	equ	0xFF6
   392                           tablat	equ	0xFF5
   393                           postinc0	equ	0xFEE
   394                           wreg	equ	0xFE8
   395                           postdec1	equ	0xFE5
   396                           fsr1l	equ	0xFE1
   397                           
   398                           	psect	cstackBANK0
   399  0000E2                     __pcstackBANK0:
   400                           	opt stack 0
   401  0000E2                     ??_AboveTableLand:
   402  0000E2                     ?___wmul:
   403                           	opt stack 0
   404  0000E2                     ?___lwdiv:
   405                           	opt stack 0
   406  0000E2                     ?___lwmod:
   407                           	opt stack 0
   408  0000E2                     ___wmul@multiplier:
   409                           	opt stack 0
   410  0000E2                     ___lwdiv@dividend:
   411                           	opt stack 0
   412  0000E2                     ___lwmod@dividend:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x0
   416  0000E2                     	ds	2
   417  0000E4                     ___wmul@multiplicand:
   418                           	opt stack 0
   419  0000E4                     ___lwdiv@divisor:
   420                           	opt stack 0
   421  0000E4                     ___lwmod@divisor:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x2
   425  0000E4                     	ds	2
   426  0000E6                     ___lwdiv@counter:
   427                           	opt stack 0
   428  0000E6                     AboveTableLand@i_2162:
   429                           	opt stack 0
   430  0000E6                     ___wmul@product:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0x4
   434  0000E6                     	ds	1
   435  0000E7                     ___lwdiv@quotient:
   436                           	opt stack 0
   437                           
   438                           ; 2 bytes @ 0x5
   439  0000E7                     	ds	1
   440  0000E8                     AboveTableLand@tmp:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x6
   444  0000E8                     	ds	1
   445  0000E9                     SendDebugInfo@debug_info:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0x7
   449  0000E9                     	ds	1
   450  0000EA                     AboveTableLand@i:
   451                           	opt stack 0
   452                           
   453                           ; 2 bytes @ 0x8
   454  0000EA                     	ds	1
   455  0000EB                     ??_SendDebugInfo:
   456                           
   457                           ; 0 bytes @ 0x9
   458  0000EB                     	ds	1
   459  0000EC                     AboveTableLand@i_2161:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0xA
   463  0000EC                     	ds	1
   464  0000ED                     SendDebugInfo@send:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0xB
   468  0000ED                     	ds	1
   469  0000EE                     ??_CheckThrottle:
   470  0000EE                     SendDebugInfo@debug_send_counter:
   471                           	opt stack 0
   472                           
   473                           ; 1 bytes @ 0xC
   474  0000EE                     	ds	1
   475  0000EF                     SendDebugInfo@debug_info_counter:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0xD
   479  0000EF                     	ds	1
   480  0000F0                     ??_ReadHeight:
   481                           
   482                           ; 0 bytes @ 0xE
   483  0000F0                     	ds	3
   484                           tblptru	equ	0xFF8
   485                           tblptrh	equ	0xFF7
   486                           tblptrl	equ	0xFF6
   487                           tablat	equ	0xFF5
   488                           postinc0	equ	0xFEE
   489                           wreg	equ	0xFE8
   490                           postdec1	equ	0xFE5
   491                           fsr1l	equ	0xFE1
   492                           
   493                           	psect	cstackCOMRAM
   494  00002F                     __pcstackCOMRAM:
   495                           	opt stack 0
   496  00002F                     ?_CalcTime:
   497                           	opt stack 0
   498  00002F                     Delay@del:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x0
   502  00002F                     	ds	2
   503  000031                     CalcTime@time_gear_meas:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x2
   507  000031                     	ds	2
   508  000033                     ??_Isr:
   509                           
   510                           ; 0 bytes @ 0x4
   511  000033                     	ds	14
   512  000041                     ??_InitWlan:
   513  000041                     ActThrottle@change:
   514                           	opt stack 0
   515  000041                     UartSend@data:
   516                           	opt stack 0
   517  000041                     UartSendAscii@data:
   518                           	opt stack 0
   519  000041                     ___lwmod@counter:
   520                           	opt stack 0
   521                           
   522                           ; 1 bytes @ 0x12
   523  000041                     	ds	1
   524  000042                     tblptru	equ	0xFF8
   525                           tblptrh	equ	0xFF7
   526                           tblptrl	equ	0xFF6
   527                           tablat	equ	0xFF5
   528                           postinc0	equ	0xFEE
   529                           wreg	equ	0xFE8
   530                           postdec1	equ	0xFE5
   531                           fsr1l	equ	0xFE1
   532                           
   533                           ; 0 bytes @ 0x13
   534 ;;
   535 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   536 ;;
   537 ;; *************** function _main *****************
   538 ;; Defined at:
   539 ;;		line 84 in file "main.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;		None               void
   546 ;; Registers used:
   547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   557 ;;Total ram usage:        0 bytes
   558 ;; Hardware stack levels required when called:    6
   559 ;; This function calls:
   560 ;;		_CheckThrottle
   561 ;;		_Init
   562 ;;		_ReadHeight
   563 ;;		_StartHeightMeasure
   564 ;;		_StoreAsOld
   565 ;; This function is called by:
   566 ;;		Startup code after reset
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           	psect	text0
   571  000B12                     __ptext0:
   572                           	opt stack 0
   573  000B12                     _main:
   574                           	opt stack 25
   575                           
   576                           ;main.c: 85: Init();
   577                           
   578                           ;incstack = 0
   579  000B12  ECE6  F004         	call	_Init	;wreg free
   580  000B16                     l619:
   581                           
   582                           ;main.c: 87: StartHeightMeasure();
   583  000B16  ECB4  F005         	call	_StartHeightMeasure	;wreg free
   584                           
   585                           ;main.c: 90: ReadHeight();
   586  000B1A  ECCB  F003         	call	_ReadHeight	;wreg free
   587                           
   588                           ;main.c: 91: CheckThrottle();
   589  000B1E  EC7F  F001         	call	_CheckThrottle	;wreg free
   590                           
   591                           ;main.c: 92: StoreAsOld();
   592  000B22  EC15  F005         	call	_StoreAsOld	;wreg free
   593  000B26  D7F7               	goto	l619
   594  000B28                     __end_of_main:
   595                           	opt stack 0
   596                           tblptru	equ	0xFF8
   597                           tblptrh	equ	0xFF7
   598                           tblptrl	equ	0xFF6
   599                           tablat	equ	0xFF5
   600                           postinc0	equ	0xFEE
   601                           wreg	equ	0xFE8
   602                           postdec1	equ	0xFE5
   603                           fsr1l	equ	0xFE1
   604                           
   605 ;; *************** function _StoreAsOld *****************
   606 ;; Defined at:
   607 ;;		line 1470 in file "position.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;		None
   610 ;; Auto vars:     Size  Location     Type
   611 ;;		None
   612 ;; Return value:  Size  Location     Type
   613 ;;		None               void
   614 ;; Registers used:
   615 ;;		None
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;Total ram usage:        0 bytes
   626 ;; Hardware stack levels used:    1
   627 ;; Hardware stack levels required when called:    3
   628 ;; This function calls:
   629 ;;		Nothing
   630 ;; This function is called by:
   631 ;;		_main
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text1
   636  000A2A                     __ptext1:
   637                           	opt stack 0
   638  000A2A                     _StoreAsOld:
   639                           	opt stack 27
   640                           
   641                           ;position.c: 1471: a_frame[1].num = a_frame[0].num;
   642                           
   643                           ;incstack = 0
   644  000A2A  C001  F00B         	movff	_a_frame,_a_frame+10
   645  000A2E  C002  F00C         	movff	_a_frame+1,_a_frame+11
   646                           
   647                           ;position.c: 1472: a_frame[1].pos_x = a_frame[0].pos_x;
   648  000A32  C003  F00D         	movff	_a_frame+2,_a_frame+12
   649  000A36  C004  F00E         	movff	_a_frame+3,_a_frame+13
   650                           
   651                           ;position.c: 1473: a_frame[1].pos_y = a_frame[0].pos_y;
   652  000A3A  C005  F00F         	movff	_a_frame+4,_a_frame+14
   653  000A3E  C006  F010         	movff	_a_frame+5,_a_frame+15
   654                           
   655                           ;position.c: 1474: a_frame[1].height = a_frame[0].height;
   656  000A42  C007  F011         	movff	_a_frame+6,_a_frame+16
   657  000A46  C008  F012         	movff	_a_frame+7,_a_frame+17
   658                           
   659                           ;position.c: 1475: a_frame[1].angle = a_frame[0].angle;
   660  000A4A  C009  F013         	movff	_a_frame+8,_a_frame+18
   661  000A4E  C00A  F014         	movff	_a_frame+9,_a_frame+19
   662  000A52  0012               	return		;funcret
   663  000A54                     __end_of_StoreAsOld:
   664                           	opt stack 0
   665                           tblptru	equ	0xFF8
   666                           tblptrh	equ	0xFF7
   667                           tblptrl	equ	0xFF6
   668                           tablat	equ	0xFF5
   669                           postinc0	equ	0xFEE
   670                           wreg	equ	0xFE8
   671                           postdec1	equ	0xFE5
   672                           fsr1l	equ	0xFE1
   673                           
   674 ;; *************** function _StartHeightMeasure *****************
   675 ;; Defined at:
   676 ;;		line 21 in file "ultrasonic.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;		None
   681 ;; Return value:  Size  Location     Type
   682 ;;		None               void
   683 ;; Registers used:
   684 ;;		wreg, status,2
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;Total ram usage:        0 bytes
   695 ;; Hardware stack levels used:    1
   696 ;; Hardware stack levels required when called:    3
   697 ;; This function calls:
   698 ;;		Nothing
   699 ;; This function is called by:
   700 ;;		_main
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           	psect	text2
   705  000B68                     __ptext2:
   706                           	opt stack 0
   707  000B68                     _StartHeightMeasure:
   708                           	opt stack 27
   709                           
   710                           ;ultrasonic.c: 22: TMR5L = 0;
   711                           
   712                           ;incstack = 0
   713  000B68  0E00               	movlw	0
   714  000B6A  010F               	movlb	15	; () banked
   715  000B6C  6F4F               	movwf	79,b	;volatile
   716                           
   717                           ;ultrasonic.c: 23: TMR5H = 0;
   718  000B6E  0E00               	movlw	0
   719  000B70  010F               	movlb	15	; () banked
   720  000B72  6F50               	movwf	80,b	;volatile
   721                           
   722                           ; BSR set to: 15
   723                           ;ultrasonic.c: 24: PORTBbits.RB3 = 0;
   724  000B74  9681               	bcf	3969,3,c	;volatile
   725                           
   726                           ; BSR set to: 15
   727  000B76  0012               	return		;funcret
   728  000B78                     __end_of_StartHeightMeasure:
   729                           	opt stack 0
   730                           tblptru	equ	0xFF8
   731                           tblptrh	equ	0xFF7
   732                           tblptrl	equ	0xFF6
   733                           tablat	equ	0xFF5
   734                           postinc0	equ	0xFEE
   735                           wreg	equ	0xFE8
   736                           postdec1	equ	0xFE5
   737                           fsr1l	equ	0xFE1
   738                           
   739 ;; *************** function _ReadHeight *****************
   740 ;; Defined at:
   741 ;;		line 27 in file "ultrasonic.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;		None               void
   748 ;; Registers used:
   749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   757 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   758 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   759 ;;Total ram usage:        2 bytes
   760 ;; Hardware stack levels used:    1
   761 ;; Hardware stack levels required when called:    5
   762 ;; This function calls:
   763 ;;		_SendDebugInfo
   764 ;; This function is called by:
   765 ;;		_main
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           	psect	text3
   770  000796                     __ptext3:
   771                           	opt stack 0
   772  000796                     _ReadHeight:
   773                           	opt stack 25
   774  000796                     l852:
   775  000796  A4A4               	btfss	4004,2,c	;volatile
   776  000798  D7FE               	goto	l852
   777                           
   778                           ;ultrasonic.c: 29: TMR5GIF = 0;
   779  00079A  94A4               	bcf	4004,2,c	;volatile
   780                           
   781                           ;ultrasonic.c: 30: time_height = 0;
   782  00079C  0E00               	movlw	0
   783  00079E  0100               	movlb	0	; () banked
   784  0007A0  6FE1               	movwf	(_time_height+1)& (0+255),b
   785  0007A2  0E00               	movlw	0
   786  0007A4  6FE0               	movwf	_time_height& (0+255),b
   787                           
   788                           ; BSR set to: 0
   789                           ;ultrasonic.c: 31: time_height = TMR5H;
   790  0007A6  CF50 F0E0          	movff	3920,_time_height	;volatile
   791  0007AA  0100               	movlb	0	; () banked
   792  0007AC  6BE1               	clrf	(_time_height+1)& (0+255),b
   793                           
   794                           ;ultrasonic.c: 32: time_height <<= 8;
   795  0007AE  0100               	movlb	0	; () banked
   796  0007B0  51E0               	movf	_time_height& (0+255),w,b
   797  0007B2  6FE1               	movwf	(_time_height+1)& (0+255),b
   798  0007B4  6BE0               	clrf	_time_height& (0+255),b
   799                           
   800                           ; BSR set to: 0
   801                           ;ultrasonic.c: 33: time_height |= TMR5L;
   802  0007B6  010F               	movlb	15	; () banked
   803  0007B8  514F               	movf	79,w,b	;volatile
   804  0007BA  0100               	movlb	0	; () banked
   805  0007BC  13E0               	iorwf	_time_height& (0+255),f,b
   806                           
   807                           ; BSR set to: 0
   808                           ;ultrasonic.c: 34: TMR5L = 0;
   809  0007BE  0E00               	movlw	0
   810  0007C0  010F               	movlb	15	; () banked
   811  0007C2  6F4F               	movwf	79,b	;volatile
   812                           
   813                           ; BSR set to: 15
   814                           ;ultrasonic.c: 35: TMR5H = 0;
   815  0007C4  0E00               	movlw	0
   816  0007C6  010F               	movlb	15	; () banked
   817  0007C8  6F50               	movwf	80,b	;volatile
   818                           
   819                           ; BSR set to: 15
   820                           ;ultrasonic.c: 36: a_frame[0].height = time_height;
   821  0007CA  C0E0  F007         	movff	_time_height,_a_frame+6
   822  0007CE  C0E1  F008         	movff	_time_height+1,_a_frame+7
   823                           
   824                           ; BSR set to: 15
   825                           ;ultrasonic.c: 39: SendDebugInfo(a_actors[0].thro);
   826  0007D2  C0D4  F0E9         	movff	_a_actors+4,SendDebugInfo@debug_info
   827  0007D6  C0D5  F0EA         	movff	_a_actors+5,SendDebugInfo@debug_info+1
   828  0007DA  ECAC  F002         	call	_SendDebugInfo	;wreg free
   829                           
   830                           ;ultrasonic.c: 41: a_frame_dif[0].dif_height = a_frame[1].height - a_frame[0].height;
   831  0007DE  EE20  F007         	lfsr	2,_a_frame+6
   832  0007E2  CFDE F0F0          	movff	postinc2,??_ReadHeight
   833  0007E6  CFDD F0F1          	movff	postdec2,??_ReadHeight+1
   834  0007EA  0100               	movlb	0	; () banked
   835  0007EC  1FF0               	comf	??_ReadHeight& (0+255),f,b
   836  0007EE  1FF1               	comf	(??_ReadHeight+1)& (0+255),f,b
   837  0007F0  4BF0               	infsnz	??_ReadHeight& (0+255),f,b
   838  0007F2  2BF1               	incf	(??_ReadHeight+1)& (0+255),f,b
   839  0007F4  5011               	movf	_a_frame+16,w,c
   840  0007F6  0100               	movlb	0	; () banked
   841  0007F8  25F0               	addwf	??_ReadHeight& (0+255),w,b
   842  0007FA  6E1B               	movwf	_a_frame_dif+6,c
   843  0007FC  5012               	movf	_a_frame+17,w,c
   844  0007FE  0100               	movlb	0	; () banked
   845  000800  21F1               	addwfc	(??_ReadHeight+1)& (0+255),w,b
   846  000802  6E1C               	movwf	_a_frame_dif+7,c
   847                           
   848                           ; BSR set to: 0
   849                           ;ultrasonic.c: 42: PORTBbits.RB3 = 1;
   850  000804  8681               	bsf	3969,3,c	;volatile
   851                           
   852                           ; BSR set to: 0
   853  000806  0012               	return		;funcret
   854  000808                     __end_of_ReadHeight:
   855                           	opt stack 0
   856                           tblptru	equ	0xFF8
   857                           tblptrh	equ	0xFF7
   858                           tblptrl	equ	0xFF6
   859                           tablat	equ	0xFF5
   860                           postinc0	equ	0xFEE
   861                           wreg	equ	0xFE8
   862                           postdec1	equ	0xFE5
   863                           fsr1l	equ	0xFE1
   864                           postinc2	equ	0xFDE
   865                           postdec2	equ	0xFDD
   866                           
   867 ;; *************** function _SendDebugInfo *****************
   868 ;; Defined at:
   869 ;;		line 13 in file "debug.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;  debug_info      2    7[BANK0 ] unsigned int 
   872 ;; Auto vars:     Size  Location     Type
   873 ;;  send            1   11[BANK0 ] unsigned char 
   874 ;;  debug_send_c    1   12[BANK0 ] char 
   875 ;;  debug_info_c    1   13[BANK0 ] unsigned char 
   876 ;; Return value:  Size  Location     Type
   877 ;;		None               void
   878 ;; Registers used:
   879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   885 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   886 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   887 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   889 ;;Total ram usage:        7 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; Hardware stack levels required when called:    4
   892 ;; This function calls:
   893 ;;		_UartSend
   894 ;;		_UartSendAscii
   895 ;;		___lwdiv
   896 ;;		___lwmod
   897 ;; This function is called by:
   898 ;;		_ReadHeight
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           	psect	text4
   903  000558                     __ptext4:
   904                           	opt stack 0
   905  000558                     _SendDebugInfo:
   906                           	opt stack 25
   907                           
   908                           ;debug.c: 14: for(unsigned char debug_info_counter = 0; debug_info_counter < 5; debug_in
      +                          fo_counter++) {
   909                           
   910                           ; BSR set to: 0
   911                           ;incstack = 0
   912  000558  0E00               	movlw	0
   913  00055A  0100               	movlb	0	; () banked
   914  00055C  6FEF               	movwf	SendDebugInfo@debug_info_counter& (0+255),b
   915  00055E                     l3534:
   916                           
   917                           ; BSR set to: 0
   918  00055E  0E04               	movlw	4
   919  000560  0100               	movlb	0	; () banked
   920  000562  65EF               	cpfsgt	SendDebugInfo@debug_info_counter& (0+255),b
   921  000564  D001               	goto	l3538
   922  000566  D043               	goto	l3544
   923  000568                     l3538:
   924                           
   925                           ; BSR set to: 0
   926                           ;debug.c: 15: send_info[debug_info_counter] = debug_info % 10;
   927  000568  0100               	movlb	0	; () banked
   928  00056A  51EF               	movf	SendDebugInfo@debug_info_counter& (0+255),w,b
   929  00056C  0D01               	mullw	1
   930  00056E  0ED8               	movlw	low _send_info
   931  000570  24F3               	addwf	prodl,w,c
   932  000572  6ED9               	movwf	fsr2l,c
   933  000574  0E00               	movlw	high _send_info
   934  000576  20F4               	addwfc	prodh,w,c
   935  000578  6EDA               	movwf	fsr2h,c
   936  00057A  C0E9  F0E2         	movff	SendDebugInfo@debug_info,___lwmod@dividend
   937  00057E  C0EA  F0E3         	movff	SendDebugInfo@debug_info+1,___lwmod@dividend+1
   938  000582  0E00               	movlw	0
   939  000584  0100               	movlb	0	; () banked
   940  000586  6FE5               	movwf	(___lwmod@divisor+1)& (0+255),b
   941  000588  0E0A               	movlw	10
   942  00058A  6FE4               	movwf	___lwmod@divisor& (0+255),b
   943  00058C  EC04  F004         	call	___lwmod	;wreg free
   944  000590  0100               	movlb	0	; () banked
   945  000592  51E2               	movf	?___lwmod& (0+255),w,b
   946  000594  6EDF               	movwf	indf2,c
   947                           
   948                           ;debug.c: 16: debug_info = ( debug_info - send_info[debug_info_counter]) / 10;
   949  000596  0100               	movlb	0	; () banked
   950  000598  51EF               	movf	SendDebugInfo@debug_info_counter& (0+255),w,b
   951  00059A  0D01               	mullw	1
   952  00059C  0ED8               	movlw	low _send_info
   953  00059E  24F3               	addwf	prodl,w,c
   954  0005A0  6ED9               	movwf	fsr2l,c
   955  0005A2  0E00               	movlw	high _send_info
   956  0005A4  20F4               	addwfc	prodh,w,c
   957  0005A6  6EDA               	movwf	fsr2h,c
   958  0005A8  50DF               	movf	indf2,w,c
   959  0005AA  0100               	movlb	0	; () banked
   960  0005AC  6FEB               	movwf	??_SendDebugInfo& (0+255),b
   961  0005AE  6BEC               	clrf	(??_SendDebugInfo+1)& (0+255),b
   962  0005B0  0100               	movlb	0	; () banked
   963  0005B2  1FEB               	comf	??_SendDebugInfo& (0+255),f,b
   964  0005B4  1FEC               	comf	(??_SendDebugInfo+1)& (0+255),f,b
   965  0005B6  4BEB               	infsnz	??_SendDebugInfo& (0+255),f,b
   966  0005B8  2BEC               	incf	(??_SendDebugInfo+1)& (0+255),f,b
   967  0005BA  0100               	movlb	0	; () banked
   968  0005BC  51E9               	movf	SendDebugInfo@debug_info& (0+255),w,b
   969  0005BE  0100               	movlb	0	; () banked
   970  0005C0  25EB               	addwf	??_SendDebugInfo& (0+255),w,b
   971  0005C2  0100               	movlb	0	; () banked
   972  0005C4  6FE2               	movwf	___lwdiv@dividend& (0+255),b
   973  0005C6  0100               	movlb	0	; () banked
   974  0005C8  51EA               	movf	(SendDebugInfo@debug_info+1)& (0+255),w,b
   975  0005CA  0100               	movlb	0	; () banked
   976  0005CC  21EC               	addwfc	(??_SendDebugInfo+1)& (0+255),w,b
   977  0005CE  0100               	movlb	0	; () banked
   978  0005D0  6FE3               	movwf	(___lwdiv@dividend+1)& (0+255),b
   979  0005D2  0E00               	movlw	0
   980  0005D4  0100               	movlb	0	; () banked
   981  0005D6  6FE5               	movwf	(___lwdiv@divisor+1)& (0+255),b
   982  0005D8  0E0A               	movlw	10
   983  0005DA  6FE4               	movwf	___lwdiv@divisor& (0+255),b
   984  0005DC  EC55  F003         	call	___lwdiv	;wreg free
   985  0005E0  C0E2  F0E9         	movff	?___lwdiv,SendDebugInfo@debug_info
   986  0005E4  C0E3  F0EA         	movff	?___lwdiv+1,SendDebugInfo@debug_info+1
   987  0005E8  0100               	movlb	0	; () banked
   988  0005EA  2BEF               	incf	SendDebugInfo@debug_info_counter& (0+255),f,b
   989  0005EC  D7B8               	goto	l3534
   990  0005EE                     l3544:
   991                           
   992                           ; BSR set to: 0
   993                           ;debug.c: 17: }
   994                           ;debug.c: 18: for(signed char debug_send_counter = 4; debug_send_counter >= 0; debug_sen
      +                          d_counter--) {
   995  0005EE  0E04               	movlw	4
   996  0005F0  0100               	movlb	0	; () banked
   997  0005F2  6FEE               	movwf	SendDebugInfo@debug_send_counter& (0+255),b
   998  0005F4                     l3546:
   999                           
  1000                           ; BSR set to: 0
  1001  0005F4  0100               	movlb	0	; () banked
  1002  0005F6  BFEE               	btfsc	SendDebugInfo@debug_send_counter& (0+255),7,b
  1003  0005F8  D013               	goto	l3558
  1004                           
  1005                           ; BSR set to: 0
  1006                           ;debug.c: 19: unsigned char send = send_info[debug_send_counter];
  1007                           
  1008                           ; BSR set to: 0
  1009                           
  1010                           ; BSR set to: 0
  1011  0005FA  0100               	movlb	0	; () banked
  1012  0005FC  51EE               	movf	SendDebugInfo@debug_send_counter& (0+255),w,b
  1013  0005FE  0D01               	mullw	1
  1014  000600  0ED8               	movlw	low _send_info
  1015  000602  24F3               	addwf	prodl,w,c
  1016  000604  6ED9               	movwf	fsr2l,c
  1017  000606  0E00               	movlw	high _send_info
  1018  000608  20F4               	addwfc	prodh,w,c
  1019  00060A  6EDA               	movwf	fsr2h,c
  1020  00060C  50DF               	movf	indf2,w,c
  1021  00060E  0100               	movlb	0	; () banked
  1022  000610  6FED               	movwf	SendDebugInfo@send& (0+255),b
  1023                           
  1024                           ; BSR set to: 0
  1025                           ;debug.c: 20: UartSendAscii(send);
  1026  000612  0100               	movlb	0	; () banked
  1027  000614  51ED               	movf	SendDebugInfo@send& (0+255),w,b
  1028  000616  EC61  F005         	call	_UartSendAscii
  1029  00061A  0100               	movlb	0	; () banked
  1030  00061C  07EE               	decf	SendDebugInfo@debug_send_counter& (0+255),f,b
  1031  00061E  D7EA               	goto	l3546
  1032  000620                     l3558:
  1033                           
  1034                           ; BSR set to: 0
  1035                           ;debug.c: 21: }
  1036                           ;debug.c: 22: UartSend(';');
  1037  000620  0E3B               	movlw	59
  1038  000622  EC7D  F005         	call	_UartSend
  1039  000626  0012               	return		;funcret
  1040  000628                     __end_of_SendDebugInfo:
  1041                           	opt stack 0
  1042                           tblptru	equ	0xFF8
  1043                           tblptrh	equ	0xFF7
  1044                           tblptrl	equ	0xFF6
  1045                           tablat	equ	0xFF5
  1046                           prodh	equ	0xFF4
  1047                           prodl	equ	0xFF3
  1048                           postinc0	equ	0xFEE
  1049                           wreg	equ	0xFE8
  1050                           postdec1	equ	0xFE5
  1051                           fsr1l	equ	0xFE1
  1052                           indf2	equ	0xFDF
  1053                           postinc2	equ	0xFDE
  1054                           postdec2	equ	0xFDD
  1055                           fsr2h	equ	0xFDA
  1056                           fsr2l	equ	0xFD9
  1057                           
  1058 ;; *************** function ___lwmod *****************
  1059 ;; Defined at:
  1060 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;  dividend        2    0[BANK0 ] unsigned int 
  1063 ;;  divisor         2    2[BANK0 ] unsigned int 
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  counter         1   18[COMRAM] unsigned char 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  2    0[BANK0 ] unsigned int 
  1068 ;; Registers used:
  1069 ;;		wreg, status,2, status,0
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1075 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1076 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;Total ram usage:        5 bytes
  1080 ;; Hardware stack levels used:    1
  1081 ;; Hardware stack levels required when called:    3
  1082 ;; This function calls:
  1083 ;;		Nothing
  1084 ;; This function is called by:
  1085 ;;		_SendDebugInfo
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           	psect	text5
  1090  000808                     __ptext5:
  1091                           	opt stack 0
  1092  000808                     ___lwmod:
  1093                           	opt stack 25
  1094                           
  1095                           ;incstack = 0
  1096  000808  0100               	movlb	0	; () banked
  1097  00080A  51E4               	movf	___lwmod@divisor& (0+255),w,b
  1098  00080C  0100               	movlb	0	; () banked
  1099  00080E  11E5               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  1100  000810  B4D8               	btfsc	status,2,c
  1101  000812  D023               	goto	l1709
  1102                           
  1103                           ; BSR set to: 0
  1104  000814  0E01               	movlw	1
  1105  000816  6E41               	movwf	___lwmod@counter,c
  1106  000818  D005               	goto	l3522
  1107  00081A                     l3520:
  1108                           
  1109                           ; BSR set to: 0
  1110  00081A  0100               	movlb	0	; () banked
  1111  00081C  90D8               	bcf	status,0,c
  1112  00081E  37E4               	rlcf	___lwmod@divisor& (0+255),f,b
  1113  000820  37E5               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1114  000822  2A41               	incf	___lwmod@counter,f,c
  1115  000824                     l3522:
  1116                           
  1117                           ; BSR set to: 0
  1118  000824  0100               	movlb	0	; () banked
  1119  000826  AFE5               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1120  000828  D7F8               	goto	l3520
  1121  00082A                     l3524:
  1122                           
  1123                           ; BSR set to: 0
  1124  00082A  0100               	movlb	0	; () banked
  1125  00082C  51E4               	movf	___lwmod@divisor& (0+255),w,b
  1126  00082E  0100               	movlb	0	; () banked
  1127  000830  5DE2               	subwf	___lwmod@dividend& (0+255),w,b
  1128  000832  0100               	movlb	0	; () banked
  1129  000834  51E5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1130  000836  0100               	movlb	0	; () banked
  1131  000838  59E3               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1132  00083A  A0D8               	btfss	status,0,c
  1133  00083C  D008               	goto	l3528
  1134                           
  1135                           ; BSR set to: 0
  1136  00083E  0100               	movlb	0	; () banked
  1137  000840  51E4               	movf	___lwmod@divisor& (0+255),w,b
  1138  000842  0100               	movlb	0	; () banked
  1139  000844  5FE2               	subwf	___lwmod@dividend& (0+255),f,b
  1140  000846  0100               	movlb	0	; () banked
  1141  000848  51E5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1142  00084A  0100               	movlb	0	; () banked
  1143  00084C  5BE3               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1144  00084E                     l3528:
  1145                           
  1146                           ; BSR set to: 0
  1147  00084E  0100               	movlb	0	; () banked
  1148  000850  90D8               	bcf	status,0,c
  1149  000852  33E5               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1150  000854  33E4               	rrcf	___lwmod@divisor& (0+255),f,b
  1151                           
  1152                           ; BSR set to: 0
  1153  000856  2E41               	decfsz	___lwmod@counter,f,c
  1154  000858  D7E8               	goto	l3524
  1155  00085A                     l1709:
  1156                           
  1157                           ; BSR set to: 0
  1158  00085A  C0E2  F0E2         	movff	___lwmod@dividend,?___lwmod
  1159  00085E  C0E3  F0E3         	movff	___lwmod@dividend+1,?___lwmod+1
  1160                           
  1161                           ; BSR set to: 0
  1162  000862  0012               	return		;funcret
  1163  000864                     __end_of___lwmod:
  1164                           	opt stack 0
  1165                           tblptru	equ	0xFF8
  1166                           tblptrh	equ	0xFF7
  1167                           tblptrl	equ	0xFF6
  1168                           tablat	equ	0xFF5
  1169                           prodh	equ	0xFF4
  1170                           prodl	equ	0xFF3
  1171                           postinc0	equ	0xFEE
  1172                           wreg	equ	0xFE8
  1173                           postdec1	equ	0xFE5
  1174                           fsr1l	equ	0xFE1
  1175                           indf2	equ	0xFDF
  1176                           postinc2	equ	0xFDE
  1177                           postdec2	equ	0xFDD
  1178                           fsr2h	equ	0xFDA
  1179                           fsr2l	equ	0xFD9
  1180                           status	equ	0xFD8
  1181                           
  1182 ;; *************** function ___lwdiv *****************
  1183 ;; Defined at:
  1184 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  dividend        2    0[BANK0 ] unsigned int 
  1187 ;;  divisor         2    2[BANK0 ] unsigned int 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  quotient        2    5[BANK0 ] unsigned int 
  1190 ;;  counter         1    4[BANK0 ] unsigned char 
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  2    0[BANK0 ] unsigned int 
  1193 ;; Registers used:
  1194 ;;		wreg, status,2, status,0
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1200 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;Total ram usage:        7 bytes
  1205 ;; Hardware stack levels used:    1
  1206 ;; Hardware stack levels required when called:    3
  1207 ;; This function calls:
  1208 ;;		Nothing
  1209 ;; This function is called by:
  1210 ;;		_SendDebugInfo
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text6
  1215  0006AA                     __ptext6:
  1216                           	opt stack 0
  1217  0006AA                     ___lwdiv:
  1218                           	opt stack 25
  1219                           
  1220                           ; BSR set to: 0
  1221                           ;incstack = 0
  1222  0006AA  0E00               	movlw	0
  1223  0006AC  0100               	movlb	0	; () banked
  1224  0006AE  6FE8               	movwf	(___lwdiv@quotient+1)& (0+255),b
  1225  0006B0  0E00               	movlw	0
  1226  0006B2  6FE7               	movwf	___lwdiv@quotient& (0+255),b
  1227                           
  1228                           ; BSR set to: 0
  1229  0006B4  0100               	movlb	0	; () banked
  1230  0006B6  51E4               	movf	___lwdiv@divisor& (0+255),w,b
  1231  0006B8  0100               	movlb	0	; () banked
  1232  0006BA  11E5               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  1233  0006BC  B4D8               	btfsc	status,2,c
  1234  0006BE  D02C               	goto	l1699
  1235                           
  1236                           ; BSR set to: 0
  1237  0006C0  0E01               	movlw	1
  1238  0006C2  0100               	movlb	0	; () banked
  1239  0006C4  6FE6               	movwf	___lwdiv@counter& (0+255),b
  1240  0006C6  D006               	goto	l3502
  1241  0006C8                     l3500:
  1242                           
  1243                           ; BSR set to: 0
  1244  0006C8  0100               	movlb	0	; () banked
  1245  0006CA  90D8               	bcf	status,0,c
  1246  0006CC  37E4               	rlcf	___lwdiv@divisor& (0+255),f,b
  1247  0006CE  37E5               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  1248  0006D0  0100               	movlb	0	; () banked
  1249  0006D2  2BE6               	incf	___lwdiv@counter& (0+255),f,b
  1250  0006D4                     l3502:
  1251                           
  1252                           ; BSR set to: 0
  1253  0006D4  0100               	movlb	0	; () banked
  1254  0006D6  AFE5               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  1255  0006D8  D7F7               	goto	l3500
  1256  0006DA                     l3504:
  1257                           
  1258                           ; BSR set to: 0
  1259  0006DA  0100               	movlb	0	; () banked
  1260  0006DC  90D8               	bcf	status,0,c
  1261  0006DE  37E7               	rlcf	___lwdiv@quotient& (0+255),f,b
  1262  0006E0  37E8               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  1263                           
  1264                           ; BSR set to: 0
  1265  0006E2  0100               	movlb	0	; () banked
  1266  0006E4  51E4               	movf	___lwdiv@divisor& (0+255),w,b
  1267  0006E6  0100               	movlb	0	; () banked
  1268  0006E8  5DE2               	subwf	___lwdiv@dividend& (0+255),w,b
  1269  0006EA  0100               	movlb	0	; () banked
  1270  0006EC  51E5               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1271  0006EE  0100               	movlb	0	; () banked
  1272  0006F0  59E3               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  1273  0006F2  A0D8               	btfss	status,0,c
  1274  0006F4  D00A               	goto	l3512
  1275                           
  1276                           ; BSR set to: 0
  1277  0006F6  0100               	movlb	0	; () banked
  1278  0006F8  51E4               	movf	___lwdiv@divisor& (0+255),w,b
  1279  0006FA  0100               	movlb	0	; () banked
  1280  0006FC  5FE2               	subwf	___lwdiv@dividend& (0+255),f,b
  1281  0006FE  0100               	movlb	0	; () banked
  1282  000700  51E5               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1283  000702  0100               	movlb	0	; () banked
  1284  000704  5BE3               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  1285                           
  1286                           ; BSR set to: 0
  1287  000706  0100               	movlb	0	; () banked
  1288  000708  81E7               	bsf	___lwdiv@quotient& (0+255),0,b
  1289  00070A                     l3512:
  1290                           
  1291                           ; BSR set to: 0
  1292  00070A  0100               	movlb	0	; () banked
  1293  00070C  90D8               	bcf	status,0,c
  1294  00070E  33E5               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  1295  000710  33E4               	rrcf	___lwdiv@divisor& (0+255),f,b
  1296                           
  1297                           ; BSR set to: 0
  1298  000712  0100               	movlb	0	; () banked
  1299  000714  2FE6               	decfsz	___lwdiv@counter& (0+255),f,b
  1300  000716  D7E1               	goto	l3504
  1301  000718                     l1699:
  1302                           
  1303                           ; BSR set to: 0
  1304  000718  C0E7  F0E2         	movff	___lwdiv@quotient,?___lwdiv
  1305  00071C  C0E8  F0E3         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1306                           
  1307                           ; BSR set to: 0
  1308  000720  0012               	return		;funcret
  1309  000722                     __end_of___lwdiv:
  1310                           	opt stack 0
  1311                           tblptru	equ	0xFF8
  1312                           tblptrh	equ	0xFF7
  1313                           tblptrl	equ	0xFF6
  1314                           tablat	equ	0xFF5
  1315                           prodh	equ	0xFF4
  1316                           prodl	equ	0xFF3
  1317                           postinc0	equ	0xFEE
  1318                           wreg	equ	0xFE8
  1319                           postdec1	equ	0xFE5
  1320                           fsr1l	equ	0xFE1
  1321                           indf2	equ	0xFDF
  1322                           postinc2	equ	0xFDE
  1323                           postdec2	equ	0xFDD
  1324                           fsr2h	equ	0xFDA
  1325                           fsr2l	equ	0xFD9
  1326                           status	equ	0xFD8
  1327                           
  1328 ;; *************** function _UartSendAscii *****************
  1329 ;; Defined at:
  1330 ;;		line 56 in file "communication.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  data            1    wreg     unsigned char 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  data            1   18[COMRAM] unsigned char 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;		None               void
  1337 ;; Registers used:
  1338 ;;		wreg, status,2, status,0, cstack
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1347 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;Total ram usage:        1 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; Hardware stack levels required when called:    3
  1351 ;; This function calls:
  1352 ;;		Nothing
  1353 ;; This function is called by:
  1354 ;;		_SendDebugInfo
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           	psect	text7
  1359  000AC2                     __ptext7:
  1360                           	opt stack 0
  1361  000AC2                     _UartSendAscii:
  1362                           	opt stack 25
  1363                           
  1364                           ; BSR set to: 0
  1365                           ;incstack = 0
  1366                           ;UartSendAscii@data stored from wreg
  1367  000AC2  6E41               	movwf	UartSendAscii@data,c
  1368                           
  1369                           ;communication.c: 57: if(TX1IF == 0) {
  1370  000AC4  B89E               	btfsc	3998,4,c	;volatile
  1371  000AC6  D004               	goto	l3490
  1372                           
  1373                           ;communication.c: 58: _delay((unsigned long)((200)*(16000000/4000000.0)));
  1374  000AC8  0EC8               	movlw	200
  1375  000ACA                     u3277:
  1376  000ACA  F000               	nop	
  1377  000ACC  2EE8               	decfsz	wreg,f,c
  1378  000ACE  D7FD               	goto	u3277
  1379  000AD0                     l3490:
  1380                           
  1381                           ;communication.c: 59: }
  1382                           ;communication.c: 60: data += 48;
  1383  000AD0  0E30               	movlw	48
  1384  000AD2  2641               	addwf	UartSendAscii@data,f,c
  1385                           
  1386                           ;communication.c: 61: TXREG1 = data;
  1387  000AD4  C041  FFAD         	movff	UartSendAscii@data,4013	;volatile
  1388  000AD8                     l968:
  1389  000AD8  B89E               	btfsc	3998,4,c	;volatile
  1390  000ADA  0012               	return	
  1391  000ADC  D7FD               	goto	l968
  1392  000ADE                     __end_of_UartSendAscii:
  1393                           	opt stack 0
  1394                           tblptru	equ	0xFF8
  1395                           tblptrh	equ	0xFF7
  1396                           tblptrl	equ	0xFF6
  1397                           tablat	equ	0xFF5
  1398                           prodh	equ	0xFF4
  1399                           prodl	equ	0xFF3
  1400                           postinc0	equ	0xFEE
  1401                           wreg	equ	0xFE8
  1402                           postdec1	equ	0xFE5
  1403                           fsr1l	equ	0xFE1
  1404                           indf2	equ	0xFDF
  1405                           postinc2	equ	0xFDE
  1406                           postdec2	equ	0xFDD
  1407                           fsr2h	equ	0xFDA
  1408                           fsr2l	equ	0xFD9
  1409                           status	equ	0xFD8
  1410                           
  1411 ;; *************** function _UartSend *****************
  1412 ;; Defined at:
  1413 ;;		line 48 in file "communication.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  data            1    wreg     unsigned char 
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  data            1   18[COMRAM] unsigned char 
  1418 ;; Return value:  Size  Location     Type
  1419 ;;		None               void
  1420 ;; Registers used:
  1421 ;;		wreg, status,2, cstack
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1428 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1430 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1431 ;;Total ram usage:        1 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; Hardware stack levels required when called:    3
  1434 ;; This function calls:
  1435 ;;		Nothing
  1436 ;; This function is called by:
  1437 ;;		_SendDebugInfo
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           	psect	text8
  1442  000AFA                     __ptext8:
  1443                           	opt stack 0
  1444  000AFA                     _UartSend:
  1445                           	opt stack 25
  1446                           
  1447                           ;incstack = 0
  1448                           ;UartSend@data stored from wreg
  1449  000AFA  6E41               	movwf	UartSend@data,c
  1450                           
  1451                           ;communication.c: 49: if(TX1IF == 0) {
  1452  000AFC  B89E               	btfsc	3998,4,c	;volatile
  1453  000AFE  D004               	goto	l3484
  1454                           
  1455                           ;communication.c: 50: _delay((unsigned long)((200)*(16000000/4000000.0)));
  1456  000B00  0EC8               	movlw	200
  1457  000B02                     u3287:
  1458  000B02  F000               	nop	
  1459  000B04  2EE8               	decfsz	wreg,f,c
  1460  000B06  D7FD               	goto	u3287
  1461  000B08                     l3484:
  1462                           
  1463                           ;communication.c: 51: }
  1464                           ;communication.c: 52: TXREG1 = data;
  1465  000B08  C041  FFAD         	movff	UartSend@data,4013	;volatile
  1466  000B0C                     l961:
  1467  000B0C  B89E               	btfsc	3998,4,c	;volatile
  1468  000B0E  0012               	return	
  1469  000B10  D7FD               	goto	l961
  1470  000B12                     __end_of_UartSend:
  1471                           	opt stack 0
  1472                           tblptru	equ	0xFF8
  1473                           tblptrh	equ	0xFF7
  1474                           tblptrl	equ	0xFF6
  1475                           tablat	equ	0xFF5
  1476                           prodh	equ	0xFF4
  1477                           prodl	equ	0xFF3
  1478                           postinc0	equ	0xFEE
  1479                           wreg	equ	0xFE8
  1480                           postdec1	equ	0xFE5
  1481                           fsr1l	equ	0xFE1
  1482                           indf2	equ	0xFDF
  1483                           postinc2	equ	0xFDE
  1484                           postdec2	equ	0xFDD
  1485                           fsr2h	equ	0xFDA
  1486                           fsr2l	equ	0xFD9
  1487                           status	equ	0xFD8
  1488                           
  1489 ;; *************** function _Init *****************
  1490 ;; Defined at:
  1491 ;;		line 30 in file "init.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;		None
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;		None
  1496 ;; Return value:  Size  Location     Type
  1497 ;;		None               void
  1498 ;; Registers used:
  1499 ;;		wreg, status,2, cstack
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;Total ram usage:        0 bytes
  1510 ;; Hardware stack levels used:    1
  1511 ;; Hardware stack levels required when called:    4
  1512 ;; This function calls:
  1513 ;;		_InitActors
  1514 ;;		_InitAnsel
  1515 ;;		_InitComp
  1516 ;;		_InitInterrupt
  1517 ;;		_InitOsc
  1518 ;;		_InitPort
  1519 ;;		_InitSpi
  1520 ;;		_InitTimer
  1521 ;;		_InitTris
  1522 ;;		_InitUart
  1523 ;;		_InitWlan
  1524 ;; This function is called by:
  1525 ;;		_main
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           	psect	text9
  1530  0009CC                     __ptext9:
  1531                           	opt stack 0
  1532  0009CC                     _Init:
  1533                           	opt stack 26
  1534                           
  1535                           ;init.c: 31: InitPort();
  1536                           
  1537                           ;incstack = 0
  1538  0009CC  EC9F  F005         	call	_InitPort	;wreg free
  1539                           
  1540                           ;init.c: 32: InitTris();
  1541  0009D0  EC94  F005         	call	_InitTris	;wreg free
  1542                           
  1543                           ;init.c: 33: InitAnsel();
  1544  0009D4  EC51  F005         	call	_InitAnsel	;wreg free
  1545                           
  1546                           ;init.c: 34: InitOsc();
  1547  0009D8  ECD5  F005         	call	_InitOsc	;wreg free
  1548                           
  1549                           ;init.c: 35: InitUart();
  1550  0009DC  ECAA  F005         	call	_InitUart	;wreg free
  1551                           
  1552                           ;init.c: 36: InitSpi();
  1553  0009E0  ECC3  F005         	call	_InitSpi	;wreg free
  1554                           
  1555                           ;init.c: 37: InitTimer();
  1556  0009E4  EC32  F004         	call	_InitTimer	;wreg free
  1557                           
  1558                           ;init.c: 38: InitComp();
  1559  0009E8  ECC8  F005         	call	_InitComp	;wreg free
  1560                           
  1561                           ;init.c: 39: InitInterrupt();
  1562  0009EC  ECBC  F005         	call	_InitInterrupt	;wreg free
  1563                           
  1564                           ;init.c: 40: InitActors();
  1565  0009F0  EC2A  F005         	call	_InitActors	;wreg free
  1566                           
  1567                           ;init.c: 41: storedif = 0;
  1568  0009F4  9A4B               	bcf	_storedif/(0+8),_storedif& (0+7),c
  1569                           
  1570                           ;init.c: 42: table = 1;
  1571  0009F6  804C               	bsf	_table/(0+8),_table& (0+7),c
  1572                           
  1573                           ;init.c: 44: InitWlan();
  1574  0009F8  EC6F  F005         	call	_InitWlan	;wreg free
  1575  0009FC  0012               	return		;funcret
  1576  0009FE                     __end_of_Init:
  1577                           	opt stack 0
  1578                           tblptru	equ	0xFF8
  1579                           tblptrh	equ	0xFF7
  1580                           tblptrl	equ	0xFF6
  1581                           tablat	equ	0xFF5
  1582                           prodh	equ	0xFF4
  1583                           prodl	equ	0xFF3
  1584                           postinc0	equ	0xFEE
  1585                           wreg	equ	0xFE8
  1586                           postdec1	equ	0xFE5
  1587                           fsr1l	equ	0xFE1
  1588                           indf2	equ	0xFDF
  1589                           postinc2	equ	0xFDE
  1590                           postdec2	equ	0xFDD
  1591                           fsr2h	equ	0xFDA
  1592                           fsr2l	equ	0xFD9
  1593                           status	equ	0xFD8
  1594                           
  1595 ;; *************** function _InitWlan *****************
  1596 ;; Defined at:
  1597 ;;		line 222 in file "init.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;		None
  1602 ;; Return value:  Size  Location     Type
  1603 ;;		None               void
  1604 ;; Registers used:
  1605 ;;		wreg
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;Total ram usage:        1 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:    3
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_Init
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text10
  1626  000ADE                     __ptext10:
  1627                           	opt stack 0
  1628  000ADE                     _InitWlan:
  1629                           	opt stack 26
  1630  000ADE                     l455:
  1631  000ADE  AC83               	btfss	3971,6,c	;volatile
  1632  000AE0  D7FE               	goto	l455
  1633                           
  1634                           ;init.c: 224: PORTDbits.RD5 = 1;
  1635  000AE2  8A83               	bsf	3971,5,c	;volatile
  1636                           
  1637                           ;init.c: 225: _delay((unsigned long)((30)*(16000000/4000.0)));
  1638  000AE4  0E9C               	movlw	156
  1639  000AE6  6E41               	movwf	??_InitWlan& (0+255),c
  1640  000AE8  0ED7               	movlw	215
  1641  000AEA                     u3297:
  1642  000AEA  2EE8               	decfsz	wreg,f,c
  1643  000AEC  D7FE               	goto	u3297
  1644  000AEE  2E41               	decfsz	??_InitWlan& (0+255),f,c
  1645  000AF0  D7FC               	goto	u3297
  1646  000AF2  F000               	nop	
  1647  000AF4                     l458:
  1648  000AF4  B883               	btfsc	3971,4,c	;volatile
  1649  000AF6  0012               	return	
  1650  000AF8  D7FD               	goto	l458
  1651  000AFA                     __end_of_InitWlan:
  1652                           	opt stack 0
  1653                           tblptru	equ	0xFF8
  1654                           tblptrh	equ	0xFF7
  1655                           tblptrl	equ	0xFF6
  1656                           tablat	equ	0xFF5
  1657                           prodh	equ	0xFF4
  1658                           prodl	equ	0xFF3
  1659                           postinc0	equ	0xFEE
  1660                           wreg	equ	0xFE8
  1661                           postdec1	equ	0xFE5
  1662                           fsr1l	equ	0xFE1
  1663                           indf2	equ	0xFDF
  1664                           postinc2	equ	0xFDE
  1665                           postdec2	equ	0xFDD
  1666                           fsr2h	equ	0xFDA
  1667                           fsr2l	equ	0xFD9
  1668                           status	equ	0xFD8
  1669                           
  1670 ;; *************** function _InitUart *****************
  1671 ;; Defined at:
  1672 ;;		line 93 in file "init.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;		None
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;		None
  1677 ;; Return value:  Size  Location     Type
  1678 ;;		None               void
  1679 ;; Registers used:
  1680 ;;		wreg, status,2
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1690 ;;Total ram usage:        0 bytes
  1691 ;; Hardware stack levels used:    1
  1692 ;; Hardware stack levels required when called:    3
  1693 ;; This function calls:
  1694 ;;		Nothing
  1695 ;; This function is called by:
  1696 ;;		_Init
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text11
  1701  000B54                     __ptext11:
  1702                           	opt stack 0
  1703  000B54                     _InitUart:
  1704                           	opt stack 26
  1705                           
  1706                           ;init.c: 95: SPBRG1 = 68;
  1707                           
  1708                           ;incstack = 0
  1709  000B54  0E44               	movlw	68
  1710  000B56  6EAF               	movwf	4015,c	;volatile
  1711                           
  1712                           ;init.c: 96: TXSTA1bits.BRGH = 1;
  1713  000B58  84AC               	bsf	4012,2,c	;volatile
  1714                           
  1715                           ;init.c: 97: BAUDCON1bits.BRG16 = 1;
  1716  000B5A  86B8               	bsf	4024,3,c	;volatile
  1717                           
  1718                           ;init.c: 100: TXSTA1bits.SYNC = 0;
  1719  000B5C  98AC               	bcf	4012,4,c	;volatile
  1720                           
  1721                           ;init.c: 101: RCSTA1bits.SPEN = 1;
  1722  000B5E  8EAB               	bsf	4011,7,c	;volatile
  1723                           
  1724                           ;init.c: 103: TXSTA1bits.TXEN = 1;
  1725  000B60  8AAC               	bsf	4012,5,c	;volatile
  1726                           
  1727                           ;init.c: 104: TX1IF = 0;
  1728  000B62  989E               	bcf	3998,4,c	;volatile
  1729                           
  1730                           ;init.c: 106: RCSTA1bits.CREN = 1;
  1731  000B64  88AB               	bsf	4011,4,c	;volatile
  1732  000B66  0012               	return		;funcret
  1733  000B68                     __end_of_InitUart:
  1734                           	opt stack 0
  1735                           tblptru	equ	0xFF8
  1736                           tblptrh	equ	0xFF7
  1737                           tblptrl	equ	0xFF6
  1738                           tablat	equ	0xFF5
  1739                           prodh	equ	0xFF4
  1740                           prodl	equ	0xFF3
  1741                           postinc0	equ	0xFEE
  1742                           wreg	equ	0xFE8
  1743                           postdec1	equ	0xFE5
  1744                           fsr1l	equ	0xFE1
  1745                           indf2	equ	0xFDF
  1746                           postinc2	equ	0xFDE
  1747                           postdec2	equ	0xFDD
  1748                           fsr2h	equ	0xFDA
  1749                           fsr2l	equ	0xFD9
  1750                           status	equ	0xFD8
  1751                           
  1752 ;; *************** function _InitTris *****************
  1753 ;; Defined at:
  1754 ;;		line 60 in file "init.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;		None
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;		None
  1759 ;; Return value:  Size  Location     Type
  1760 ;;		None               void
  1761 ;; Registers used:
  1762 ;;		wreg, status,2
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1772 ;;Total ram usage:        0 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; Hardware stack levels required when called:    3
  1775 ;; This function calls:
  1776 ;;		Nothing
  1777 ;; This function is called by:
  1778 ;;		_Init
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           	psect	text12
  1783  000B28                     __ptext12:
  1784                           	opt stack 0
  1785  000B28                     _InitTris:
  1786                           	opt stack 26
  1787                           
  1788                           ;init.c: 61: TRISA = 0b00000000;
  1789                           
  1790                           ;incstack = 0
  1791  000B28  0E00               	movlw	0
  1792  000B2A  6E92               	movwf	3986,c	;volatile
  1793                           
  1794                           ;init.c: 62: TRISB = 0b00010000;
  1795  000B2C  0E10               	movlw	16
  1796  000B2E  6E93               	movwf	3987,c	;volatile
  1797                           
  1798                           ;init.c: 63: TRISC = 0b10010001;
  1799  000B30  0E91               	movlw	145
  1800  000B32  6E94               	movwf	3988,c	;volatile
  1801                           
  1802                           ;init.c: 64: TRISD = 0b01010000;
  1803  000B34  0E50               	movlw	80
  1804  000B36  6E95               	movwf	3989,c	;volatile
  1805                           
  1806                           ;init.c: 65: TRISE = 0b00000000;
  1807  000B38  0E00               	movlw	0
  1808  000B3A  6E96               	movwf	3990,c	;volatile
  1809  000B3C  0012               	return		;funcret
  1810  000B3E                     __end_of_InitTris:
  1811                           	opt stack 0
  1812                           tblptru	equ	0xFF8
  1813                           tblptrh	equ	0xFF7
  1814                           tblptrl	equ	0xFF6
  1815                           tablat	equ	0xFF5
  1816                           prodh	equ	0xFF4
  1817                           prodl	equ	0xFF3
  1818                           postinc0	equ	0xFEE
  1819                           wreg	equ	0xFE8
  1820                           postdec1	equ	0xFE5
  1821                           fsr1l	equ	0xFE1
  1822                           indf2	equ	0xFDF
  1823                           postinc2	equ	0xFDE
  1824                           postdec2	equ	0xFDD
  1825                           fsr2h	equ	0xFDA
  1826                           fsr2l	equ	0xFD9
  1827                           status	equ	0xFD8
  1828                           
  1829 ;; *************** function _InitTimer *****************
  1830 ;; Defined at:
  1831 ;;		line 144 in file "init.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;		None
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;		None
  1836 ;; Return value:  Size  Location     Type
  1837 ;;		None               void
  1838 ;; Registers used:
  1839 ;;		wreg, status,2
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1849 ;;Total ram usage:        0 bytes
  1850 ;; Hardware stack levels used:    1
  1851 ;; Hardware stack levels required when called:    3
  1852 ;; This function calls:
  1853 ;;		Nothing
  1854 ;; This function is called by:
  1855 ;;		_Init
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           	psect	text13
  1860  000864                     __ptext13:
  1861                           	opt stack 0
  1862  000864                     _InitTimer:
  1863                           	opt stack 26
  1864                           
  1865                           ;init.c: 146: T1CONbits.TMR1CS = 0b00;
  1866                           
  1867                           ;incstack = 0
  1868  000864  0E3F               	movlw	-193
  1869  000866  16CD               	andwf	4045,f,c	;volatile
  1870                           
  1871                           ;init.c: 147: T1CONbits.T1CKPS = 0b01;
  1872  000868  50CD               	movf	4045,w,c	;volatile
  1873  00086A  0BCF               	andlw	-49
  1874  00086C  0910               	iorlw	16
  1875  00086E  6ECD               	movwf	4045,c	;volatile
  1876                           
  1877                           ;init.c: 148: T1CONbits.nT1SYNC = 1;
  1878  000870  84CD               	bsf	4045,2,c	;volatile
  1879                           
  1880                           ;init.c: 149: T1CONbits.TMR1ON = 0;
  1881  000872  90CD               	bcf	4045,0,c	;volatile
  1882                           
  1883                           ;init.c: 150: TMR1H = 0;
  1884  000874  0E00               	movlw	0
  1885  000876  6ECF               	movwf	4047,c	;volatile
  1886                           
  1887                           ;init.c: 151: TMR1L = 0;
  1888  000878  0E00               	movlw	0
  1889  00087A  6ECE               	movwf	4046,c	;volatile
  1890                           
  1891                           ;init.c: 155: T3GCONbits.TMR3GE = 1;
  1892  00087C  8EB4               	bsf	4020,7,c	;volatile
  1893                           
  1894                           ;init.c: 156: T3GCONbits.T3GSPM = 0;
  1895  00087E  98B4               	bcf	4020,4,c	;volatile
  1896                           
  1897                           ;init.c: 157: T3GCONbits.T3GTM = 0;
  1898  000880  9AB4               	bcf	4020,5,c	;volatile
  1899                           
  1900                           ;init.c: 158: T3GCONbits.T3GPOL = 1;
  1901  000882  8CB4               	bsf	4020,6,c	;volatile
  1902                           
  1903                           ;init.c: 159: T3GCONbits.T3GSS = 0b00;
  1904  000884  0EFC               	movlw	-4
  1905  000886  16B4               	andwf	4020,f,c	;volatile
  1906                           
  1907                           ;init.c: 161: T3CONbits.TMR3CS = 0b00;
  1908  000888  0E3F               	movlw	-193
  1909  00088A  16B1               	andwf	4017,f,c	;volatile
  1910                           
  1911                           ;init.c: 162: T3CONbits.T3CKPS = 0b00;
  1912  00088C  0ECF               	movlw	-49
  1913  00088E  16B1               	andwf	4017,f,c	;volatile
  1914                           
  1915                           ;init.c: 163: T3CONbits.nT3SYNC = 1;
  1916  000890  84B1               	bsf	4017,2,c	;volatile
  1917                           
  1918                           ;init.c: 164: T3CONbits.TMR3ON = 1;
  1919  000892  80B1               	bsf	4017,0,c	;volatile
  1920                           
  1921                           ;init.c: 168: T5GCONbits.TMR5GE = 1;
  1922  000894  010F               	movlb	15	; () banked
  1923  000896  8F4D               	bsf	77,7,b	;volatile
  1924                           
  1925                           ; BSR set to: 15
  1926                           ;init.c: 169: T5GCONbits.T5GSPM = 0;
  1927  000898  010F               	movlb	15	; () banked
  1928  00089A  994D               	bcf	77,4,b	;volatile
  1929                           
  1930                           ; BSR set to: 15
  1931                           ;init.c: 170: T5GCONbits.T5GTM = 0;
  1932  00089C  010F               	movlb	15	; () banked
  1933  00089E  9B4D               	bcf	77,5,b	;volatile
  1934                           
  1935                           ; BSR set to: 15
  1936                           ;init.c: 171: T5GCONbits.T5GPOL = 1;
  1937  0008A0  010F               	movlb	15	; () banked
  1938  0008A2  8D4D               	bsf	77,6,b	;volatile
  1939                           
  1940                           ;init.c: 172: T5GCONbits.T5GSS = 0b00;
  1941  0008A4  0EFC               	movlw	-4
  1942  0008A6  010F               	movlb	15	; () banked
  1943  0008A8  174D               	andwf	77,f,b	;volatile
  1944                           
  1945                           ;init.c: 174: T5CONbits.TMR5CS = 0b00;
  1946  0008AA  0E3F               	movlw	-193
  1947  0008AC  010F               	movlb	15	; () banked
  1948  0008AE  174E               	andwf	78,f,b	;volatile
  1949                           
  1950                           ;init.c: 175: T5CONbits.T5CKPS = 0b00;
  1951  0008B0  0ECF               	movlw	-49
  1952  0008B2  010F               	movlb	15	; () banked
  1953  0008B4  174E               	andwf	78,f,b	;volatile
  1954                           
  1955                           ; BSR set to: 15
  1956                           ;init.c: 176: T5CONbits.nT5SYNC = 1;
  1957  0008B6  010F               	movlb	15	; () banked
  1958  0008B8  854E               	bsf	78,2,b	;volatile
  1959                           
  1960                           ; BSR set to: 15
  1961                           ;init.c: 177: T5CONbits.TMR5ON = 1;
  1962  0008BA  010F               	movlb	15	; () banked
  1963  0008BC  814E               	bsf	78,0,b	;volatile
  1964                           
  1965                           ; BSR set to: 15
  1966  0008BE  0012               	return		;funcret
  1967  0008C0                     __end_of_InitTimer:
  1968                           	opt stack 0
  1969                           tblptru	equ	0xFF8
  1970                           tblptrh	equ	0xFF7
  1971                           tblptrl	equ	0xFF6
  1972                           tablat	equ	0xFF5
  1973                           prodh	equ	0xFF4
  1974                           prodl	equ	0xFF3
  1975                           postinc0	equ	0xFEE
  1976                           wreg	equ	0xFE8
  1977                           postdec1	equ	0xFE5
  1978                           fsr1l	equ	0xFE1
  1979                           indf2	equ	0xFDF
  1980                           postinc2	equ	0xFDE
  1981                           postdec2	equ	0xFDD
  1982                           fsr2h	equ	0xFDA
  1983                           fsr2l	equ	0xFD9
  1984                           status	equ	0xFD8
  1985                           
  1986 ;; *************** function _InitSpi *****************
  1987 ;; Defined at:
  1988 ;;		line 118 in file "init.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;		None
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;		None
  1993 ;; Return value:  Size  Location     Type
  1994 ;;		None               void
  1995 ;; Registers used:
  1996 ;;		wreg, status,2
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2006 ;;Total ram usage:        0 bytes
  2007 ;; Hardware stack levels used:    1
  2008 ;; Hardware stack levels required when called:    3
  2009 ;; This function calls:
  2010 ;;		Nothing
  2011 ;; This function is called by:
  2012 ;;		_Init
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           	psect	text14
  2017  000B86                     __ptext14:
  2018                           	opt stack 0
  2019  000B86                     _InitSpi:
  2020                           	opt stack 26
  2021                           
  2022                           ;init.c: 119: SSP1STAT = 0b00000000;
  2023                           
  2024                           ; BSR set to: 15
  2025                           ;incstack = 0
  2026  000B86  0E00               	movlw	0
  2027  000B88  6EC7               	movwf	4039,c	;volatile
  2028                           
  2029                           ;init.c: 120: SSP1CON1 = 0b00100001;
  2030  000B8A  0E21               	movlw	33
  2031  000B8C  6EC6               	movwf	4038,c	;volatile
  2032  000B8E  0012               	return		;funcret
  2033  000B90                     __end_of_InitSpi:
  2034                           	opt stack 0
  2035                           tblptru	equ	0xFF8
  2036                           tblptrh	equ	0xFF7
  2037                           tblptrl	equ	0xFF6
  2038                           tablat	equ	0xFF5
  2039                           prodh	equ	0xFF4
  2040                           prodl	equ	0xFF3
  2041                           postinc0	equ	0xFEE
  2042                           wreg	equ	0xFE8
  2043                           postdec1	equ	0xFE5
  2044                           fsr1l	equ	0xFE1
  2045                           indf2	equ	0xFDF
  2046                           postinc2	equ	0xFDE
  2047                           postdec2	equ	0xFDD
  2048                           fsr2h	equ	0xFDA
  2049                           fsr2l	equ	0xFD9
  2050                           status	equ	0xFD8
  2051                           
  2052 ;; *************** function _InitPort *****************
  2053 ;; Defined at:
  2054 ;;		line 50 in file "init.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;		None
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;		None
  2059 ;; Return value:  Size  Location     Type
  2060 ;;		None               void
  2061 ;; Registers used:
  2062 ;;		wreg, status,2
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2072 ;;Total ram usage:        0 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:    3
  2075 ;; This function calls:
  2076 ;;		Nothing
  2077 ;; This function is called by:
  2078 ;;		_Init
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           	psect	text15
  2083  000B3E                     __ptext15:
  2084                           	opt stack 0
  2085  000B3E                     _InitPort:
  2086                           	opt stack 26
  2087                           
  2088                           ;init.c: 51: PORTA = 0b00000000;
  2089                           
  2090                           ;incstack = 0
  2091  000B3E  0E00               	movlw	0
  2092  000B40  6E80               	movwf	3968,c	;volatile
  2093                           
  2094                           ;init.c: 52: PORTB = 0b00001000;
  2095  000B42  0E08               	movlw	8
  2096  000B44  6E81               	movwf	3969,c	;volatile
  2097                           
  2098                           ;init.c: 53: PORTC = 0b00000000;
  2099  000B46  0E00               	movlw	0
  2100  000B48  6E82               	movwf	3970,c	;volatile
  2101                           
  2102                           ;init.c: 54: PORTD = 0b00001000;
  2103  000B4A  0E08               	movlw	8
  2104  000B4C  6E83               	movwf	3971,c	;volatile
  2105                           
  2106                           ;init.c: 55: PORTE = 0b00000000;
  2107  000B4E  0E00               	movlw	0
  2108  000B50  6E84               	movwf	3972,c	;volatile
  2109  000B52  0012               	return		;funcret
  2110  000B54                     __end_of_InitPort:
  2111                           	opt stack 0
  2112                           tblptru	equ	0xFF8
  2113                           tblptrh	equ	0xFF7
  2114                           tblptrl	equ	0xFF6
  2115                           tablat	equ	0xFF5
  2116                           prodh	equ	0xFF4
  2117                           prodl	equ	0xFF3
  2118                           postinc0	equ	0xFEE
  2119                           wreg	equ	0xFE8
  2120                           postdec1	equ	0xFE5
  2121                           fsr1l	equ	0xFE1
  2122                           indf2	equ	0xFDF
  2123                           postinc2	equ	0xFDE
  2124                           postdec2	equ	0xFDD
  2125                           fsr2h	equ	0xFDA
  2126                           fsr2l	equ	0xFD9
  2127                           status	equ	0xFD8
  2128                           
  2129 ;; *************** function _InitOsc *****************
  2130 ;; Defined at:
  2131 ;;		line 80 in file "init.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;		None
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;		None
  2136 ;; Return value:  Size  Location     Type
  2137 ;;		None               void
  2138 ;; Registers used:
  2139 ;;		wreg, status,2
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2149 ;;Total ram usage:        0 bytes
  2150 ;; Hardware stack levels used:    1
  2151 ;; Hardware stack levels required when called:    3
  2152 ;; This function calls:
  2153 ;;		Nothing
  2154 ;; This function is called by:
  2155 ;;		_Init
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           	psect	text16
  2160  000BAA                     __ptext16:
  2161                           	opt stack 0
  2162  000BAA                     _InitOsc:
  2163                           	opt stack 26
  2164                           
  2165                           ;init.c: 81: OSCCON = 0b01110111;
  2166                           
  2167                           ;incstack = 0
  2168  000BAA  0E77               	movlw	119
  2169  000BAC  6ED3               	movwf	4051,c	;volatile
  2170  000BAE  0012               	return		;funcret
  2171  000BB0                     __end_of_InitOsc:
  2172                           	opt stack 0
  2173                           tblptru	equ	0xFF8
  2174                           tblptrh	equ	0xFF7
  2175                           tblptrl	equ	0xFF6
  2176                           tablat	equ	0xFF5
  2177                           prodh	equ	0xFF4
  2178                           prodl	equ	0xFF3
  2179                           postinc0	equ	0xFEE
  2180                           wreg	equ	0xFE8
  2181                           postdec1	equ	0xFE5
  2182                           fsr1l	equ	0xFE1
  2183                           indf2	equ	0xFDF
  2184                           postinc2	equ	0xFDE
  2185                           postdec2	equ	0xFDD
  2186                           fsr2h	equ	0xFDA
  2187                           fsr2l	equ	0xFD9
  2188                           status	equ	0xFD8
  2189                           
  2190 ;; *************** function _InitInterrupt *****************
  2191 ;; Defined at:
  2192 ;;		line 197 in file "init.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;		None
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;		None               void
  2199 ;; Registers used:
  2200 ;;		None
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2210 ;;Total ram usage:        0 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; Hardware stack levels required when called:    3
  2213 ;; This function calls:
  2214 ;;		Nothing
  2215 ;; This function is called by:
  2216 ;;		_Init
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text17
  2221  000B78                     __ptext17:
  2222                           	opt stack 0
  2223  000B78                     _InitInterrupt:
  2224                           	opt stack 26
  2225                           
  2226                           ;init.c: 199: TMR3GIE = 1;
  2227                           
  2228                           ;incstack = 0
  2229  000B78  82A3               	bsf	4003,1,c	;volatile
  2230                           
  2231                           ;init.c: 200: TMR3IF = 0;
  2232  000B7A  92A1               	bcf	4001,1,c	;volatile
  2233                           
  2234                           ;init.c: 202: CCP1IE = 1;
  2235  000B7C  849D               	bsf	3997,2,c	;volatile
  2236                           
  2237                           ;init.c: 203: CCP1IF = 0;
  2238  000B7E  949E               	bcf	3998,2,c	;volatile
  2239                           
  2240                           ;init.c: 205: PEIE = 1;
  2241  000B80  8CF2               	bsf	intcon,6,c	;volatile
  2242                           
  2243                           ;init.c: 206: GIE = 1;
  2244  000B82  8EF2               	bsf	intcon,7,c	;volatile
  2245  000B84  0012               	return		;funcret
  2246  000B86                     __end_of_InitInterrupt:
  2247                           	opt stack 0
  2248                           tblptru	equ	0xFF8
  2249                           tblptrh	equ	0xFF7
  2250                           tblptrl	equ	0xFF6
  2251                           tablat	equ	0xFF5
  2252                           prodh	equ	0xFF4
  2253                           prodl	equ	0xFF3
  2254                           intcon	equ	0xFF2
  2255                           postinc0	equ	0xFEE
  2256                           wreg	equ	0xFE8
  2257                           postdec1	equ	0xFE5
  2258                           fsr1l	equ	0xFE1
  2259                           indf2	equ	0xFDF
  2260                           postinc2	equ	0xFDE
  2261                           postdec2	equ	0xFDD
  2262                           fsr2h	equ	0xFDA
  2263                           fsr2l	equ	0xFD9
  2264                           status	equ	0xFD8
  2265                           
  2266 ;; *************** function _InitComp *****************
  2267 ;; Defined at:
  2268 ;;		line 187 in file "init.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;		None
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;		None
  2273 ;; Return value:  Size  Location     Type
  2274 ;;		None               void
  2275 ;; Registers used:
  2276 ;;		wreg, status,2
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2286 ;;Total ram usage:        0 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:    3
  2289 ;; This function calls:
  2290 ;;		Nothing
  2291 ;; This function is called by:
  2292 ;;		_Init
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           	psect	text18
  2297  000B90                     __ptext18:
  2298                           	opt stack 0
  2299  000B90                     _InitComp:
  2300                           	opt stack 26
  2301                           
  2302                           ;init.c: 188: CCP1CONbits.CCP1M = 0b1010;
  2303                           
  2304                           ;incstack = 0
  2305  000B90  50BD               	movf	4029,w,c	;volatile
  2306  000B92  0BF0               	andlw	-16
  2307  000B94  090A               	iorlw	10
  2308  000B96  6EBD               	movwf	4029,c	;volatile
  2309  000B98  0012               	return		;funcret
  2310  000B9A                     __end_of_InitComp:
  2311                           	opt stack 0
  2312                           tblptru	equ	0xFF8
  2313                           tblptrh	equ	0xFF7
  2314                           tblptrl	equ	0xFF6
  2315                           tablat	equ	0xFF5
  2316                           prodh	equ	0xFF4
  2317                           prodl	equ	0xFF3
  2318                           intcon	equ	0xFF2
  2319                           postinc0	equ	0xFEE
  2320                           wreg	equ	0xFE8
  2321                           postdec1	equ	0xFE5
  2322                           fsr1l	equ	0xFE1
  2323                           indf2	equ	0xFDF
  2324                           postinc2	equ	0xFDE
  2325                           postdec2	equ	0xFDD
  2326                           fsr2h	equ	0xFDA
  2327                           fsr2l	equ	0xFD9
  2328                           status	equ	0xFD8
  2329                           
  2330 ;; *************** function _InitAnsel *****************
  2331 ;; Defined at:
  2332 ;;		line 70 in file "init.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;		None
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;		None
  2337 ;; Return value:  Size  Location     Type
  2338 ;;		None               void
  2339 ;; Registers used:
  2340 ;;		wreg, status,2
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2350 ;;Total ram usage:        0 bytes
  2351 ;; Hardware stack levels used:    1
  2352 ;; Hardware stack levels required when called:    3
  2353 ;; This function calls:
  2354 ;;		Nothing
  2355 ;; This function is called by:
  2356 ;;		_Init
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	text19
  2361  000AA2                     __ptext19:
  2362                           	opt stack 0
  2363  000AA2                     _InitAnsel:
  2364                           	opt stack 26
  2365                           
  2366                           ;init.c: 71: ANSELA = 0b00000000;
  2367                           
  2368                           ;incstack = 0
  2369  000AA2  0E00               	movlw	0
  2370  000AA4  010F               	movlb	15	; () banked
  2371  000AA6  6F38               	movwf	56,b	;volatile
  2372                           
  2373                           ;init.c: 72: ANSELB = 0b00000000;
  2374  000AA8  0E00               	movlw	0
  2375  000AAA  010F               	movlb	15	; () banked
  2376  000AAC  6F39               	movwf	57,b	;volatile
  2377                           
  2378                           ;init.c: 73: ANSELC = 0b00000000;
  2379  000AAE  0E00               	movlw	0
  2380  000AB0  010F               	movlb	15	; () banked
  2381  000AB2  6F3A               	movwf	58,b	;volatile
  2382                           
  2383                           ;init.c: 74: ANSELD = 0b00000000;
  2384  000AB4  0E00               	movlw	0
  2385  000AB6  010F               	movlb	15	; () banked
  2386  000AB8  6F3B               	movwf	59,b	;volatile
  2387                           
  2388                           ;init.c: 75: ANSELE = 0b00000000;
  2389  000ABA  0E00               	movlw	0
  2390  000ABC  010F               	movlb	15	; () banked
  2391  000ABE  6F3C               	movwf	60,b	;volatile
  2392                           
  2393                           ; BSR set to: 15
  2394  000AC0  0012               	return		;funcret
  2395  000AC2                     __end_of_InitAnsel:
  2396                           	opt stack 0
  2397                           tblptru	equ	0xFF8
  2398                           tblptrh	equ	0xFF7
  2399                           tblptrl	equ	0xFF6
  2400                           tablat	equ	0xFF5
  2401                           prodh	equ	0xFF4
  2402                           prodl	equ	0xFF3
  2403                           intcon	equ	0xFF2
  2404                           postinc0	equ	0xFEE
  2405                           wreg	equ	0xFE8
  2406                           postdec1	equ	0xFE5
  2407                           fsr1l	equ	0xFE1
  2408                           indf2	equ	0xFDF
  2409                           postinc2	equ	0xFDE
  2410                           postdec2	equ	0xFDD
  2411                           fsr2h	equ	0xFDA
  2412                           fsr2l	equ	0xFD9
  2413                           status	equ	0xFD8
  2414                           
  2415 ;; *************** function _InitActors *****************
  2416 ;; Defined at:
  2417 ;;		line 213 in file "init.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;		None
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;		None
  2422 ;; Return value:  Size  Location     Type
  2423 ;;		None               void
  2424 ;; Registers used:
  2425 ;;		wreg, status,2
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2435 ;;Total ram usage:        0 bytes
  2436 ;; Hardware stack levels used:    1
  2437 ;; Hardware stack levels required when called:    3
  2438 ;; This function calls:
  2439 ;;		Nothing
  2440 ;; This function is called by:
  2441 ;;		_Init
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           	psect	text20
  2446  000A54                     __ptext20:
  2447                           	opt stack 0
  2448  000A54                     _InitActors:
  2449                           	opt stack 26
  2450                           
  2451                           ;init.c: 214: a_actors[0].aile = 500;
  2452                           
  2453                           ; BSR set to: 15
  2454                           ;incstack = 0
  2455  000A54  0E01               	movlw	1
  2456  000A56  0100               	movlb	0	; () banked
  2457  000A58  6FD1               	movwf	(_a_actors+1)& (0+255),b
  2458  000A5A  0EF4               	movlw	244
  2459  000A5C  6FD0               	movwf	_a_actors& (0+255),b
  2460                           
  2461                           ;init.c: 215: a_actors[0].elev = 500;
  2462  000A5E  0E01               	movlw	1
  2463  000A60  0100               	movlb	0	; () banked
  2464  000A62  6FD3               	movwf	(_a_actors+3)& (0+255),b
  2465  000A64  0EF4               	movlw	244
  2466  000A66  6FD2               	movwf	(_a_actors+2)& (0+255),b
  2467                           
  2468                           ;init.c: 216: a_actors[0].thro = 0;
  2469  000A68  0E00               	movlw	0
  2470  000A6A  0100               	movlb	0	; () banked
  2471  000A6C  6FD5               	movwf	(_a_actors+5)& (0+255),b
  2472  000A6E  0E00               	movlw	0
  2473  000A70  6FD4               	movwf	(_a_actors+4)& (0+255),b
  2474                           
  2475                           ;init.c: 217: a_actors[0].rudd = 500;
  2476  000A72  0E01               	movlw	1
  2477  000A74  0100               	movlb	0	; () banked
  2478  000A76  6FD7               	movwf	(_a_actors+7)& (0+255),b
  2479  000A78  0EF4               	movlw	244
  2480  000A7A  6FD6               	movwf	(_a_actors+6)& (0+255),b
  2481                           
  2482                           ; BSR set to: 0
  2483  000A7C  0012               	return		;funcret
  2484  000A7E                     __end_of_InitActors:
  2485                           	opt stack 0
  2486                           tblptru	equ	0xFF8
  2487                           tblptrh	equ	0xFF7
  2488                           tblptrl	equ	0xFF6
  2489                           tablat	equ	0xFF5
  2490                           prodh	equ	0xFF4
  2491                           prodl	equ	0xFF3
  2492                           intcon	equ	0xFF2
  2493                           postinc0	equ	0xFEE
  2494                           wreg	equ	0xFE8
  2495                           postdec1	equ	0xFE5
  2496                           fsr1l	equ	0xFE1
  2497                           indf2	equ	0xFDF
  2498                           postinc2	equ	0xFDE
  2499                           postdec2	equ	0xFDD
  2500                           fsr2h	equ	0xFDA
  2501                           fsr2l	equ	0xFD9
  2502                           status	equ	0xFD8
  2503                           
  2504 ;; *************** function _CheckThrottle *****************
  2505 ;; Defined at:
  2506 ;;		line 1288 in file "position.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;		None
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;		None
  2511 ;; Return value:  Size  Location     Type
  2512 ;;		None               void
  2513 ;; Registers used:
  2514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2515 ;; Tracked objects:
  2516 ;;		On entry : 0/0
  2517 ;;		On exit  : 0/0
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2523 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2524 ;;Total ram usage:        5 bytes
  2525 ;; Hardware stack levels used:    1
  2526 ;; Hardware stack levels required when called:    5
  2527 ;; This function calls:
  2528 ;;		_AboveFloor
  2529 ;;		_AboveTableLand
  2530 ;;		_AboveTableStart
  2531 ;;		___wmul
  2532 ;; This function is called by:
  2533 ;;		_main
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text21
  2538  0002FE                     __ptext21:
  2539                           	opt stack 0
  2540  0002FE                     _CheckThrottle:
  2541                           	opt stack 25
  2542                           
  2543                           ;position.c: 1290: if (id_current_cc == 0) {
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;incstack = 0
  2547  0002FE  5022               	movf	_id_current_cc,w,c
  2548  000300  1023               	iorwf	_id_current_cc+1,w,c
  2549  000302  A4D8               	btfss	status,2,c
  2550  000304  D004               	goto	l3694
  2551                           
  2552                           ;position.c: 1292: table = 1;
  2553  000306  804C               	bsf	_table/(0+8),_table& (0+7),c
  2554                           
  2555                           ;position.c: 1293: AboveTableStart();
  2556  000308  EC3A  F002         	call	_AboveTableStart	;wreg free
  2557                           
  2558                           ;position.c: 1294: } else if (id_current_cc == 1) {
  2559  00030C  0012               	return	
  2560  00030E                     l3694:
  2561  00030E  0422               	decf	_id_current_cc,w,c
  2562  000310  1023               	iorwf	_id_current_cc+1,w,c
  2563  000312  A4D8               	btfss	status,2,c
  2564  000314  D04E               	goto	l3712
  2565                           
  2566                           ;position.c: 1295: seconddifference = storeheight - a_frame[0].height;
  2567  000316  EE20  F007         	lfsr	2,_a_frame+6
  2568  00031A  CFDE F0EE          	movff	postinc2,??_CheckThrottle
  2569  00031E  CFDD F0EF          	movff	postdec2,??_CheckThrottle+1
  2570  000322  0100               	movlb	0	; () banked
  2571  000324  1FEE               	comf	??_CheckThrottle& (0+255),f,b
  2572  000326  1FEF               	comf	(??_CheckThrottle+1)& (0+255),f,b
  2573  000328  4BEE               	infsnz	??_CheckThrottle& (0+255),f,b
  2574  00032A  2BEF               	incf	(??_CheckThrottle+1)& (0+255),f,b
  2575  00032C  5028               	movf	_storeheight,w,c
  2576  00032E  0100               	movlb	0	; () banked
  2577  000330  25EE               	addwf	??_CheckThrottle& (0+255),w,b
  2578  000332  6E26               	movwf	_seconddifference,c
  2579  000334  5029               	movf	_storeheight+1,w,c
  2580  000336  0100               	movlb	0	; () banked
  2581  000338  21EF               	addwfc	(??_CheckThrottle+1)& (0+255),w,b
  2582  00033A  6E27               	movwf	_seconddifference+1,c
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;position.c: 1296: if (a_frame_dif[0].dif_height < (-1 * cm50) || seconddifference < (-1
      +                           * cm50)) {
  2586  00033C  C046  F0E2         	movff	_cm50,___wmul@multiplier
  2587  000340  C047  F0E3         	movff	_cm50+1,___wmul@multiplier+1
  2588  000344  0EFF               	movlw	255
  2589  000346  0100               	movlb	0	; () banked
  2590  000348  6FE5               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2591  00034A  69E4               	setf	___wmul@multiplicand& (0+255),b
  2592  00034C  ECCB  F004         	call	___wmul	;wreg free
  2593  000350  0100               	movlb	0	; () banked
  2594  000352  51E2               	movf	?___wmul& (0+255),w,b
  2595  000354  5C1B               	subwf	_a_frame_dif+6,w,c
  2596  000356  0100               	movlb	0	; () banked
  2597  000358  51E3               	movf	(?___wmul+1)& (0+255),w,b
  2598  00035A  581C               	subwfb	_a_frame_dif+7,w,c
  2599  00035C  A0D8               	btfss	status,0,c
  2600  00035E  D012               	goto	l1161
  2601                           
  2602                           ; BSR set to: 0
  2603  000360  C046  F0E2         	movff	_cm50,___wmul@multiplier
  2604  000364  C047  F0E3         	movff	_cm50+1,___wmul@multiplier+1
  2605  000368  0EFF               	movlw	255
  2606  00036A  0100               	movlb	0	; () banked
  2607  00036C  6FE5               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2608  00036E  69E4               	setf	___wmul@multiplicand& (0+255),b
  2609  000370  ECCB  F004         	call	___wmul	;wreg free
  2610  000374  0100               	movlb	0	; () banked
  2611  000376  51E2               	movf	?___wmul& (0+255),w,b
  2612  000378  5C26               	subwf	_seconddifference,w,c
  2613  00037A  0100               	movlb	0	; () banked
  2614  00037C  51E3               	movf	(?___wmul+1)& (0+255),w,b
  2615  00037E  5827               	subwfb	_seconddifference+1,w,c
  2616  000380  B0D8               	btfsc	status,0,c
  2617  000382  D00A               	goto	l1159
  2618  000384                     l1161:
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;position.c: 1298: storeheight = a_frame_dif[0].dif_height;
  2622  000384  C01B  F028         	movff	_a_frame_dif+6,_storeheight
  2623  000388  C01C  F029         	movff	_a_frame_dif+7,_storeheight+1
  2624                           
  2625                           ;position.c: 1304: if (storedif) {
  2626  00038C  AA4B               	btfss	_storedif/(0+8),_storedif& (0+7),c
  2627  00038E  D002               	goto	l1162
  2628                           
  2629                           ; BSR set to: 0
  2630                           ;position.c: 1305: table = 0;
  2631  000390  904C               	bcf	_table/(0+8),_table& (0+7),c
  2632                           
  2633                           ;position.c: 1306: } else {
  2634  000392  D007               	goto	l3706
  2635  000394                     l1162:
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;position.c: 1307: storedif = 1;
  2639  000394  8A4B               	bsf	_storedif/(0+8),_storedif& (0+7),c
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;position.c: 1308: }
  2643                           ;position.c: 1309: } else {
  2644  000396  D005               	goto	l3706
  2645  000398                     l1159:
  2646                           
  2647                           ; BSR set to: 0
  2648                           ;position.c: 1310: storedif = 0;
  2649  000398  9A4B               	bcf	_storedif/(0+8),_storedif& (0+7),c
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;position.c: 1311: storeheight = 0;
  2653  00039A  0E00               	movlw	0
  2654  00039C  6E29               	movwf	_storeheight+1,c
  2655  00039E  0E00               	movlw	0
  2656  0003A0  6E28               	movwf	_storeheight,c
  2657  0003A2                     l3706:
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;position.c: 1312: }
  2661                           ;position.c: 1313: if (table == 1) {
  2662  0003A2  A04C               	btfss	_table/(0+8),_table& (0+7),c
  2663  0003A4  D003               	goto	l3710
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;position.c: 1314: AboveTableStart();
  2667  0003A6  EC3A  F002         	call	_AboveTableStart	;wreg free
  2668                           
  2669                           ;position.c: 1315: } else {
  2670  0003AA  0012               	return	
  2671  0003AC                     l3710:
  2672                           
  2673                           ;position.c: 1316: AboveFloor();
  2674  0003AC  EC60  F004         	call	_AboveFloor	;wreg free
  2675                           
  2676                           ;position.c: 1317: }
  2677                           ;position.c: 1319: } else if (id_current_cc > 1 && id_current_cc < (c_path - 1)) {
  2678  0003B0  0012               	return	
  2679  0003B2                     l3712:
  2680  0003B2  BE23               	btfsc	_id_current_cc+1,7,c
  2681  0003B4  D029               	goto	l3718
  2682  0003B6  5023               	movf	_id_current_cc+1,w,c
  2683  0003B8  E104               	bnz	u3210
  2684  0003BA  0E02               	movlw	2
  2685  0003BC  5C22               	subwf	_id_current_cc,w,c
  2686  0003BE  A0D8               	btfss	status,0,c
  2687  0003C0  D023               	goto	l3718
  2688  0003C2                     u3210:
  2689  0003C2  0EFF               	movlw	255
  2690  0003C4  0100               	movlb	0	; () banked
  2691  0003C6  6FEE               	movwf	??_CheckThrottle& (0+255),b
  2692  0003C8  0EFF               	movlw	255
  2693  0003CA  0100               	movlb	0	; () banked
  2694  0003CC  6FEF               	movwf	(??_CheckThrottle+1)& (0+255),b
  2695  0003CE  C042  F0F0         	movff	_c_path,??_CheckThrottle+2
  2696  0003D2  C043  F0F1         	movff	_c_path+1,??_CheckThrottle+3
  2697  0003D6  0100               	movlb	0	; () banked
  2698  0003D8  51EE               	movf	??_CheckThrottle& (0+255),w,b
  2699  0003DA  0100               	movlb	0	; () banked
  2700  0003DC  27F0               	addwf	(??_CheckThrottle+2)& (0+255),f,b
  2701  0003DE  0100               	movlb	0	; () banked
  2702  0003E0  51EF               	movf	(??_CheckThrottle+1)& (0+255),w,b
  2703  0003E2  0100               	movlb	0	; () banked
  2704  0003E4  23F1               	addwfc	(??_CheckThrottle+3)& (0+255),f,b
  2705  0003E6  0100               	movlb	0	; () banked
  2706  0003E8  51F0               	movf	(??_CheckThrottle+2)& (0+255),w,b
  2707  0003EA  5C22               	subwf	_id_current_cc,w,c
  2708  0003EC  5023               	movf	_id_current_cc+1,w,c
  2709  0003EE  0A80               	xorlw	128
  2710  0003F0  0100               	movlb	0	; () banked
  2711  0003F2  6FF2               	movwf	(??_CheckThrottle+4)& (0+255),b
  2712  0003F4  0100               	movlb	0	; () banked
  2713  0003F6  51F1               	movf	(??_CheckThrottle+3)& (0+255),w,b
  2714  0003F8  0A80               	xorlw	128
  2715  0003FA  0100               	movlb	0	; () banked
  2716  0003FC  59F2               	subwfb	(??_CheckThrottle+4)& (0+255),w,b
  2717  0003FE  B0D8               	btfsc	status,0,c
  2718  000400  D003               	goto	l3718
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;position.c: 1320: AboveFloor();
  2722  000402  EC60  F004         	call	_AboveFloor	;wreg free
  2723                           
  2724                           ;position.c: 1321: } else {
  2725  000406  0012               	return	
  2726  000408                     l3718:
  2727                           
  2728                           ;position.c: 1323: seconddifference = storeheight - a_frame[0].height;
  2729  000408  EE20  F007         	lfsr	2,_a_frame+6
  2730  00040C  CFDE F0EE          	movff	postinc2,??_CheckThrottle
  2731  000410  CFDD F0EF          	movff	postdec2,??_CheckThrottle+1
  2732  000414  0100               	movlb	0	; () banked
  2733  000416  1FEE               	comf	??_CheckThrottle& (0+255),f,b
  2734  000418  1FEF               	comf	(??_CheckThrottle+1)& (0+255),f,b
  2735  00041A  4BEE               	infsnz	??_CheckThrottle& (0+255),f,b
  2736  00041C  2BEF               	incf	(??_CheckThrottle+1)& (0+255),f,b
  2737  00041E  5028               	movf	_storeheight,w,c
  2738  000420  0100               	movlb	0	; () banked
  2739  000422  25EE               	addwf	??_CheckThrottle& (0+255),w,b
  2740  000424  6E26               	movwf	_seconddifference,c
  2741  000426  5029               	movf	_storeheight+1,w,c
  2742  000428  0100               	movlb	0	; () banked
  2743  00042A  21EF               	addwfc	(??_CheckThrottle+1)& (0+255),w,b
  2744  00042C  6E27               	movwf	_seconddifference+1,c
  2745                           
  2746                           ; BSR set to: 0
  2747                           ;position.c: 1324: if (a_frame_dif[0].dif_height > cm50 || seconddifference > cm50) {
  2748  00042E  501B               	movf	_a_frame_dif+6,w,c
  2749  000430  5C46               	subwf	_cm50,w,c
  2750  000432  501C               	movf	_a_frame_dif+7,w,c
  2751  000434  5847               	subwfb	_cm50+1,w,c
  2752  000436  A0D8               	btfss	status,0,c
  2753  000438  D006               	goto	l1172
  2754                           
  2755                           ; BSR set to: 0
  2756  00043A  5026               	movf	_seconddifference,w,c
  2757  00043C  5C46               	subwf	_cm50,w,c
  2758  00043E  5027               	movf	_seconddifference+1,w,c
  2759  000440  5847               	subwfb	_cm50+1,w,c
  2760  000442  B0D8               	btfsc	status,0,c
  2761  000444  D00A               	goto	l1170
  2762  000446                     l1172:
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;position.c: 1325: storeheight = a_frame_dif[0].dif_height;
  2766  000446  C01B  F028         	movff	_a_frame_dif+6,_storeheight
  2767  00044A  C01C  F029         	movff	_a_frame_dif+7,_storeheight+1
  2768                           
  2769                           ;position.c: 1328: if (storedif) {
  2770  00044E  AA4B               	btfss	_storedif/(0+8),_storedif& (0+7),c
  2771  000450  D002               	goto	l1173
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;position.c: 1329: table = 1;
  2775  000452  804C               	bsf	_table/(0+8),_table& (0+7),c
  2776                           
  2777                           ;position.c: 1330: } else {
  2778  000454  D007               	goto	l3728
  2779  000456                     l1173:
  2780                           
  2781                           ; BSR set to: 0
  2782                           ;position.c: 1331: storedif = 1;
  2783  000456  8A4B               	bsf	_storedif/(0+8),_storedif& (0+7),c
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;position.c: 1332: }
  2787                           ;position.c: 1333: } else {
  2788  000458  D005               	goto	l3728
  2789  00045A                     l1170:
  2790                           
  2791                           ; BSR set to: 0
  2792                           ;position.c: 1334: storedif = 0;
  2793  00045A  9A4B               	bcf	_storedif/(0+8),_storedif& (0+7),c
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;position.c: 1335: storeheight = 0;
  2797  00045C  0E00               	movlw	0
  2798  00045E  6E29               	movwf	_storeheight+1,c
  2799  000460  0E00               	movlw	0
  2800  000462  6E28               	movwf	_storeheight,c
  2801  000464                     l3728:
  2802                           
  2803                           ; BSR set to: 0
  2804                           ;position.c: 1336: }
  2805                           ;position.c: 1338: if (table == 1) {
  2806  000464  A04C               	btfss	_table/(0+8),_table& (0+7),c
  2807  000466  D003               	goto	l3732
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;position.c: 1339: AboveTableLand();
  2811  000468  EC50  F000         	call	_AboveTableLand	;wreg free
  2812                           
  2813                           ;position.c: 1340: } else {
  2814  00046C  0012               	return	
  2815  00046E                     l3732:
  2816                           
  2817                           ;position.c: 1341: AboveFloor();
  2818  00046E  EC60  F004         	call	_AboveFloor	;wreg free
  2819  000472  0012               	return	
  2820  000474                     __end_of_CheckThrottle:
  2821                           	opt stack 0
  2822                           tblptru	equ	0xFF8
  2823                           tblptrh	equ	0xFF7
  2824                           tblptrl	equ	0xFF6
  2825                           tablat	equ	0xFF5
  2826                           prodh	equ	0xFF4
  2827                           prodl	equ	0xFF3
  2828                           intcon	equ	0xFF2
  2829                           postinc0	equ	0xFEE
  2830                           wreg	equ	0xFE8
  2831                           postdec1	equ	0xFE5
  2832                           fsr1l	equ	0xFE1
  2833                           indf2	equ	0xFDF
  2834                           postinc2	equ	0xFDE
  2835                           postdec2	equ	0xFDD
  2836                           fsr2h	equ	0xFDA
  2837                           fsr2l	equ	0xFD9
  2838                           status	equ	0xFD8
  2839                           
  2840 ;; *************** function ___wmul *****************
  2841 ;; Defined at:
  2842 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2845 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  product         2    4[BANK0 ] unsigned int 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  2    0[BANK0 ] unsigned int 
  2850 ;; Registers used:
  2851 ;;		wreg, status,2, status,0, prodl, prodh
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2857 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2858 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;Total ram usage:        6 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; Hardware stack levels required when called:    3
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_CheckThrottle
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           	psect	text22
  2872  000996                     __ptext22:
  2873                           	opt stack 0
  2874  000996                     ___wmul:
  2875                           	opt stack 26
  2876                           
  2877                           ;incstack = 0
  2878  000996  0100               	movlb	0	; () banked
  2879  000998  51E2               	movf	___wmul@multiplier& (0+255),w,b
  2880  00099A  0100               	movlb	0	; () banked
  2881  00099C  03E4               	mulwf	___wmul@multiplicand& (0+255),b
  2882  00099E  CFF3 F0E6          	movff	prodl,___wmul@product
  2883  0009A2  CFF4 F0E7          	movff	prodh,___wmul@product+1
  2884  0009A6  0100               	movlb	0	; () banked
  2885  0009A8  51E2               	movf	___wmul@multiplier& (0+255),w,b
  2886  0009AA  0100               	movlb	0	; () banked
  2887  0009AC  03E5               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2888  0009AE  50F3               	movf	prodl,w,c
  2889  0009B0  0100               	movlb	0	; () banked
  2890  0009B2  27E7               	addwf	(___wmul@product+1)& (0+255),f,b
  2891  0009B4  0100               	movlb	0	; () banked
  2892  0009B6  51E3               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2893  0009B8  0100               	movlb	0	; () banked
  2894  0009BA  03E4               	mulwf	___wmul@multiplicand& (0+255),b
  2895  0009BC  50F3               	movf	prodl,w,c
  2896  0009BE  0100               	movlb	0	; () banked
  2897  0009C0  27E7               	addwf	(___wmul@product+1)& (0+255),f,b
  2898                           
  2899                           ; BSR set to: 0
  2900  0009C2  C0E6  F0E2         	movff	___wmul@product,?___wmul
  2901  0009C6  C0E7  F0E3         	movff	___wmul@product+1,?___wmul+1
  2902  0009CA  0012               	return	
  2903  0009CC                     __end_of___wmul:
  2904                           	opt stack 0
  2905                           tblptru	equ	0xFF8
  2906                           tblptrh	equ	0xFF7
  2907                           tblptrl	equ	0xFF6
  2908                           tablat	equ	0xFF5
  2909                           prodh	equ	0xFF4
  2910                           prodl	equ	0xFF3
  2911                           intcon	equ	0xFF2
  2912                           postinc0	equ	0xFEE
  2913                           wreg	equ	0xFE8
  2914                           postdec1	equ	0xFE5
  2915                           fsr1l	equ	0xFE1
  2916                           indf2	equ	0xFDF
  2917                           postinc2	equ	0xFDE
  2918                           postdec2	equ	0xFDD
  2919                           fsr2h	equ	0xFDA
  2920                           fsr2l	equ	0xFD9
  2921                           status	equ	0xFD8
  2922                           
  2923 ;; *************** function _AboveTableStart *****************
  2924 ;; Defined at:
  2925 ;;		line 1165 in file "position.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;		None
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;		None
  2930 ;; Return value:  Size  Location     Type
  2931 ;;		None               void
  2932 ;; Registers used:
  2933 ;;		wreg, status,2, status,0, cstack
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;Total ram usage:        0 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    4
  2946 ;; This function calls:
  2947 ;;		_ActThrottle
  2948 ;; This function is called by:
  2949 ;;		_CheckThrottle
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text23
  2954  000474                     __ptext23:
  2955                           	opt stack 0
  2956  000474                     _AboveTableStart:
  2957                           	opt stack 25
  2958                           
  2959                           ;position.c: 1167: if (a_frame[0].height <= cm120 && a_frame[0].height >= cm80) {
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;incstack = 0
  2963  000474  5007               	movf	_a_frame+6,w,c
  2964  000476  0100               	movlb	0	; () banked
  2965  000478  5DF5               	subwf	_cm120& (0+255),w,b
  2966  00047A  5008               	movf	_a_frame+7,w,c
  2967  00047C  0100               	movlb	0	; () banked
  2968  00047E  59F6               	subwfb	(_cm120+1)& (0+255),w,b
  2969  000480  A0D8               	btfss	status,0,c
  2970  000482  D00A               	goto	l3566
  2971                           
  2972                           ; BSR set to: 0
  2973  000484  5048               	movf	_cm80,w,c
  2974  000486  5C07               	subwf	_a_frame+6,w,c
  2975  000488  5049               	movf	_cm80+1,w,c
  2976  00048A  5808               	subwfb	_a_frame+7,w,c
  2977  00048C  A0D8               	btfss	status,0,c
  2978  00048E  D004               	goto	l3566
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;position.c: 1168: ActThrottle(0);
  2982  000490  0E00               	movlw	0
  2983  000492  EC8C  F004         	call	_ActThrottle
  2984                           
  2985                           ;position.c: 1170: } else if (a_frame[0].height < cm80) {
  2986  000496  0012               	return	
  2987  000498                     l3566:
  2988  000498  5048               	movf	_cm80,w,c
  2989  00049A  5C07               	subwf	_a_frame+6,w,c
  2990  00049C  5049               	movf	_cm80+1,w,c
  2991  00049E  5808               	subwfb	_a_frame+7,w,c
  2992  0004A0  B0D8               	btfsc	status,0,c
  2993  0004A2  D03E               	goto	l3590
  2994                           
  2995                           ;position.c: 1171: if (a_frame[0].height < cm50) {
  2996  0004A4  5046               	movf	_cm50,w,c
  2997  0004A6  5C07               	subwf	_a_frame+6,w,c
  2998  0004A8  5047               	movf	_cm50+1,w,c
  2999  0004AA  5808               	subwfb	_a_frame+7,w,c
  3000  0004AC  B0D8               	btfsc	status,0,c
  3001  0004AE  D01C               	goto	l3580
  3002                           
  3003                           ;position.c: 1172: if (a_frame_dif[0].dif_height >= - 46) {
  3004  0004B0  AE1C               	btfss	_a_frame_dif+7,7,c
  3005  0004B2  D006               	goto	l3572
  3006  0004B4  0ED2               	movlw	210
  3007  0004B6  5C1B               	subwf	_a_frame_dif+6,w,c
  3008  0004B8  0EFF               	movlw	255
  3009  0004BA  581C               	subwfb	_a_frame_dif+7,w,c
  3010  0004BC  A0D8               	btfss	status,0,c
  3011  0004BE  D010               	goto	l3578
  3012  0004C0                     l3572:
  3013                           
  3014                           ;position.c: 1173: if (a_frame_dif[0].dif_height >= - 23) {
  3015  0004C0  AE1C               	btfss	_a_frame_dif+7,7,c
  3016  0004C2  D006               	goto	l3574
  3017  0004C4  0EE9               	movlw	233
  3018  0004C6  5C1B               	subwf	_a_frame_dif+6,w,c
  3019  0004C8  0EFF               	movlw	255
  3020  0004CA  581C               	subwfb	_a_frame_dif+7,w,c
  3021  0004CC  A0D8               	btfss	status,0,c
  3022  0004CE  D004               	goto	l3576
  3023  0004D0                     l3574:
  3024                           
  3025                           ;position.c: 1174: ActThrottle(6);
  3026  0004D0  0E06               	movlw	6
  3027  0004D2  EC8C  F004         	call	_ActThrottle
  3028                           
  3029                           ;position.c: 1175: } else {
  3030  0004D6  0012               	return	
  3031  0004D8                     l3576:
  3032                           
  3033                           ;position.c: 1176: ActThrottle(0);
  3034  0004D8  0E00               	movlw	0
  3035  0004DA  EC8C  F004         	call	_ActThrottle
  3036                           
  3037                           ;position.c: 1177: }
  3038                           ;position.c: 1178: } else {
  3039  0004DE  0012               	return	
  3040  0004E0                     l3578:
  3041                           
  3042                           ;position.c: 1179: ActThrottle(-3);
  3043  0004E0  0EFD               	movlw	253
  3044  0004E2  EC8C  F004         	call	_ActThrottle
  3045                           
  3046                           ;position.c: 1180: }
  3047                           ;position.c: 1181: } else {
  3048  0004E6  0012               	return	
  3049  0004E8                     l3580:
  3050                           
  3051                           ;position.c: 1182: if (a_frame_dif[0].dif_height >= - 46) {
  3052  0004E8  AE1C               	btfss	_a_frame_dif+7,7,c
  3053  0004EA  D006               	goto	l3582
  3054  0004EC  0ED2               	movlw	210
  3055  0004EE  5C1B               	subwf	_a_frame_dif+6,w,c
  3056  0004F0  0EFF               	movlw	255
  3057  0004F2  581C               	subwfb	_a_frame_dif+7,w,c
  3058  0004F4  A0D8               	btfss	status,0,c
  3059  0004F6  D010               	goto	l3588
  3060  0004F8                     l3582:
  3061                           
  3062                           ;position.c: 1183: if (a_frame_dif[0].dif_height >= - 23) {
  3063  0004F8  AE1C               	btfss	_a_frame_dif+7,7,c
  3064  0004FA  D006               	goto	l3584
  3065  0004FC  0EE9               	movlw	233
  3066  0004FE  5C1B               	subwf	_a_frame_dif+6,w,c
  3067  000500  0EFF               	movlw	255
  3068  000502  581C               	subwfb	_a_frame_dif+7,w,c
  3069  000504  A0D8               	btfss	status,0,c
  3070  000506  D004               	goto	l3586
  3071  000508                     l3584:
  3072                           
  3073                           ;position.c: 1184: ActThrottle(3);
  3074  000508  0E03               	movlw	3
  3075  00050A  EC8C  F004         	call	_ActThrottle
  3076                           
  3077                           ;position.c: 1185: } else {
  3078  00050E  0012               	return	
  3079  000510                     l3586:
  3080                           
  3081                           ;position.c: 1186: ActThrottle(0);
  3082  000510  0E00               	movlw	0
  3083  000512  EC8C  F004         	call	_ActThrottle
  3084                           
  3085                           ;position.c: 1187: }
  3086                           ;position.c: 1188: } else {
  3087  000516  0012               	return	
  3088  000518                     l3588:
  3089                           
  3090                           ;position.c: 1189: ActThrottle(-3);
  3091  000518  0EFD               	movlw	253
  3092  00051A  EC8C  F004         	call	_ActThrottle
  3093                           
  3094                           ;position.c: 1190: }
  3095                           ;position.c: 1191: }
  3096                           ;position.c: 1193: } else {
  3097  00051E  0012               	return	
  3098  000520                     l3590:
  3099                           
  3100                           ;position.c: 1194: if (a_frame_dif[0].dif_height <= 46) {
  3101  000520  BE1C               	btfsc	_a_frame_dif+7,7,c
  3102  000522  D006               	goto	l3592
  3103  000524  501C               	movf	_a_frame_dif+7,w,c
  3104  000526  E114               	bnz	l3598
  3105  000528  0E2F               	movlw	47
  3106  00052A  5C1B               	subwf	_a_frame_dif+6,w,c
  3107  00052C  B0D8               	btfsc	status,0,c
  3108  00052E  D010               	goto	l3598
  3109  000530                     l3592:
  3110                           
  3111                           ;position.c: 1195: if (a_frame_dif[0].dif_height <= 23) {
  3112  000530  BE1C               	btfsc	_a_frame_dif+7,7,c
  3113  000532  D006               	goto	l3594
  3114  000534  501C               	movf	_a_frame_dif+7,w,c
  3115  000536  E108               	bnz	l3596
  3116  000538  0E18               	movlw	24
  3117  00053A  5C1B               	subwf	_a_frame_dif+6,w,c
  3118  00053C  B0D8               	btfsc	status,0,c
  3119  00053E  D004               	goto	l3596
  3120  000540                     l3594:
  3121                           
  3122                           ;position.c: 1196: ActThrottle(-3);
  3123  000540  0EFD               	movlw	253
  3124  000542  EC8C  F004         	call	_ActThrottle
  3125                           
  3126                           ;position.c: 1197: } else {
  3127  000546  0012               	return	
  3128  000548                     l3596:
  3129                           
  3130                           ;position.c: 1198: ActThrottle(0);
  3131  000548  0E00               	movlw	0
  3132  00054A  EC8C  F004         	call	_ActThrottle
  3133                           
  3134                           ;position.c: 1199: }
  3135                           ;position.c: 1200: } else {
  3136  00054E  0012               	return	
  3137  000550                     l3598:
  3138                           
  3139                           ;position.c: 1201: ActThrottle(3);
  3140  000550  0E03               	movlw	3
  3141  000552  EC8C  F004         	call	_ActThrottle
  3142  000556  0012               	return	
  3143  000558                     __end_of_AboveTableStart:
  3144                           	opt stack 0
  3145                           tblptru	equ	0xFF8
  3146                           tblptrh	equ	0xFF7
  3147                           tblptrl	equ	0xFF6
  3148                           tablat	equ	0xFF5
  3149                           prodh	equ	0xFF4
  3150                           prodl	equ	0xFF3
  3151                           intcon	equ	0xFF2
  3152                           postinc0	equ	0xFEE
  3153                           wreg	equ	0xFE8
  3154                           postdec1	equ	0xFE5
  3155                           fsr1l	equ	0xFE1
  3156                           indf2	equ	0xFDF
  3157                           postinc2	equ	0xFDE
  3158                           postdec2	equ	0xFDD
  3159                           fsr2h	equ	0xFDA
  3160                           fsr2l	equ	0xFD9
  3161                           status	equ	0xFD8
  3162                           
  3163 ;; *************** function _AboveTableLand *****************
  3164 ;; Defined at:
  3165 ;;		line 1216 in file "position.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;		None
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  i               2    4[BANK0 ] int 
  3170 ;;  i               2   10[BANK0 ] int 
  3171 ;;  i               2    8[BANK0 ] int 
  3172 ;;  tmp             2    6[BANK0 ] int 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;		None               void
  3175 ;; Registers used:
  3176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3183 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3185 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3186 ;;Total ram usage:       12 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:    4
  3189 ;; This function calls:
  3190 ;;		_ActThrottle
  3191 ;; This function is called by:
  3192 ;;		_CheckThrottle
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           	psect	text24
  3197  0000A0                     __ptext24:
  3198                           	opt stack 0
  3199  0000A0                     _AboveTableLand:
  3200                           	opt stack 25
  3201                           
  3202                           ;position.c: 1217: if (a_frame[0].height >= 30) {
  3203                           
  3204                           ;incstack = 0
  3205  0000A0  5008               	movf	_a_frame+7,w,c
  3206  0000A2  E104               	bnz	u3010
  3207  0000A4  0E1E               	movlw	30
  3208  0000A6  5C07               	subwf	_a_frame+6,w,c
  3209  0000A8  A0D8               	btfss	status,0,c
  3210  0000AA  D026               	goto	l1126
  3211  0000AC                     u3010:
  3212                           
  3213                           ;position.c: 1218: if (a_frame[1].height > a_frame[0].height) {
  3214  0000AC  5011               	movf	_a_frame+16,w,c
  3215  0000AE  5C07               	subwf	_a_frame+6,w,c
  3216  0000B0  5012               	movf	_a_frame+17,w,c
  3217  0000B2  5808               	subwfb	_a_frame+7,w,c
  3218  0000B4  B0D8               	btfsc	status,0,c
  3219  0000B6  D01C               	goto	l3614
  3220                           
  3221                           ;position.c: 1220: if (a_frame_dif[0].dif_height <= 46) {
  3222  0000B8  BE1C               	btfsc	_a_frame_dif+7,7,c
  3223  0000BA  D006               	goto	l3606
  3224  0000BC  501C               	movf	_a_frame_dif+7,w,c
  3225  0000BE  E114               	bnz	l3612
  3226  0000C0  0E2F               	movlw	47
  3227  0000C2  5C1B               	subwf	_a_frame_dif+6,w,c
  3228  0000C4  B0D8               	btfsc	status,0,c
  3229  0000C6  D010               	goto	l3612
  3230  0000C8                     l3606:
  3231                           
  3232                           ;position.c: 1221: if (a_frame_dif[0].dif_height <= 23) {
  3233  0000C8  BE1C               	btfsc	_a_frame_dif+7,7,c
  3234  0000CA  D006               	goto	l3608
  3235  0000CC  501C               	movf	_a_frame_dif+7,w,c
  3236  0000CE  E108               	bnz	l3610
  3237  0000D0  0E18               	movlw	24
  3238  0000D2  5C1B               	subwf	_a_frame_dif+6,w,c
  3239  0000D4  B0D8               	btfsc	status,0,c
  3240  0000D6  D004               	goto	l3610
  3241  0000D8                     l3608:
  3242                           
  3243                           ;position.c: 1223: ActThrottle(-3);
  3244  0000D8  0EFD               	movlw	253
  3245  0000DA  EC8C  F004         	call	_ActThrottle
  3246                           
  3247                           ;position.c: 1224: } else {
  3248  0000DE  0012               	return	
  3249  0000E0                     l3610:
  3250                           
  3251                           ;position.c: 1225: ActThrottle(0);
  3252  0000E0  0E00               	movlw	0
  3253  0000E2  EC8C  F004         	call	_ActThrottle
  3254                           
  3255                           ;position.c: 1226: }
  3256                           ;position.c: 1227: } else {
  3257  0000E6  0012               	return	
  3258  0000E8                     l3612:
  3259                           
  3260                           ;position.c: 1228: ActThrottle(3);
  3261  0000E8  0E03               	movlw	3
  3262  0000EA  EC8C  F004         	call	_ActThrottle
  3263                           
  3264                           ;position.c: 1229: }
  3265                           ;position.c: 1230: } else {
  3266  0000EE  0012               	return	
  3267  0000F0                     l3614:
  3268                           
  3269                           ;position.c: 1232: ActThrottle(-3);
  3270  0000F0  0EFD               	movlw	253
  3271  0000F2  EC8C  F004         	call	_ActThrottle
  3272                           
  3273                           ;position.c: 1233: }
  3274                           ;position.c: 1234: } else {
  3275  0000F6  0012               	return	
  3276  0000F8                     l1126:
  3277                           
  3278                           ;position.c: 1239: if (direction == 1) {
  3279  0000F8  A04B               	btfss	_direction/(0+8),_direction& (0+7),c
  3280  0000FA  D002               	goto	l1134
  3281                           
  3282                           ;position.c: 1240: direction = 0;
  3283  0000FC  904B               	bcf	_direction/(0+8),_direction& (0+7),c
  3284                           
  3285                           ;position.c: 1241: } else {
  3286  0000FE  D001               	goto	l3618
  3287  000100                     l1134:
  3288                           
  3289                           ;position.c: 1242: direction = 1;
  3290  000100  804B               	bsf	_direction/(0+8),_direction& (0+7),c
  3291  000102                     l3618:
  3292                           
  3293                           ;position.c: 1243: }
  3294                           ;position.c: 1244: int tmp = c_path - 1;
  3295  000102  0EFF               	movlw	255
  3296  000104  2442               	addwf	_c_path,w,c
  3297  000106  0100               	movlb	0	; () banked
  3298  000108  6FE8               	movwf	AboveTableLand@tmp& (0+255),b
  3299  00010A  0EFF               	movlw	255
  3300  00010C  2043               	addwfc	_c_path+1,w,c
  3301  00010E  0100               	movlb	0	; () banked
  3302  000110  6FE9               	movwf	(AboveTableLand@tmp+1)& (0+255),b
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;position.c: 1245: for (int i = 0; i <= tmp; i++) {
  3306  000112  0E00               	movlw	0
  3307  000114  0100               	movlb	0	; () banked
  3308  000116  6FEB               	movwf	(AboveTableLand@i+1)& (0+255),b
  3309  000118  0E00               	movlw	0
  3310  00011A  6FEA               	movwf	AboveTableLand@i& (0+255),b
  3311  00011C  D047               	goto	l1136
  3312  00011E                     l3622:
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;position.c: 1246: a_path_old[i].higher_cc = a_path[i].higher_cc;
  3316  00011E  C0EA  F0E2         	movff	AboveTableLand@i,??_AboveTableLand
  3317  000122  C0EB  F0E3         	movff	AboveTableLand@i+1,??_AboveTableLand+1
  3318  000126  90D8               	bcf	status,0,c
  3319  000128  0100               	movlb	0	; () banked
  3320  00012A  37E2               	rlcf	??_AboveTableLand& (0+255),f,b
  3321  00012C  37E3               	rlcf	(??_AboveTableLand+1)& (0+255),f,b
  3322  00012E  0E01               	movlw	1
  3323  000130  0100               	movlb	0	; () banked
  3324  000132  27E2               	addwf	??_AboveTableLand& (0+255),f,b
  3325  000134  0E00               	movlw	0
  3326  000136  23E3               	addwfc	(??_AboveTableLand+1)& (0+255),f,b
  3327  000138  0EA6               	movlw	low _a_path
  3328  00013A  0100               	movlb	0	; () banked
  3329  00013C  25E2               	addwf	??_AboveTableLand& (0+255),w,b
  3330  00013E  6ED9               	movwf	fsr2l,c
  3331  000140  0E00               	movlw	high _a_path
  3332  000142  0100               	movlb	0	; () banked
  3333  000144  21E3               	addwfc	(??_AboveTableLand+1)& (0+255),w,b
  3334  000146  6EDA               	movwf	fsr2h,c
  3335  000148  C0EA  F0E4         	movff	AboveTableLand@i,??_AboveTableLand+2
  3336  00014C  C0EB  F0E5         	movff	AboveTableLand@i+1,??_AboveTableLand+3
  3337  000150  90D8               	bcf	status,0,c
  3338  000152  0100               	movlb	0	; () banked
  3339  000154  37E4               	rlcf	(??_AboveTableLand+2)& (0+255),f,b
  3340  000156  37E5               	rlcf	(??_AboveTableLand+3)& (0+255),f,b
  3341  000158  0E01               	movlw	1
  3342  00015A  0100               	movlb	0	; () banked
  3343  00015C  27E4               	addwf	(??_AboveTableLand+2)& (0+255),f,b
  3344  00015E  0E00               	movlw	0
  3345  000160  23E5               	addwfc	(??_AboveTableLand+3)& (0+255),f,b
  3346  000162  0E00               	movlw	low _a_path_old
  3347  000164  0100               	movlb	0	; () banked
  3348  000166  25E4               	addwf	(??_AboveTableLand+2)& (0+255),w,b
  3349  000168  6EE1               	movwf	fsr1l,c
  3350  00016A  0E01               	movlw	high _a_path_old
  3351  00016C  0100               	movlb	0	; () banked
  3352  00016E  21E5               	addwfc	(??_AboveTableLand+3)& (0+255),w,b
  3353  000170  6EE2               	movwf	fsr1h,c
  3354  000172  CFDF FFE7          	movff	indf2,indf1
  3355                           
  3356                           ; BSR set to: 0
  3357                           ;position.c: 1247: a_path_old[i].lower_cc = a_path[i].lower_cc;
  3358  000176  90D8               	bcf	status,0,c
  3359  000178  0100               	movlb	0	; () banked
  3360  00017A  35EA               	rlcf	AboveTableLand@i& (0+255),w,b
  3361  00017C  6ED9               	movwf	fsr2l,c
  3362  00017E  0100               	movlb	0	; () banked
  3363  000180  35EB               	rlcf	(AboveTableLand@i+1)& (0+255),w,b
  3364  000182  6EDA               	movwf	fsr2h,c
  3365  000184  0EA6               	movlw	low _a_path
  3366  000186  26D9               	addwf	fsr2l,f,c
  3367  000188  0E00               	movlw	high _a_path
  3368  00018A  22DA               	addwfc	fsr2h,f,c
  3369  00018C  90D8               	bcf	status,0,c
  3370  00018E  0100               	movlb	0	; () banked
  3371  000190  35EA               	rlcf	AboveTableLand@i& (0+255),w,b
  3372  000192  6EE1               	movwf	fsr1l,c
  3373  000194  0100               	movlb	0	; () banked
  3374  000196  35EB               	rlcf	(AboveTableLand@i+1)& (0+255),w,b
  3375  000198  6EE2               	movwf	fsr1h,c
  3376  00019A  0E00               	movlw	low _a_path_old
  3377  00019C  26E1               	addwf	fsr1l,f,c
  3378  00019E  0E01               	movlw	high _a_path_old
  3379  0001A0  22E2               	addwfc	fsr1h,f,c
  3380  0001A2  CFDF FFE7          	movff	indf2,indf1
  3381                           
  3382                           ; BSR set to: 0
  3383  0001A6  0100               	movlb	0	; () banked
  3384  0001A8  4BEA               	infsnz	AboveTableLand@i& (0+255),f,b
  3385  0001AA  2BEB               	incf	(AboveTableLand@i+1)& (0+255),f,b
  3386  0001AC                     l1136:
  3387                           
  3388                           ; BSR set to: 0
  3389  0001AC  0100               	movlb	0	; () banked
  3390  0001AE  51EA               	movf	AboveTableLand@i& (0+255),w,b
  3391  0001B0  0100               	movlb	0	; () banked
  3392  0001B2  5DE8               	subwf	AboveTableLand@tmp& (0+255),w,b
  3393  0001B4  0100               	movlb	0	; () banked
  3394  0001B6  51E9               	movf	(AboveTableLand@tmp+1)& (0+255),w,b
  3395  0001B8  0A80               	xorlw	128
  3396  0001BA  0100               	movlb	0	; () banked
  3397  0001BC  6FE2               	movwf	??_AboveTableLand& (0+255),b
  3398  0001BE  0100               	movlb	0	; () banked
  3399  0001C0  51EB               	movf	(AboveTableLand@i+1)& (0+255),w,b
  3400  0001C2  0A80               	xorlw	128
  3401  0001C4  0100               	movlb	0	; () banked
  3402  0001C6  59E2               	subwfb	??_AboveTableLand& (0+255),w,b
  3403  0001C8  B0D8               	btfsc	status,0,c
  3404  0001CA  D7A9               	goto	l3622
  3405                           
  3406                           ; BSR set to: 0
  3407                           ;position.c: 1248: }
  3408                           ;position.c: 1249: for (int i = 0; i <= tmp; i++) {
  3409                           
  3410                           ; BSR set to: 0
  3411  0001CC  0E00               	movlw	0
  3412  0001CE  0100               	movlb	0	; () banked
  3413  0001D0  6FED               	movwf	(AboveTableLand@i_2161+1)& (0+255),b
  3414  0001D2  0E00               	movlw	0
  3415  0001D4  6FEC               	movwf	AboveTableLand@i_2161& (0+255),b
  3416  0001D6  D066               	goto	l3634
  3417  0001D8                     l3630:
  3418                           
  3419                           ; BSR set to: 0
  3420                           ;position.c: 1250: a_path[(tmp - i)].higher_cc = a_path_old[i].higher_cc;
  3421  0001D8  C0EC  F0E2         	movff	AboveTableLand@i_2161,??_AboveTableLand
  3422  0001DC  C0ED  F0E3         	movff	AboveTableLand@i_2161+1,??_AboveTableLand+1
  3423  0001E0  90D8               	bcf	status,0,c
  3424  0001E2  0100               	movlb	0	; () banked
  3425  0001E4  37E2               	rlcf	??_AboveTableLand& (0+255),f,b
  3426  0001E6  37E3               	rlcf	(??_AboveTableLand+1)& (0+255),f,b
  3427  0001E8  0E01               	movlw	1
  3428  0001EA  0100               	movlb	0	; () banked
  3429  0001EC  27E2               	addwf	??_AboveTableLand& (0+255),f,b
  3430  0001EE  0E00               	movlw	0
  3431  0001F0  23E3               	addwfc	(??_AboveTableLand+1)& (0+255),f,b
  3432  0001F2  0E00               	movlw	low _a_path_old
  3433  0001F4  0100               	movlb	0	; () banked
  3434  0001F6  25E2               	addwf	??_AboveTableLand& (0+255),w,b
  3435  0001F8  6ED9               	movwf	fsr2l,c
  3436  0001FA  0E01               	movlw	high _a_path_old
  3437  0001FC  0100               	movlb	0	; () banked
  3438  0001FE  21E3               	addwfc	(??_AboveTableLand+1)& (0+255),w,b
  3439  000200  6EDA               	movwf	fsr2h,c
  3440  000202  C0EC  F0E4         	movff	AboveTableLand@i_2161,??_AboveTableLand+2
  3441  000206  C0ED  F0E5         	movff	AboveTableLand@i_2161+1,??_AboveTableLand+3
  3442  00020A  0100               	movlb	0	; () banked
  3443  00020C  1FE4               	comf	(??_AboveTableLand+2)& (0+255),f,b
  3444  00020E  1FE5               	comf	(??_AboveTableLand+3)& (0+255),f,b
  3445  000210  4BE4               	infsnz	(??_AboveTableLand+2)& (0+255),f,b
  3446  000212  2BE5               	incf	(??_AboveTableLand+3)& (0+255),f,b
  3447  000214  0100               	movlb	0	; () banked
  3448  000216  51E8               	movf	AboveTableLand@tmp& (0+255),w,b
  3449  000218  0100               	movlb	0	; () banked
  3450  00021A  27E4               	addwf	(??_AboveTableLand+2)& (0+255),f,b
  3451  00021C  0100               	movlb	0	; () banked
  3452  00021E  51E9               	movf	(AboveTableLand@tmp+1)& (0+255),w,b
  3453  000220  0100               	movlb	0	; () banked
  3454  000222  23E5               	addwfc	(??_AboveTableLand+3)& (0+255),f,b
  3455  000224  90D8               	bcf	status,0,c
  3456  000226  0100               	movlb	0	; () banked
  3457  000228  37E4               	rlcf	(??_AboveTableLand+2)& (0+255),f,b
  3458  00022A  37E5               	rlcf	(??_AboveTableLand+3)& (0+255),f,b
  3459  00022C  0E01               	movlw	1
  3460  00022E  0100               	movlb	0	; () banked
  3461  000230  27E4               	addwf	(??_AboveTableLand+2)& (0+255),f,b
  3462  000232  0E00               	movlw	0
  3463  000234  23E5               	addwfc	(??_AboveTableLand+3)& (0+255),f,b
  3464  000236  0EA6               	movlw	low _a_path
  3465  000238  0100               	movlb	0	; () banked
  3466  00023A  25E4               	addwf	(??_AboveTableLand+2)& (0+255),w,b
  3467  00023C  6EE1               	movwf	fsr1l,c
  3468  00023E  0E00               	movlw	high _a_path
  3469  000240  0100               	movlb	0	; () banked
  3470  000242  21E5               	addwfc	(??_AboveTableLand+3)& (0+255),w,b
  3471  000244  6EE2               	movwf	fsr1h,c
  3472  000246  CFDF FFE7          	movff	indf2,indf1
  3473                           
  3474                           ;position.c: 1251: a_path[(tmp - i)].lower_cc = a_path_old[i].lower_cc;
  3475  00024A  90D8               	bcf	status,0,c
  3476  00024C  0100               	movlb	0	; () banked
  3477  00024E  35EC               	rlcf	AboveTableLand@i_2161& (0+255),w,b
  3478  000250  6ED9               	movwf	fsr2l,c
  3479  000252  0100               	movlb	0	; () banked
  3480  000254  35ED               	rlcf	(AboveTableLand@i_2161+1)& (0+255),w,b
  3481  000256  6EDA               	movwf	fsr2h,c
  3482  000258  0E00               	movlw	low _a_path_old
  3483  00025A  26D9               	addwf	fsr2l,f,c
  3484  00025C  0E01               	movlw	high _a_path_old
  3485  00025E  22DA               	addwfc	fsr2h,f,c
  3486  000260  C0EC  F0E2         	movff	AboveTableLand@i_2161,??_AboveTableLand
  3487  000264  C0ED  F0E3         	movff	AboveTableLand@i_2161+1,??_AboveTableLand+1
  3488  000268  0100               	movlb	0	; () banked
  3489  00026A  1FE2               	comf	??_AboveTableLand& (0+255),f,b
  3490  00026C  1FE3               	comf	(??_AboveTableLand+1)& (0+255),f,b
  3491  00026E  4BE2               	infsnz	??_AboveTableLand& (0+255),f,b
  3492  000270  2BE3               	incf	(??_AboveTableLand+1)& (0+255),f,b
  3493  000272  0100               	movlb	0	; () banked
  3494  000274  51E8               	movf	AboveTableLand@tmp& (0+255),w,b
  3495  000276  0100               	movlb	0	; () banked
  3496  000278  27E2               	addwf	??_AboveTableLand& (0+255),f,b
  3497  00027A  0100               	movlb	0	; () banked
  3498  00027C  51E9               	movf	(AboveTableLand@tmp+1)& (0+255),w,b
  3499  00027E  0100               	movlb	0	; () banked
  3500  000280  23E3               	addwfc	(??_AboveTableLand+1)& (0+255),f,b
  3501  000282  90D8               	bcf	status,0,c
  3502  000284  0100               	movlb	0	; () banked
  3503  000286  37E2               	rlcf	??_AboveTableLand& (0+255),f,b
  3504  000288  37E3               	rlcf	(??_AboveTableLand+1)& (0+255),f,b
  3505  00028A  0EA6               	movlw	low _a_path
  3506  00028C  0100               	movlb	0	; () banked
  3507  00028E  25E2               	addwf	??_AboveTableLand& (0+255),w,b
  3508  000290  6EE1               	movwf	fsr1l,c
  3509  000292  0E00               	movlw	high _a_path
  3510  000294  0100               	movlb	0	; () banked
  3511  000296  21E3               	addwfc	(??_AboveTableLand+1)& (0+255),w,b
  3512  000298  6EE2               	movwf	fsr1h,c
  3513  00029A  CFDF FFE7          	movff	indf2,indf1
  3514                           
  3515                           ; BSR set to: 0
  3516  00029E  0100               	movlb	0	; () banked
  3517  0002A0  4BEC               	infsnz	AboveTableLand@i_2161& (0+255),f,b
  3518  0002A2  2BED               	incf	(AboveTableLand@i_2161+1)& (0+255),f,b
  3519  0002A4                     l3634:
  3520                           
  3521                           ; BSR set to: 0
  3522  0002A4  0100               	movlb	0	; () banked
  3523  0002A6  51EC               	movf	AboveTableLand@i_2161& (0+255),w,b
  3524  0002A8  0100               	movlb	0	; () banked
  3525  0002AA  5DE8               	subwf	AboveTableLand@tmp& (0+255),w,b
  3526  0002AC  0100               	movlb	0	; () banked
  3527  0002AE  51E9               	movf	(AboveTableLand@tmp+1)& (0+255),w,b
  3528  0002B0  0A80               	xorlw	128
  3529  0002B2  0100               	movlb	0	; () banked
  3530  0002B4  6FE2               	movwf	??_AboveTableLand& (0+255),b
  3531  0002B6  0100               	movlb	0	; () banked
  3532  0002B8  51ED               	movf	(AboveTableLand@i_2161+1)& (0+255),w,b
  3533  0002BA  0A80               	xorlw	128
  3534  0002BC  0100               	movlb	0	; () banked
  3535  0002BE  59E2               	subwfb	??_AboveTableLand& (0+255),w,b
  3536  0002C0  B0D8               	btfsc	status,0,c
  3537  0002C2  D78A               	goto	l3630
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;position.c: 1252: }
  3541                           ;position.c: 1254: for (int i = 0; i <= 10000; i++) {
  3542                           
  3543                           ; BSR set to: 0
  3544  0002C4  0E00               	movlw	0
  3545  0002C6  0100               	movlb	0	; () banked
  3546  0002C8  6FE7               	movwf	(AboveTableLand@i_2162+1)& (0+255),b
  3547  0002CA  0E00               	movlw	0
  3548  0002CC  6FE6               	movwf	AboveTableLand@i_2162& (0+255),b
  3549  0002CE                     l3638:
  3550                           
  3551                           ; BSR set to: 0
  3552  0002CE  0100               	movlb	0	; () banked
  3553  0002D0  BFE7               	btfsc	(AboveTableLand@i_2162+1)& (0+255),7,b
  3554  0002D2  D008               	goto	l3642
  3555  0002D4  0E11               	movlw	17
  3556  0002D6  0100               	movlb	0	; () banked
  3557  0002D8  5DE6               	subwf	AboveTableLand@i_2162& (0+255),w,b
  3558  0002DA  0E27               	movlw	39
  3559  0002DC  0100               	movlb	0	; () banked
  3560  0002DE  59E7               	subwfb	(AboveTableLand@i_2162+1)& (0+255),w,b
  3561  0002E0  B0D8               	btfsc	status,0,c
  3562  0002E2  0012               	return	
  3563  0002E4                     l3642:
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;position.c: 1255: _delay((unsigned long)((3)*(16000000/4000.0)));
  3567  0002E4  0E10               	movlw	16
  3568  0002E6  0100               	movlb	0	; () banked
  3569  0002E8  6FE2               	movwf	??_AboveTableLand& (0+255),b
  3570  0002EA  0E94               	movlw	148
  3571  0002EC                     u3307:
  3572  0002EC  2EE8               	decfsz	wreg,f,c
  3573  0002EE  D7FE               	goto	u3307
  3574  0002F0  2FE2               	decfsz	??_AboveTableLand& (0+255),f,b
  3575  0002F2  D7FC               	goto	u3307
  3576  0002F4  D000               	nop2	
  3577  0002F6  0100               	movlb	0	; () banked
  3578  0002F8  4BE6               	infsnz	AboveTableLand@i_2162& (0+255),f,b
  3579  0002FA  2BE7               	incf	(AboveTableLand@i_2162+1)& (0+255),f,b
  3580  0002FC  D7E8               	goto	l3638
  3581  0002FE                     __end_of_AboveTableLand:
  3582                           	opt stack 0
  3583                           tblptru	equ	0xFF8
  3584                           tblptrh	equ	0xFF7
  3585                           tblptrl	equ	0xFF6
  3586                           tablat	equ	0xFF5
  3587                           prodh	equ	0xFF4
  3588                           prodl	equ	0xFF3
  3589                           intcon	equ	0xFF2
  3590                           postinc0	equ	0xFEE
  3591                           wreg	equ	0xFE8
  3592                           indf1	equ	0xFE7
  3593                           postdec1	equ	0xFE5
  3594                           fsr1h	equ	0xFE2
  3595                           fsr1l	equ	0xFE1
  3596                           indf2	equ	0xFDF
  3597                           postinc2	equ	0xFDE
  3598                           postdec2	equ	0xFDD
  3599                           fsr2h	equ	0xFDA
  3600                           fsr2l	equ	0xFD9
  3601                           status	equ	0xFD8
  3602                           
  3603 ;; *************** function _AboveFloor *****************
  3604 ;; Defined at:
  3605 ;;		line 1267 in file "position.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;		None
  3610 ;; Return value:  Size  Location     Type
  3611 ;;		None               void
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, status,0, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3623 ;;Total ram usage:        0 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:    4
  3626 ;; This function calls:
  3627 ;;		_ActThrottle
  3628 ;; This function is called by:
  3629 ;;		_CheckThrottle
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           	psect	text25
  3634  0008C0                     __ptext25:
  3635                           	opt stack 0
  3636  0008C0                     _AboveFloor:
  3637                           	opt stack 25
  3638                           
  3639                           ;position.c: 1268: if (a_frame[0].height <= cm220 && a_frame[0].height >= cm180) {
  3640                           
  3641                           ;incstack = 0
  3642  0008C0  5007               	movf	_a_frame+6,w,c
  3643  0008C2  0100               	movlb	0	; () banked
  3644  0008C4  5DF7               	subwf	_cm220& (0+255),w,b
  3645  0008C6  5008               	movf	_a_frame+7,w,c
  3646  0008C8  0100               	movlb	0	; () banked
  3647  0008CA  59F8               	subwfb	(_cm220+1)& (0+255),w,b
  3648  0008CC  A0D8               	btfss	status,0,c
  3649  0008CE  D00A               	goto	l3652
  3650                           
  3651                           ; BSR set to: 0
  3652  0008D0  5044               	movf	_cm180,w,c
  3653  0008D2  5C07               	subwf	_a_frame+6,w,c
  3654  0008D4  5045               	movf	_cm180+1,w,c
  3655  0008D6  5808               	subwfb	_a_frame+7,w,c
  3656  0008D8  A0D8               	btfss	status,0,c
  3657  0008DA  D004               	goto	l3652
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;position.c: 1269: ActThrottle(0);
  3661  0008DC  0E00               	movlw	0
  3662  0008DE  EC8C  F004         	call	_ActThrottle
  3663                           
  3664                           ;position.c: 1270: } else if (a_frame[0].height < cm180) {
  3665  0008E2  0012               	return	
  3666  0008E4                     l3652:
  3667  0008E4  5044               	movf	_cm180,w,c
  3668  0008E6  5C07               	subwf	_a_frame+6,w,c
  3669  0008E8  5045               	movf	_cm180+1,w,c
  3670  0008EA  5808               	subwfb	_a_frame+7,w,c
  3671  0008EC  B0D8               	btfsc	status,0,c
  3672  0008EE  D010               	goto	l3660
  3673                           
  3674                           ;position.c: 1271: if (a_frame[0].height < cm100) {
  3675  0008F0  0100               	movlb	0	; () banked
  3676  0008F2  51F3               	movf	_cm100& (0+255),w,b
  3677  0008F4  5C07               	subwf	_a_frame+6,w,c
  3678  0008F6  0100               	movlb	0	; () banked
  3679  0008F8  51F4               	movf	(_cm100+1)& (0+255),w,b
  3680  0008FA  5808               	subwfb	_a_frame+7,w,c
  3681  0008FC  B0D8               	btfsc	status,0,c
  3682  0008FE  D004               	goto	l3658
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;position.c: 1272: ActThrottle(6);
  3686  000900  0E06               	movlw	6
  3687  000902  EC8C  F004         	call	_ActThrottle
  3688                           
  3689                           ;position.c: 1273: } else {
  3690  000906  0012               	return	
  3691  000908                     l3658:
  3692                           
  3693                           ;position.c: 1274: ActThrottle(3);
  3694  000908  0E03               	movlw	3
  3695  00090A  EC8C  F004         	call	_ActThrottle
  3696                           
  3697                           ;position.c: 1275: }
  3698                           ;position.c: 1276: } else {
  3699  00090E  0012               	return	
  3700  000910                     l3660:
  3701                           
  3702                           ;position.c: 1277: ActThrottle(-3);
  3703  000910  0EFD               	movlw	253
  3704  000912  EC8C  F004         	call	_ActThrottle
  3705  000916  0012               	return	
  3706  000918                     __end_of_AboveFloor:
  3707                           	opt stack 0
  3708                           tblptru	equ	0xFF8
  3709                           tblptrh	equ	0xFF7
  3710                           tblptrl	equ	0xFF6
  3711                           tablat	equ	0xFF5
  3712                           prodh	equ	0xFF4
  3713                           prodl	equ	0xFF3
  3714                           intcon	equ	0xFF2
  3715                           postinc0	equ	0xFEE
  3716                           wreg	equ	0xFE8
  3717                           indf1	equ	0xFE7
  3718                           postdec1	equ	0xFE5
  3719                           fsr1h	equ	0xFE2
  3720                           fsr1l	equ	0xFE1
  3721                           indf2	equ	0xFDF
  3722                           postinc2	equ	0xFDE
  3723                           postdec2	equ	0xFDD
  3724                           fsr2h	equ	0xFDA
  3725                           fsr2l	equ	0xFD9
  3726                           status	equ	0xFD8
  3727                           
  3728 ;; *************** function _ActThrottle *****************
  3729 ;; Defined at:
  3730 ;;		line 84 in file "actors.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  change          1    wreg     char 
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;  change          1   18[COMRAM] char 
  3735 ;; Return value:  Size  Location     Type
  3736 ;;		None               void
  3737 ;; Registers used:
  3738 ;;		wreg, status,2, status,0
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3745 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3747 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3748 ;;Total ram usage:        1 bytes
  3749 ;; Hardware stack levels used:    1
  3750 ;; Hardware stack levels required when called:    3
  3751 ;; This function calls:
  3752 ;;		Nothing
  3753 ;; This function is called by:
  3754 ;;		_AboveTableStart
  3755 ;;		_AboveTableLand
  3756 ;;		_AboveFloor
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           	psect	text26
  3761  000918                     __ptext26:
  3762                           	opt stack 0
  3763  000918                     _ActThrottle:
  3764                           	opt stack 25
  3765                           
  3766                           ;incstack = 0
  3767                           ;ActThrottle@change stored from wreg
  3768  000918  6E41               	movwf	ActThrottle@change,c
  3769                           
  3770                           ;actors.c: 85: if(a_actors[0].thro <= 550 || change < 0) {
  3771  00091A  0E27               	movlw	39
  3772  00091C  0100               	movlb	0	; () banked
  3773  00091E  5DD4               	subwf	(_a_actors+4)& (0+255),w,b
  3774  000920  0E02               	movlw	2
  3775  000922  0100               	movlb	0	; () banked
  3776  000924  59D5               	subwfb	(_a_actors+5)& (0+255),w,b
  3777  000926  B0D8               	btfsc	status,0,c
  3778                           
  3779                           ; BSR set to: 0
  3780  000928  BE41               	btfsc	ActThrottle@change,7,c
  3781  00092A  D001               	goto	l3476
  3782  00092C  D016               	goto	l100
  3783  00092E                     l3476:
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;actors.c: 86: a_actors[0].thro += change;
  3787  00092E  5041               	movf	ActThrottle@change,w,c
  3788  000930  0100               	movlb	0	; () banked
  3789  000932  27D4               	addwf	(_a_actors+4)& (0+255),f,b
  3790  000934  0E00               	movlw	0
  3791  000936  BE41               	btfsc	ActThrottle@change,7,c
  3792  000938  0EFF               	movlw	255
  3793  00093A  0100               	movlb	0	; () banked
  3794  00093C  23D5               	addwfc	(_a_actors+5)& (0+255),f,b
  3795                           
  3796                           ;actors.c: 87: if(a_actors[0].thro > 1050) {
  3797  00093E  0E1B               	movlw	27
  3798  000940  0100               	movlb	0	; () banked
  3799  000942  5DD4               	subwf	(_a_actors+4)& (0+255),w,b
  3800  000944  0E04               	movlw	4
  3801  000946  0100               	movlb	0	; () banked
  3802  000948  59D5               	subwfb	(_a_actors+5)& (0+255),w,b
  3803  00094A  A0D8               	btfss	status,0,c
  3804  00094C  0012               	return	
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;actors.c: 89: a_actors[0].thro = 0;
  3808  00094E  0E00               	movlw	0
  3809  000950  0100               	movlb	0	; () banked
  3810  000952  6FD5               	movwf	(_a_actors+5)& (0+255),b
  3811  000954  0E00               	movlw	0
  3812  000956  6FD4               	movwf	(_a_actors+4)& (0+255),b
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;actors.c: 90: }
  3816                           ;actors.c: 91: }else {
  3817  000958  0012               	return	
  3818  00095A                     l100:
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;actors.c: 92: __nop();
  3822  00095A  F000               	nop	
  3823  00095C  0012               	return	
  3824  00095E                     __end_of_ActThrottle:
  3825                           	opt stack 0
  3826                           tblptru	equ	0xFF8
  3827                           tblptrh	equ	0xFF7
  3828                           tblptrl	equ	0xFF6
  3829                           tablat	equ	0xFF5
  3830                           prodh	equ	0xFF4
  3831                           prodl	equ	0xFF3
  3832                           intcon	equ	0xFF2
  3833                           postinc0	equ	0xFEE
  3834                           wreg	equ	0xFE8
  3835                           indf1	equ	0xFE7
  3836                           postdec1	equ	0xFE5
  3837                           fsr1h	equ	0xFE2
  3838                           fsr1l	equ	0xFE1
  3839                           indf2	equ	0xFDF
  3840                           postinc2	equ	0xFDE
  3841                           postdec2	equ	0xFDD
  3842                           fsr2h	equ	0xFDA
  3843                           fsr2l	equ	0xFD9
  3844                           status	equ	0xFD8
  3845                           
  3846 ;; *************** function _Isr *****************
  3847 ;; Defined at:
  3848 ;;		line 30 in file "interrupt.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;		None
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;		None               void
  3855 ;; Registers used:
  3856 ;;		wreg, status,2, status,0, cstack
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3864 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3865 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3866 ;;Total ram usage:       14 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; Hardware stack levels required when called:    2
  3869 ;; This function calls:
  3870 ;;		_ModeCheck
  3871 ;;		_SignalOut
  3872 ;; This function is called by:
  3873 ;;		Interrupt level 2
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	intcode
  3878  000008                     __pintcode:
  3879                           	opt stack 0
  3880  000008                     _Isr:
  3881                           	opt stack 25
  3882                           
  3883                           ;incstack = 0
  3884  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3885  00000A  CFFA F033          	movff	pclath,??_Isr
  3886  00000E  CFFB F034          	movff	pclatu,??_Isr+1
  3887  000012  CFE9 F035          	movff	fsr0l,??_Isr+2
  3888  000016  CFEA F036          	movff	fsr0h,??_Isr+3
  3889  00001A  CFE1 F037          	movff	fsr1l,??_Isr+4
  3890  00001E  CFE2 F038          	movff	fsr1h,??_Isr+5
  3891  000022  CFD9 F039          	movff	fsr2l,??_Isr+6
  3892  000026  CFDA F03A          	movff	fsr2h,??_Isr+7
  3893  00002A  CFF3 F03B          	movff	prodl,??_Isr+8
  3894  00002E  CFF4 F03C          	movff	prodh,??_Isr+9
  3895  000032  CFF6 F03D          	movff	tblptrl,??_Isr+10
  3896  000036  CFF7 F03E          	movff	tblptrh,??_Isr+11
  3897  00003A  CFF8 F03F          	movff	tblptru,??_Isr+12
  3898  00003E  CFF5 F040          	movff	tablat,??_Isr+13
  3899                           
  3900                           ;interrupt.c: 31: if(CCP1IF == 1) {
  3901  000042  A49E               	btfss	3998,2,c	;volatile
  3902  000044  D005               	goto	i2l3086
  3903                           
  3904                           ;interrupt.c: 32: CCP1IF = 0;
  3905  000046  949E               	bcf	3998,2,c	;volatile
  3906                           
  3907                           ;interrupt.c: 33: T1CONbits.TMR1ON = 0;
  3908  000048  90CD               	bcf	4045,0,c	;volatile
  3909                           
  3910                           ;interrupt.c: 34: SignalOut();
  3911  00004A  EC14  F003         	call	_SignalOut	;wreg free
  3912                           
  3913                           ;interrupt.c: 35: __nop();
  3914  00004E  F000               	nop	
  3915  000050                     i2l3086:
  3916                           
  3917                           ;interrupt.c: 36: }
  3918                           ;interrupt.c: 37: if(TMR3GIF == 1) {
  3919  000050  A2A4               	btfss	4004,1,c	;volatile
  3920  000052  D006               	goto	i2l542
  3921                           
  3922                           ;interrupt.c: 38: TMR3GIF = 0;
  3923  000054  92A4               	bcf	4004,1,c	;volatile
  3924                           
  3925                           ;interrupt.c: 39: ModeCheck();
  3926  000056  ECAF  F004         	call	_ModeCheck	;wreg free
  3927                           
  3928                           ;interrupt.c: 40: SignalOut();
  3929  00005A  EC14  F003         	call	_SignalOut	;wreg free
  3930                           
  3931                           ;interrupt.c: 44: pulsecounter++;
  3932  00005E  2A2E               	incf	_pulsecounter,f,c
  3933  000060                     i2l542:
  3934  000060  C040  FFF5         	movff	??_Isr+13,tablat
  3935  000064  C03F  FFF8         	movff	??_Isr+12,tblptru
  3936  000068  C03E  FFF7         	movff	??_Isr+11,tblptrh
  3937  00006C  C03D  FFF6         	movff	??_Isr+10,tblptrl
  3938  000070  C03C  FFF4         	movff	??_Isr+9,prodh
  3939  000074  C03B  FFF3         	movff	??_Isr+8,prodl
  3940  000078  C03A  FFDA         	movff	??_Isr+7,fsr2h
  3941  00007C  C039  FFD9         	movff	??_Isr+6,fsr2l
  3942  000080  C038  FFE2         	movff	??_Isr+5,fsr1h
  3943  000084  C037  FFE1         	movff	??_Isr+4,fsr1l
  3944  000088  C036  FFEA         	movff	??_Isr+3,fsr0h
  3945  00008C  C035  FFE9         	movff	??_Isr+2,fsr0l
  3946  000090  C034  FFFB         	movff	??_Isr+1,pclatu
  3947  000094  C033  FFFA         	movff	??_Isr,pclath
  3948  000098  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3949  00009A  0011               	retfie		f
  3950  00009C                     __end_of_Isr:
  3951                           	opt stack 0
  3952                           pclatu	equ	0xFFB
  3953                           pclath	equ	0xFFA
  3954                           tblptru	equ	0xFF8
  3955                           tblptrh	equ	0xFF7
  3956                           tblptrl	equ	0xFF6
  3957                           tablat	equ	0xFF5
  3958                           prodh	equ	0xFF4
  3959                           prodl	equ	0xFF3
  3960                           intcon	equ	0xFF2
  3961                           postinc0	equ	0xFEE
  3962                           fsr0h	equ	0xFEA
  3963                           fsr0l	equ	0xFE9
  3964                           wreg	equ	0xFE8
  3965                           indf1	equ	0xFE7
  3966                           postdec1	equ	0xFE5
  3967                           fsr1h	equ	0xFE2
  3968                           fsr1l	equ	0xFE1
  3969                           indf2	equ	0xFDF
  3970                           postinc2	equ	0xFDE
  3971                           postdec2	equ	0xFDD
  3972                           fsr2h	equ	0xFDA
  3973                           fsr2l	equ	0xFD9
  3974                           status	equ	0xFD8
  3975                           
  3976 ;; *************** function _SignalOut *****************
  3977 ;; Defined at:
  3978 ;;		line 28 in file "actors.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;		None
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;		None               void
  3985 ;; Registers used:
  3986 ;;		wreg, status,2, status,0, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3996 ;;Total ram usage:        0 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; Hardware stack levels required when called:    1
  3999 ;; This function calls:
  4000 ;;		_Delay
  4001 ;; This function is called by:
  4002 ;;		_Isr
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           	psect	text28
  4007  000628                     __ptext28:
  4008                           	opt stack 0
  4009  000628                     _SignalOut:
  4010                           	opt stack 25
  4011                           
  4012                           ;actors.c: 29: switch(pin_out) {
  4013                           
  4014                           ;incstack = 0
  4015  000628  D02F               	goto	i2l2874
  4016  00062A                     i2l85:
  4017                           
  4018                           ;actors.c: 31: PORTAbits.RA0 = 1;
  4019  00062A  8080               	bsf	3968,0,c	;volatile
  4020                           
  4021                           ;actors.c: 32: Delay(a_actors[0].aile);
  4022  00062C  C0D0  F02F         	movff	_a_actors,Delay@del
  4023  000630  C0D1  F030         	movff	_a_actors+1,Delay@del+1
  4024  000634  ECFF  F004         	call	_Delay	;wreg free
  4025                           
  4026                           ;actors.c: 33: pin_out = 'E';
  4027  000638  0E45               	movlw	69
  4028  00063A  6E4A               	movwf	_pin_out,c
  4029                           
  4030                           ;actors.c: 34: break;
  4031  00063C  0012               	return	
  4032  00063E                     i2l87:
  4033                           
  4034                           ;actors.c: 36: PORTAbits.RA0 = 0;
  4035  00063E  9080               	bcf	3968,0,c	;volatile
  4036                           
  4037                           ;actors.c: 37: PORTAbits.RA1 = 1;
  4038  000640  8280               	bsf	3968,1,c	;volatile
  4039                           
  4040                           ;actors.c: 38: Delay(a_actors[0].elev);
  4041  000642  C0D2  F02F         	movff	_a_actors+2,Delay@del
  4042  000646  C0D3  F030         	movff	_a_actors+3,Delay@del+1
  4043  00064A  ECFF  F004         	call	_Delay	;wreg free
  4044                           
  4045                           ;actors.c: 39: pin_out = 'T';
  4046  00064E  0E54               	movlw	84
  4047  000650  6E4A               	movwf	_pin_out,c
  4048                           
  4049                           ;actors.c: 40: break;
  4050  000652  0012               	return	
  4051  000654                     i2l88:
  4052                           
  4053                           ;actors.c: 42: PORTAbits.RA1 = 0;
  4054  000654  9280               	bcf	3968,1,c	;volatile
  4055                           
  4056                           ;actors.c: 43: PORTAbits.RA3 = 1;
  4057  000656  8680               	bsf	3968,3,c	;volatile
  4058                           
  4059                           ;actors.c: 44: Delay(a_actors[0].thro);
  4060  000658  C0D4  F02F         	movff	_a_actors+4,Delay@del
  4061  00065C  C0D5  F030         	movff	_a_actors+5,Delay@del+1
  4062  000660  ECFF  F004         	call	_Delay	;wreg free
  4063                           
  4064                           ;actors.c: 45: pin_out = 'R';
  4065  000664  0E52               	movlw	82
  4066  000666  6E4A               	movwf	_pin_out,c
  4067                           
  4068                           ;actors.c: 46: break;
  4069  000668  0012               	return	
  4070  00066A                     i2l89:
  4071                           
  4072                           ;actors.c: 48: PORTAbits.RA3 = 0;
  4073  00066A  9680               	bcf	3968,3,c	;volatile
  4074                           
  4075                           ;actors.c: 49: PORTAbits.RA2 = 1;
  4076  00066C  8480               	bsf	3968,2,c	;volatile
  4077                           
  4078                           ;actors.c: 50: Delay(a_actors[0].rudd);
  4079  00066E  C0D6  F02F         	movff	_a_actors+6,Delay@del
  4080  000672  C0D7  F030         	movff	_a_actors+7,Delay@del+1
  4081  000676  ECFF  F004         	call	_Delay	;wreg free
  4082                           
  4083                           ;actors.c: 51: pin_out = 0;
  4084  00067A  0E00               	movlw	0
  4085  00067C  6E4A               	movwf	_pin_out,c
  4086                           
  4087                           ;actors.c: 52: break;
  4088  00067E  0012               	return	
  4089  000680                     i2l90:
  4090                           
  4091                           ;actors.c: 54: PORTAbits.RA2 = 0;
  4092  000680  9480               	bcf	3968,2,c	;volatile
  4093                           
  4094                           ;actors.c: 55: pin_out = 'A';
  4095  000682  0E41               	movlw	65
  4096  000684  6E4A               	movwf	_pin_out,c
  4097                           
  4098                           ;actors.c: 57: }
  4099                           ;actors.c: 58: }
  4100                           
  4101                           ;actors.c: 56: break;
  4102  000686  0012               	return	
  4103  000688                     i2l2874:
  4104  000688  504A               	movf	_pin_out,w,c
  4105                           
  4106                           ; Switch size 1, requested type "space"
  4107                           ; Number of cases is 5, Range of values is 0 to 84
  4108                           ; switch strategies available:
  4109                           ; Name         Instructions Cycles
  4110                           ; simple_byte           16     9 (average)
  4111                           ;	Chosen strategy is simple_byte
  4112  00068A  0A00               	xorlw	0	; case 0
  4113  00068C  B4D8               	btfsc	status,2,c
  4114  00068E  D7F8               	goto	i2l90
  4115  000690  0A41               	xorlw	65	; case 65
  4116  000692  B4D8               	btfsc	status,2,c
  4117  000694  D7CA               	goto	i2l85
  4118  000696  0A04               	xorlw	4	; case 69
  4119  000698  B4D8               	btfsc	status,2,c
  4120  00069A  D7D1               	goto	i2l87
  4121  00069C  0A17               	xorlw	23	; case 82
  4122  00069E  B4D8               	btfsc	status,2,c
  4123  0006A0  D7E4               	goto	i2l89
  4124  0006A2  0A06               	xorlw	6	; case 84
  4125  0006A4  A4D8               	btfss	status,2,c
  4126  0006A6  0012               	return	
  4127  0006A8  D7D5               	goto	i2l88
  4128  0006AA                     __end_of_SignalOut:
  4129                           	opt stack 0
  4130                           pclatu	equ	0xFFB
  4131                           pclath	equ	0xFFA
  4132                           tblptru	equ	0xFF8
  4133                           tblptrh	equ	0xFF7
  4134                           tblptrl	equ	0xFF6
  4135                           tablat	equ	0xFF5
  4136                           prodh	equ	0xFF4
  4137                           prodl	equ	0xFF3
  4138                           intcon	equ	0xFF2
  4139                           postinc0	equ	0xFEE
  4140                           fsr0h	equ	0xFEA
  4141                           fsr0l	equ	0xFE9
  4142                           wreg	equ	0xFE8
  4143                           indf1	equ	0xFE7
  4144                           postdec1	equ	0xFE5
  4145                           fsr1h	equ	0xFE2
  4146                           fsr1l	equ	0xFE1
  4147                           indf2	equ	0xFDF
  4148                           postinc2	equ	0xFDE
  4149                           postdec2	equ	0xFDD
  4150                           fsr2h	equ	0xFDA
  4151                           fsr2l	equ	0xFD9
  4152                           status	equ	0xFD8
  4153                           
  4154 ;; *************** function _Delay *****************
  4155 ;; Defined at:
  4156 ;;		line 16 in file "actors.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;  del             2    0[COMRAM] unsigned int 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;		None
  4161 ;; Return value:  Size  Location     Type
  4162 ;;		None               void
  4163 ;; Registers used:
  4164 ;;		wreg, status,2, status,0
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4170 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;Total ram usage:        2 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_SignalOut
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           	psect	text29
  4184  0009FE                     __ptext29:
  4185                           	opt stack 0
  4186  0009FE                     _Delay:
  4187                           	opt stack 25
  4188                           
  4189                           ;actors.c: 17: del <<= 1;
  4190                           
  4191                           ;incstack = 0
  4192  0009FE  90D8               	bcf	status,0,c
  4193  000A00  362F               	rlcf	Delay@del,f,c
  4194  000A02  3630               	rlcf	Delay@del+1,f,c
  4195                           
  4196                           ;actors.c: 18: del = 2000 + del;
  4197  000A04  0ED0               	movlw	208
  4198  000A06  242F               	addwf	Delay@del,w,c
  4199  000A08  6E2F               	movwf	Delay@del,c
  4200  000A0A  0E07               	movlw	7
  4201  000A0C  2030               	addwfc	Delay@del+1,w,c
  4202  000A0E  6E30               	movwf	Delay@del+1,c
  4203                           
  4204                           ;actors.c: 19: TMR1L = 0;
  4205  000A10  0E00               	movlw	0
  4206  000A12  6ECE               	movwf	4046,c	;volatile
  4207                           
  4208                           ;actors.c: 20: TMR1H = 0;
  4209  000A14  0E00               	movlw	0
  4210  000A16  6ECF               	movwf	4047,c	;volatile
  4211                           
  4212                           ;actors.c: 21: CCPR1L = del;
  4213  000A18  C02F  FFBE         	movff	Delay@del,4030	;volatile
  4214                           
  4215                           ;actors.c: 22: del >>= 8;
  4216  000A1C  5030               	movf	Delay@del+1,w,c
  4217  000A1E  6E2F               	movwf	Delay@del,c
  4218  000A20  6A30               	clrf	Delay@del+1,c
  4219                           
  4220                           ;actors.c: 23: CCPR1H = del;
  4221  000A22  C02F  FFBF         	movff	Delay@del,4031	;volatile
  4222                           
  4223                           ;actors.c: 24: T1CONbits.TMR1ON = 1;
  4224  000A26  80CD               	bsf	4045,0,c	;volatile
  4225  000A28  0012               	return		;funcret
  4226  000A2A                     __end_of_Delay:
  4227                           	opt stack 0
  4228                           pclatu	equ	0xFFB
  4229                           pclath	equ	0xFFA
  4230                           tblptru	equ	0xFF8
  4231                           tblptrh	equ	0xFF7
  4232                           tblptrl	equ	0xFF6
  4233                           tablat	equ	0xFF5
  4234                           prodh	equ	0xFF4
  4235                           prodl	equ	0xFF3
  4236                           intcon	equ	0xFF2
  4237                           postinc0	equ	0xFEE
  4238                           fsr0h	equ	0xFEA
  4239                           fsr0l	equ	0xFE9
  4240                           wreg	equ	0xFE8
  4241                           indf1	equ	0xFE7
  4242                           postdec1	equ	0xFE5
  4243                           fsr1h	equ	0xFE2
  4244                           fsr1l	equ	0xFE1
  4245                           indf2	equ	0xFDF
  4246                           postinc2	equ	0xFDE
  4247                           postdec2	equ	0xFDD
  4248                           fsr2h	equ	0xFDA
  4249                           fsr2l	equ	0xFD9
  4250                           status	equ	0xFD8
  4251                           
  4252 ;; *************** function _ModeCheck *****************
  4253 ;; Defined at:
  4254 ;;		line 30 in file "gear.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;		None
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;		None
  4259 ;; Return value:  Size  Location     Type
  4260 ;;		None               void
  4261 ;; Registers used:
  4262 ;;		wreg, status,2, status,0, cstack
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;Total ram usage:        0 bytes
  4273 ;; Hardware stack levels used:    1
  4274 ;; Hardware stack levels required when called:    1
  4275 ;; This function calls:
  4276 ;;		_CalcTime
  4277 ;; This function is called by:
  4278 ;;		_Isr
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text30
  4283  00095E                     __ptext30:
  4284                           	opt stack 0
  4285  00095E                     _ModeCheck:
  4286                           	opt stack 25
  4287                           
  4288                           ;gear.c: 31: __nop();
  4289                           
  4290                           ;incstack = 0
  4291  00095E  F000               	nop	
  4292                           
  4293                           ;gear.c: 32: time_gear = CalcTime();
  4294  000960  EC3F  F005         	call	_CalcTime	;wreg free
  4295  000964  C02F  F02A         	movff	?_CalcTime,_time_gear
  4296  000968  C030  F02B         	movff	?_CalcTime+1,_time_gear+1
  4297                           
  4298                           ;gear.c: 33: if(time_gear < 6800){
  4299  00096C  0E90               	movlw	144
  4300  00096E  5C2A               	subwf	_time_gear,w,c
  4301  000970  0E1A               	movlw	26
  4302  000972  582B               	subwfb	_time_gear+1,w,c
  4303  000974  B0D8               	btfsc	status,0,c
  4304  000976  D004               	goto	i2l2890
  4305                           
  4306                           ;gear.c: 35: PORTBbits.RB2 = 0;
  4307  000978  9481               	bcf	3969,2,c	;volatile
  4308                           
  4309                           ;gear.c: 36: PORTAbits.RA5 = 1;
  4310  00097A  8A80               	bsf	3968,5,c	;volatile
  4311                           
  4312                           ;gear.c: 37: set_ret = 0;
  4313  00097C  984B               	bcf	_set_ret/(0+8),_set_ret& (0+7),c
  4314                           
  4315                           ;gear.c: 38: }else if(time_gear >= 6800) {
  4316  00097E  D009               	goto	i2l253
  4317  000980                     i2l2890:
  4318  000980  0E90               	movlw	144
  4319  000982  5C2A               	subwf	_time_gear,w,c
  4320  000984  0E1A               	movlw	26
  4321  000986  582B               	subwfb	_time_gear+1,w,c
  4322  000988  A0D8               	btfss	status,0,c
  4323  00098A  D003               	goto	i2l253
  4324                           
  4325                           ;gear.c: 39: PORTBbits.RB2 = 1;
  4326  00098C  8481               	bsf	3969,2,c	;volatile
  4327                           
  4328                           ;gear.c: 40: PORTAbits.RA5 = 0;
  4329  00098E  9A80               	bcf	3968,5,c	;volatile
  4330                           
  4331                           ;gear.c: 41: set_ret = 1;
  4332  000990  884B               	bsf	_set_ret/(0+8),_set_ret& (0+7),c
  4333  000992                     i2l253:
  4334                           
  4335                           ;gear.c: 42: }
  4336                           ;gear.c: 43: __nop();
  4337  000992  F000               	nop	
  4338                           
  4339                           ;gear.c: 44: return set_ret;
  4340                           ;	Return value of _ModeCheck is never used
  4341  000994  0012               	return		;funcret
  4342  000996                     __end_of_ModeCheck:
  4343                           	opt stack 0
  4344                           pclatu	equ	0xFFB
  4345                           pclath	equ	0xFFA
  4346                           tblptru	equ	0xFF8
  4347                           tblptrh	equ	0xFF7
  4348                           tblptrl	equ	0xFF6
  4349                           tablat	equ	0xFF5
  4350                           prodh	equ	0xFF4
  4351                           prodl	equ	0xFF3
  4352                           intcon	equ	0xFF2
  4353                           postinc0	equ	0xFEE
  4354                           fsr0h	equ	0xFEA
  4355                           fsr0l	equ	0xFE9
  4356                           wreg	equ	0xFE8
  4357                           indf1	equ	0xFE7
  4358                           postdec1	equ	0xFE5
  4359                           fsr1h	equ	0xFE2
  4360                           fsr1l	equ	0xFE1
  4361                           indf2	equ	0xFDF
  4362                           postinc2	equ	0xFDE
  4363                           postdec2	equ	0xFDD
  4364                           fsr2h	equ	0xFDA
  4365                           fsr2l	equ	0xFD9
  4366                           status	equ	0xFD8
  4367                           
  4368 ;; *************** function _CalcTime *****************
  4369 ;; Defined at:
  4370 ;;		line 16 in file "gear.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;		None
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;  time_gear_me    2    2[COMRAM] unsigned int 
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  2    0[COMRAM] unsigned int 
  4377 ;; Registers used:
  4378 ;;		wreg, status,2, status,0
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4385 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4387 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4388 ;;Total ram usage:        4 bytes
  4389 ;; Hardware stack levels used:    1
  4390 ;; This function calls:
  4391 ;;		Nothing
  4392 ;; This function is called by:
  4393 ;;		_ModeCheck
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text31
  4398  000A7E                     __ptext31:
  4399                           	opt stack 0
  4400  000A7E                     _CalcTime:
  4401                           	opt stack 25
  4402                           
  4403                           ;gear.c: 17: unsigned int time_gear_meas = TMR3H;
  4404                           
  4405                           ;incstack = 0
  4406  000A7E  CFB3 F031          	movff	4019,CalcTime@time_gear_meas	;volatile
  4407  000A82  6A32               	clrf	CalcTime@time_gear_meas+1,c
  4408                           
  4409                           ;gear.c: 18: time_gear_meas <<= 8;
  4410  000A84  5031               	movf	CalcTime@time_gear_meas,w,c
  4411  000A86  6E32               	movwf	CalcTime@time_gear_meas+1,c
  4412  000A88  6A31               	clrf	CalcTime@time_gear_meas,c
  4413                           
  4414                           ;gear.c: 19: time_gear_meas |= TMR3L;
  4415  000A8A  50B2               	movf	4018,w,c	;volatile
  4416  000A8C  1231               	iorwf	CalcTime@time_gear_meas,f,c
  4417                           
  4418                           ;gear.c: 20: TMR3H = 0;
  4419  000A8E  0E00               	movlw	0
  4420  000A90  6EB3               	movwf	4019,c	;volatile
  4421                           
  4422                           ;gear.c: 21: TMR3L = 0;
  4423  000A92  0E00               	movlw	0
  4424  000A94  6EB2               	movwf	4018,c	;volatile
  4425                           
  4426                           ;gear.c: 22: __nop();
  4427  000A96  F000               	nop	
  4428                           
  4429                           ;gear.c: 23: return time_gear_meas;
  4430  000A98  C031  F02F         	movff	CalcTime@time_gear_meas,?_CalcTime
  4431  000A9C  C032  F030         	movff	CalcTime@time_gear_meas+1,?_CalcTime+1
  4432  000AA0  0012               	return	
  4433  000AA2                     __end_of_CalcTime:
  4434                           	opt stack 0
  4435  0000                     pclatu	equ	0xFFB
  4436                           pclath	equ	0xFFA
  4437                           tblptru	equ	0xFF8
  4438                           tblptrh	equ	0xFF7
  4439                           tblptrl	equ	0xFF6
  4440                           tablat	equ	0xFF5
  4441                           prodh	equ	0xFF4
  4442                           prodl	equ	0xFF3
  4443                           intcon	equ	0xFF2
  4444                           postinc0	equ	0xFEE
  4445                           fsr0h	equ	0xFEA
  4446                           fsr0l	equ	0xFE9
  4447                           wreg	equ	0xFE8
  4448                           indf1	equ	0xFE7
  4449                           postdec1	equ	0xFE5
  4450                           fsr1h	equ	0xFE2
  4451                           fsr1l	equ	0xFE1
  4452                           indf2	equ	0xFDF
  4453                           postinc2	equ	0xFDE
  4454                           postdec2	equ	0xFDD
  4455                           fsr2h	equ	0xFDA
  4456                           fsr2l	equ	0xFD9
  4457                           status	equ	0xFD8
  4458                           pclatu	equ	0xFFB
  4459                           pclath	equ	0xFFA
  4460                           tblptru	equ	0xFF8
  4461                           tblptrh	equ	0xFF7
  4462                           tblptrl	equ	0xFF6
  4463                           tablat	equ	0xFF5
  4464                           prodh	equ	0xFF4
  4465                           prodl	equ	0xFF3
  4466                           intcon	equ	0xFF2
  4467                           postinc0	equ	0xFEE
  4468                           fsr0h	equ	0xFEA
  4469                           fsr0l	equ	0xFE9
  4470                           wreg	equ	0xFE8
  4471                           indf1	equ	0xFE7
  4472                           postdec1	equ	0xFE5
  4473                           fsr1h	equ	0xFE2
  4474                           fsr1l	equ	0xFE1
  4475                           indf2	equ	0xFDF
  4476                           postinc2	equ	0xFDE
  4477                           postdec2	equ	0xFDD
  4478                           fsr2h	equ	0xFDA
  4479                           fsr2l	equ	0xFD9
  4480                           status	equ	0xFD8
  4481                           
  4482                           	psect	rparam
  4483  0000                     pclatu	equ	0xFFB
  4484                           pclath	equ	0xFFA
  4485                           tblptru	equ	0xFF8
  4486                           tblptrh	equ	0xFF7
  4487                           tblptrl	equ	0xFF6
  4488                           tablat	equ	0xFF5
  4489                           prodh	equ	0xFF4
  4490                           prodl	equ	0xFF3
  4491                           intcon	equ	0xFF2
  4492                           postinc0	equ	0xFEE
  4493                           fsr0h	equ	0xFEA
  4494                           fsr0l	equ	0xFE9
  4495                           wreg	equ	0xFE8
  4496                           indf1	equ	0xFE7
  4497                           postdec1	equ	0xFE5
  4498                           fsr1h	equ	0xFE2
  4499                           fsr1l	equ	0xFE1
  4500                           indf2	equ	0xFDF
  4501                           postinc2	equ	0xFDE
  4502                           postdec2	equ	0xFDD
  4503                           fsr2h	equ	0xFDA
  4504                           fsr2l	equ	0xFD9
  4505                           status	equ	0xFD8
  4506                           
  4507                           	psect	temp
  4508  00004D                     btemp:
  4509                           	opt stack 0
  4510  00004D                     	ds	1
  4511  0000                     int$flags	set	btemp
  4512                           pclatu	equ	0xFFB
  4513                           pclath	equ	0xFFA
  4514                           tblptru	equ	0xFF8
  4515                           tblptrh	equ	0xFF7
  4516                           tblptrl	equ	0xFF6
  4517                           tablat	equ	0xFF5
  4518                           prodh	equ	0xFF4
  4519                           prodl	equ	0xFF3
  4520                           intcon	equ	0xFF2
  4521                           postinc0	equ	0xFEE
  4522                           fsr0h	equ	0xFEA
  4523                           fsr0l	equ	0xFE9
  4524                           wreg	equ	0xFE8
  4525                           indf1	equ	0xFE7
  4526                           postdec1	equ	0xFE5
  4527                           fsr1h	equ	0xFE2
  4528                           fsr1l	equ	0xFE1
  4529                           indf2	equ	0xFDF
  4530                           postinc2	equ	0xFDE
  4531                           postdec2	equ	0xFDD
  4532                           fsr2h	equ	0xFDA
  4533                           fsr2l	equ	0xFD9
  4534                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        15
    BSS         218
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      76
    BANK0           160     17     153
    BANK1           256      0      42
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _SendDebugInfo->_UartSend
    _SendDebugInfo->_UartSendAscii
    _SendDebugInfo->___lwmod
    _Init->_InitWlan
    _AboveTableStart->_ActThrottle
    _AboveTableLand->_ActThrottle
    _AboveFloor->_ActThrottle

Critical Paths under _Isr in COMRAM

    _SignalOut->_Delay
    _ModeCheck->_CalcTime

Critical Paths under _main in BANK0

    _main->_CheckThrottle
    _ReadHeight->_SendDebugInfo
    _SendDebugInfo->___lwdiv
    _CheckThrottle->_AboveTableLand

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2287
                      _CheckThrottle
                               _Init
                         _ReadHeight
                 _StartHeightMeasure
                         _StoreAsOld
 ---------------------------------------------------------------------------------
 (1) _StoreAsOld                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _StartHeightMeasure                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadHeight                                           2     2      0    1136
                                             14 BANK0      2     2      0
                      _SendDebugInfo
 ---------------------------------------------------------------------------------
 (2) _SendDebugInfo                                        7     5      2    1136
                                              7 BANK0      7     5      2
                           _UartSend
                      _UartSendAscii
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     340
                                             18 COMRAM     1     1      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     349
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _UartSendAscii                                        1     1      0      34
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _UartSend                                             1     1      0      31
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                         _InitActors
                          _InitAnsel
                           _InitComp
                      _InitInterrupt
                            _InitOsc
                           _InitPort
                            _InitSpi
                          _InitTimer
                           _InitTris
                           _InitUart
                           _InitWlan
 ---------------------------------------------------------------------------------
 (2) _InitWlan                                             1     1      0       0
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _InitUart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitSpi                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitOsc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitComp                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitActors                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CheckThrottle                                        5     5      0    1151
                                             12 BANK0      5     5      0
                         _AboveFloor
                     _AboveTableLand
                    _AboveTableStart
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     448
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _AboveTableStart                                      0     0      0      62
                        _ActThrottle
 ---------------------------------------------------------------------------------
 (2) _AboveTableLand                                      12    12      0     579
                                              0 BANK0     12    12      0
                        _ActThrottle
 ---------------------------------------------------------------------------------
 (2) _AboveFloor                                           0     0      0      62
                        _ActThrottle
 ---------------------------------------------------------------------------------
 (3) _ActThrottle                                          1     1      0      62
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Isr                                                 14    14      0     266
                                              4 COMRAM    14    14      0
                          _ModeCheck
                          _SignalOut
 ---------------------------------------------------------------------------------
 (5) _SignalOut                                            0     0      0     241
                              _Delay
 ---------------------------------------------------------------------------------
 (6) _Delay                                                2     0      2     241
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ModeCheck                                            0     0      0      25
                           _CalcTime
 ---------------------------------------------------------------------------------
 (6) _CalcTime                                             4     2      2      25
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CheckThrottle
     _AboveFloor
       _ActThrottle
     _AboveTableLand
       _ActThrottle
     _AboveTableStart
       _ActThrottle
     ___wmul
   _Init
     _InitActors
     _InitAnsel
     _InitComp
     _InitInterrupt
     _InitOsc
     _InitPort
     _InitSpi
     _InitTimer
     _InitTris
     _InitUart
     _InitWlan
   _ReadHeight
     _SendDebugInfo
       _UartSend
       _UartSendAscii
       ___lwdiv
       ___lwmod
   _StartHeightMeasure
   _StoreAsOld

 _Isr (ROOT)
   _ModeCheck
     _CalcTime
   _SignalOut
     _Delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      2A       7       16.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     11      99       5       95.6%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     13      4C       1       80.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10F      12        0.0%
DATA                 0      0     10F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Mar 28 13:10:17 2016

                _highpassallowed 025A                                _w 002C  
                             _lw 0024              ___wmul@multiplicand 00E4  
                   __CFG_CP0$OFF 000000                     __CFG_CP1$OFF 000000  
                   __CFG_CP2$OFF 000000                     __CFG_CP3$OFF 000000  
                            l100 095A                              l455 0ADE  
                            l458 0AF4                              l619 0B16  
                            l852 0796                              l961 0B0C  
                            l968 0AD8                              _GIE 007F97  
                   __CFG_CPB$OFF 000000                     __CFG_CPD$OFF 000000  
                            _Isr 0008                ActThrottle@change 0041  
                            prod 000FF3                              wreg 000FE8  
                     _TXSTA1bits 000FAC                       _AboveFloor 08C0  
                   __CFG_LVP$OFF 000000                             ?_Isr 002F  
                           l1134 0100                             l1126 00F8  
                           l1136 01AC                             l1161 0384  
                           l1170 045A                             l1162 0394  
                           l1172 0446                             l1173 0456  
                           l1159 0398                     _pulsecounter 002E  
                           l3500 06C8                             l1709 085A  
                           l3502 06D4                             l3512 070A  
                           l3504 06DA                             l3520 081A  
                           l3610 00E0                             l3522 0824  
                           l3612 00E8                             l3524 082A  
                           l3630 01D8                             l3622 011E  
                           l3606 00C8                             l3614 00F0  
                           l3710 03AC                             l3534 055E  
                           l3608 00D8                             l3712 03B2  
                           l3528 084E                             l3544 05EE  
                           l3642 02E4                             l3634 02A4  
                           l3618 0102                             l3706 03A2  
                           l3490 0AD0                             l3546 05F4  
                           l3538 0568                             l1699 0718  
                           l3476 092E                             l3660 0910  
                           l3652 08E4                             l3572 04C0  
                           l3580 04E8                             l3732 046E  
                           l3484 0B08                             l3638 02CE  
                           l3582 04F8                             l3574 04D0  
                           l3590 0520                             l3566 0498  
                           l3718 0408                             l3558 0620  
                           l3592 0530                             l3584 0508  
                           l3576 04D8                             l3728 0464  
                           l3658 0908                             l3594 0540  
                           l3586 0510                             l3578 04E0  
                           l3596 0548                             l3588 0518  
                           l3598 0550                             l3694 030E  
                           u3010 00AC                             u3210 03C2  
                           u3307 02EC                             u3277 0ACA  
                           u3287 0B02                             u3297 0AEA  
                           _PEIE 007F96                             i2l90 0680  
                           i2l85 062A                             i2l87 063E  
                           i2l88 0654                             i2l89 066A  
                           _Init 09CC                             _cm50 0046  
                           _cm80 0048                      _ActThrottle 0918  
                           _main 0B12                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                             btemp 004D  
                  __CFG_BORV$190 000000                             pclat 000FFA  
                           prodh 000FF4                             prodl 000FF3  
                           start 009C                    __CFG_IESO$OFF 000000  
                   ___param_bank 000010                    _InitInterrupt 0B78  
                    _storeheight 0028                  __end_of_InitOsc 0BB0  
                __end_of_InitSpi 0B90                            ??_Isr 0033  
                   _BAUDCON1bits 000FB8                            ?_Init 002F  
                          ?_main 002F                   __CFG_DEBUG$OFF 000000  
                __end_of___lwdiv 0722                  __end_of___lwmod 0864  
                          i2l253 0992                            i2l542 0060  
                          _TMR1H 000FCF                            _TX1IF 007CF4  
                          _TMR3H 000FB3                            _TMR1L 000FCE  
                          _TMR3L 000FB2                            _TMR5H 000F50  
                          _TMR5L 000F4F                            _PORTA 000F80  
                          _PORTB 000F81                            _PORTC 000F82  
                          _PORTD 000F83                            _PORTE 000F84  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96                            _Delay 09FE  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000                    __CFG_WRT3$OFF 000000  
                          _cm100 00F3                            _cm120 00F5  
                          _cm220 00F7                            _cm180 0044  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                 __CFG_EBTRB$OFF 000000                  _AboveTableStart 0474  
                          _frame 0259                            _table 0260  
             __CFG_MCLRE$EXTMCLR 000000                   __pbitbssCOMRAM 0258  
                          tablat 000FF5                AboveTableLand@tmp 00E8  
               __end_of_CalcTime 0AA2                            status 000FD8  
                 __CFG_HFOFST$ON 000000            __end_of_UartSendAscii 0ADE  
                 __CFG_PBADEN$ON 000000                       _InitActors 0A54  
                 ?_InitInterrupt 002F                       _ReadHeight 0796  
                __initialization 0722                     __end_of_Init 09FE  
             _StartHeightMeasure 0B68                     __end_of_main 0B28  
               __end_of_InitComp 0B9A                 __end_of_InitUart 0B68  
               __end_of_InitPort 0B54                 __end_of_InitWlan 0AFA  
               __end_of_InitTris 0B3E                           ??_Init 0042  
            ?_StartHeightMeasure 002F                           ??_main 0042  
                  __activetblptr 000002                   __CFG_PLLCFG$ON 000000  
               __end_of_UartSend 0B12                           ?_Delay 002F  
                    ?_AboveFloor 002F                           _CCP1IE 007CEA  
                         _CCP1IF 007CF2                           _CCPR1H 000FBF  
                         _CCPR1L 000FBE                           _ANSELA 000F38  
                         _ANSELB 000F39                           _ANSELC 000F3A  
                         _ANSELD 000F3B                           _ANSELE 000F3C  
                         i2l3086 0050                   __CFG_WDTEN$OFF 000000  
                         i2l2890 0980                           i2l2874 0688  
                         _RCREG1 000FAE                           _OSCCON 000FD3  
             __size_of_InitAnsel 0020             ??_StartHeightMeasure 0041  
                         _SPBRG1 000FAF                           _TMR3IF 007D09  
                         _SSP1IF 007CF3               __size_of_InitTimer 005C  
             __size_of_ModeCheck 0038                           _TXREG1 000FAD  
                      ??_InitOsc 0041                        ??_InitSpi 0041  
                 __CFG_XINST$OFF 000000                           _a_path 00A6  
                         ___wmul 0996                           _c_path 0042  
                 __CFG_STVREN$ON 000000                        ??___lwdiv 0041  
                      ??___lwmod 0041                           clear_0 0728  
                         clear_1 0734                           clear_2 0742  
             __size_of_SignalOut 0082          __end_of_AboveTableStart 0558  
                   __pdataCOMRAM 0042           __size_of_CheckThrottle 0176  
         __size_of_SendDebugInfo 00D0                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                     __accesstop 0060          __end_of__initialization 0788  
                     _StoreAsOld 0A2A                  ??_InitInterrupt 0041  
                  ___rparam_used 000001                      ?_InitActors 002F  
                  __end_of_Delay 0A2A                      ?_ReadHeight 002F  
                 __pcstackCOMRAM 002F              __size_of_AboveFloor 0058  
                   __pidataBANK0 0BA3                  AboveTableLand@i 00EA  
              __end_of_InitAnsel 0AC2                       _a_path_old 0100  
                      ?_CalcTime 002F                __end_of_InitTimer 08C0  
              __end_of_ModeCheck 0996                          ??_Delay 0031  
                     __pbssBANK0 0060                       __pbssBANK1 0100  
                      ?_InitComp 002F                        ?_InitUart 002F  
                      ?_InitPort 002F                       _changerate 00DD  
                      ?_InitWlan 002F                __end_of_SignalOut 06AA  
                      ?_InitTris 002F                     ?_ActThrottle 002F  
                  _CheckThrottle 02FE                    _SendDebugInfo 0558  
             __CFG_CCP2MX$PORTC1 000000                        ?_UartSend 002F  
                        ?___wmul 00E2               __CFG_CCP3MX$PORTB5 000000  
        __size_of_AboveTableLand 025E                       ??_CalcTime 0031  
               ?_AboveTableStart 002F              __size_of_InitActors 002A  
              __CFG_PRICLKEN$OFF 000000                          _TMR3GIE 007D19  
                        _TMR3GIF 007D21                          _TMR5GIF 007D22  
                        _SSP1BUF 000FC9              __size_of_ReadHeight 0072  
              UartSendAscii@data 0041                       ??_InitComp 0041  
                     ??_InitUart 0041                       ??_InitPort 0041  
                     ??_InitWlan 0041                       ??_InitTris 0041  
                    ?_StoreAsOld 002F                          _InitOsc 0BAA  
                        _InitSpi 0B86                   ?_CheckThrottle 002F  
                 ?_SendDebugInfo 00E9                  __CFG_PWRTEN$OFF 000000  
                        __Hparam 0000                          __Lparam 0000  
                     ??_UartSend 0041                  __size_of___wmul 0036  
                        _a_color 0060                          _a_frame 0001  
                        ___lwdiv 06AA                          ___lwmod 0808  
        SendDebugInfo@debug_info 00E9                          __pcinit 0722  
                        __ramtop 1000                          __ptext0 0B12  
                        __ptext1 0A2A                          __ptext2 0B68  
                        __ptext3 0796                          __ptext4 0558  
                        __ptext5 0808                          __ptext6 06AA  
                        __ptext7 0AC2                          __ptext8 0AFA  
                        __ptext9 09CC                        _T1CONbits 000FCD  
                   __size_of_Isr 0094                        _T3CONbits 000FB1  
                        _pin_out 004A                     ??_AboveFloor 0042  
                      _T5CONbits 000F4E                          _set_ret 025C  
           end_of_initialization 0788                    __Lmediumconst 0000  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
             __end_of_AboveFloor 0918                        _PORTAbits 000F80  
                      _PORTBbits 000F81                        _PORTDbits 000F83  
            __size_of_StoreAsOld 002A           __size_of_UartSendAscii 001C  
SendDebugInfo@debug_info_counter 00EF      __size_of_StartHeightMeasure 0010  
                ??_CheckThrottle 00EE                  ??_SendDebugInfo 00EB  
                    _CCP1CONbits 000FBD                     ??_InitActors 0041  
           __size_of_ActThrottle 0046                     ??_ReadHeight 00F0  
                 __end_of___wmul 09CC                      _a_frame_dif 0015  
                  __pidataCOMRAM 0B9A                   _AboveTableLand 00A0  
                  __pbitnvCOMRAM 0260              start_initialization 0722  
              __size_of_CalcTime 0024                        _InitAnsel 0AA2  
                    __end_of_Isr 009C               __end_of_InitActors 0A7E  
                      _InitTimer 0864                        _ModeCheck 095E  
             __end_of_ReadHeight 0808                __size_of_InitComp 000A  
              __size_of_InitUart 0014                __size_of_InitPort 0016  
              __size_of_InitWlan 001C                __size_of_InitTris 0016  
                  _UartSendAscii 0AC2                        _SignalOut 0628  
          __end_of_InitInterrupt 0B86                         ??___wmul 0041  
         __end_of_AboveTableLand 02FE                __size_of_UartSend 0018  
                    __pdataBANK0 00F3                      __pbssCOMRAM 0001  
                     ?_InitAnsel 002F                    __pcstackBANK0 00E2  
               _seconddifference 0026                       ?_InitTimer 002F  
                     ?_ModeCheck 002F                     ??_StoreAsOld 0041  
                       ?_InitOsc 002F                         ?_InitSpi 002F  
                 ?_UartSendAscii 002F                       ?_SignalOut 002F  
               ___lwdiv@dividend 00E2                        __pintcode 0008  
                ?_AboveTableLand 002F                         ?___lwdiv 00E2  
                       ?___lwmod 00E2                        _direction 0258  
             __end_of_StoreAsOld 0A54                   __size_of_Delay 002C  
               ___lwdiv@quotient 00E7         __size_of_AboveTableStart 00E4  
                 ___wmul@product 00E6  SendDebugInfo@debug_send_counter 00EE  
                       Delay@del 002F                        _send_info 00D8  
                   UartSend@data 0041                 __CFG_WDTPS$32768 000000  
                      _time_gear 002A                         _SSP1CON1 000FC6  
                       _SSP1STAT 000FC7                ___wmul@multiplier 00E2  
                       _CalcTime 0A7E                      ??_InitAnsel 0041  
                    ??_InitTimer 0041                      ??_ModeCheck 0033  
                  _id_current_cc 0022                        copy_data0 075C  
                      copy_data1 077C                         _InitComp 0B90  
                       _InitUart 0B54                         _InitPort 0B3E  
                       _InitWlan 0ADE                         _InitTris 0B28  
                ??_UartSendAscii 0041                         __Hrparam 0000  
                    ??_SignalOut 0031                 __size_of_InitOsc 0006  
               __size_of_InitSpi 000A                         _UartSend 0AFA  
                       __Lrparam 0000               __CFG_BOREN$SBORDIS 000000  
              __CFG_P2BMX$PORTD2 000000                 __size_of___lwdiv 0078  
               __size_of___lwmod 005C                         _a_actors 00D0  
                ___lwdiv@divisor 00E4                  ___lwdiv@counter 00E6  
                       __ptext10 0ADE                         __ptext11 0B54  
                       __ptext20 0A54                         __ptext12 0B28  
                       __ptext21 02FE                         __ptext13 0864  
                       __ptext30 095E                         __ptext22 0996  
                       __ptext14 0B86                         __ptext31 0A7E  
                       __ptext23 0474                         __ptext15 0B3E  
                       __ptext24 00A0                         __ptext16 0BAA  
                       __ptext25 08C0                         __ptext17 0B78  
                       __ptext26 0918                         __ptext18 0B90  
                       __ptext19 0AA2                         __ptext28 0628  
                       __ptext29 09FE       __end_of_StartHeightMeasure 0B78  
                     _T3GCONbits 000FB4                    __size_of_Init 0032  
         CalcTime@time_gear_meas 0031                    ??_ActThrottle 0041  
                       _obj_type 025B                    __size_of_main 0016  
                     _T5GCONbits 000F4D            __end_of_CheckThrottle 0474  
              ??_AboveTableStart 0042            __end_of_SendDebugInfo 0628  
                       int$flags 004D                         _outgoing 001F  
                       _storedif 025D             AboveTableLand@i_2161 00EC  
           AboveTableLand@i_2162 00E6                SendDebugInfo@send 00ED  
                       intlevel2 0000                 ___lwmod@dividend 00E2  
                     _RCSTA1bits 000FAB                 ??_AboveTableLand 00E2  
            __end_of_ActThrottle 095E                      _time_height 00E0  
                ___lwmod@divisor 00E4                  ___lwmod@counter 0041  
              __CFG_T3CMX$PORTC0 000000           __size_of_InitInterrupt 000E  
              __CFG_FOSC$INTIO67 000000  
