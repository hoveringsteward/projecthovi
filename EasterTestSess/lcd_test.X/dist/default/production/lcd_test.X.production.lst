

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Thu Mar 31 14:42:03 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  0007                     	;# 
    25  0008                     	;# 
    26  0009                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000D                     	;# 
    31  0011                     	;# 
    32  0012                     	;# 
    33  0013                     	;# 
    34  0014                     	;# 
    35  0015                     	;# 
    36  0016                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001B                     	;# 
    43  001C                     	;# 
    44  001E                     	;# 
    45  001F                     	;# 
    46  008C                     	;# 
    47  008D                     	;# 
    48  0091                     	;# 
    49  0092                     	;# 
    50  0093                     	;# 
    51  0094                     	;# 
    52  0095                     	;# 
    53  0096                     	;# 
    54  0097                     	;# 
    55  0098                     	;# 
    56  0099                     	;# 
    57  009A                     	;# 
    58  009B                     	;# 
    59  009B                     	;# 
    60  009C                     	;# 
    61  009D                     	;# 
    62  009E                     	;# 
    63  010C                     	;# 
    64  010D                     	;# 
    65  0111                     	;# 
    66  0112                     	;# 
    67  0113                     	;# 
    68  0114                     	;# 
    69  0115                     	;# 
    70  0116                     	;# 
    71  0117                     	;# 
    72  0118                     	;# 
    73  0119                     	;# 
    74  011A                     	;# 
    75  011B                     	;# 
    76  011D                     	;# 
    77  011E                     	;# 
    78  018C                     	;# 
    79  018D                     	;# 
    80  0191                     	;# 
    81  0191                     	;# 
    82  0192                     	;# 
    83  0193                     	;# 
    84  0193                     	;# 
    85  0193                     	;# 
    86  0194                     	;# 
    87  0195                     	;# 
    88  0196                     	;# 
    89  0199                     	;# 
    90  019A                     	;# 
    91  019B                     	;# 
    92  019B                     	;# 
    93  019B                     	;# 
    94  019B                     	;# 
    95  019C                     	;# 
    96  019C                     	;# 
    97  019D                     	;# 
    98  019E                     	;# 
    99  019F                     	;# 
   100  020C                     	;# 
   101  020D                     	;# 
   102  0211                     	;# 
   103  0211                     	;# 
   104  0212                     	;# 
   105  0212                     	;# 
   106  0213                     	;# 
   107  0213                     	;# 
   108  0214                     	;# 
   109  0214                     	;# 
   110  0215                     	;# 
   111  0215                     	;# 
   112  0215                     	;# 
   113  0216                     	;# 
   114  0216                     	;# 
   115  0217                     	;# 
   116  0217                     	;# 
   117  0219                     	;# 
   118  021A                     	;# 
   119  021B                     	;# 
   120  021C                     	;# 
   121  021D                     	;# 
   122  021E                     	;# 
   123  021F                     	;# 
   124  0291                     	;# 
   125  0291                     	;# 
   126  0292                     	;# 
   127  0293                     	;# 
   128  0294                     	;# 
   129  0295                     	;# 
   130  0295                     	;# 
   131  0296                     	;# 
   132  0298                     	;# 
   133  0298                     	;# 
   134  0299                     	;# 
   135  029A                     	;# 
   136  029B                     	;# 
   137  029C                     	;# 
   138  029C                     	;# 
   139  029D                     	;# 
   140  029E                     	;# 
   141  029E                     	;# 
   142  0311                     	;# 
   143  0311                     	;# 
   144  0312                     	;# 
   145  0313                     	;# 
   146  0318                     	;# 
   147  0318                     	;# 
   148  0319                     	;# 
   149  031A                     	;# 
   150  0394                     	;# 
   151  0395                     	;# 
   152  0396                     	;# 
   153  039A                     	;# 
   154  039C                     	;# 
   155  039D                     	;# 
   156  039E                     	;# 
   157  039F                     	;# 
   158  0415                     	;# 
   159  0416                     	;# 
   160  0417                     	;# 
   161  041C                     	;# 
   162  041D                     	;# 
   163  041E                     	;# 
   164  0FE4                     	;# 
   165  0FE5                     	;# 
   166  0FE6                     	;# 
   167  0FE7                     	;# 
   168  0FE8                     	;# 
   169  0FE9                     	;# 
   170  0FEA                     	;# 
   171  0FEB                     	;# 
   172  0FED                     	;# 
   173  0FEE                     	;# 
   174  0FEF                     	;# 
   175  000C                     _PORTA	set	12
   176  000D                     _PORTB	set	13
   177  0060                     _RA0	set	96
   178  0062                     _RA2	set	98
   179  0068                     _RB0	set	104
   180  0069                     _RB1	set	105
   181  006A                     _RB2	set	106
   182  006B                     _RB3	set	107
   183  006C                     _RB4	set	108
   184  006D                     _RB5	set	109
   185  006E                     _RB6	set	110
   186  006F                     _RB7	set	111
   187  0099                     _OSCCON	set	153
   188  008C                     _TRISA	set	140
   189  008D                     _TRISB	set	141
   190  018C                     _ANSELA	set	396
   191  018D                     _ANSELB	set	397
   192                           
   193                           	psect	stringtext
   194  0800                     __pstringtext:	
   195  0800                     STR_1:	
   196  0800  3447               	retlw	71	;'G'
   197  0801  3475               	retlw	117	;'u'
   198  0802  3474               	retlw	116	;'t'
   199  0803  3465               	retlw	101	;'e'
   200  0804  346E               	retlw	110	;'n'
   201  0805  3420               	retlw	32	;' '
   202  0806  3441               	retlw	65	;'A'
   203  0807  3470               	retlw	112	;'p'
   204  0808  3470               	retlw	112	;'p'
   205  0809  3465               	retlw	101	;'e'
   206  080A  3474               	retlw	116	;'t'
   207  080B  3469               	retlw	105	;'i'
   208  080C  3474               	retlw	116	;'t'
   209  080D  3400               	retlw	0
   210  080E                     STR_2:	
   211  080E  3448               	retlw	72	;'H'
   212  080F  346F               	retlw	111	;'o'
   213  0810  3476               	retlw	118	;'v'
   214  0811  3469               	retlw	105	;'i'
   215  0812  3400               	retlw	0
   216                           
   217                           ; #config settings
   218  0000                     
   219                           	psect	cinit
   220  07FB                     start_initialization:	
   221  07FB                     __initialization:	
   222                           
   223                           ; Clear objects allocated to COMMON
   224  07FB  01FC               	clrf	__pbssCOMMON& (0+127)
   225  07FC  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   226  07FD                     end_of_initialization:	
   227                           ;End of C runtime variable initialization code
   228                           
   229  07FD                     __end_of__initialization:	
   230  07FD  0020               	movlb	0
   231  07FE  3187  2F85         	ljmp	_main	;jump to C main() function
   232                           
   233                           	psect	bssCOMMON
   234  007C                     __pbssCOMMON:	
   235  007C                     _nickname:	
   236  007C                     	ds	2
   237                           
   238                           	psect	cstackCOMMON
   239  0070                     __pcstackCOMMON:	
   240  0070                     ?_port:	
   241  0070                     ??_port:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ?_cmd:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?_init_LCD:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ?_init:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?_write_letter:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ?_main:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     port@c:	
   260                           ; 1 bytes @ 0x0
   261                           
   262                           
   263                           ; 1 bytes @ 0x0
   264  0070                     	ds	1
   265  0071                     ??_cmd:	
   266  0071                     ??_write_letter:	
   267                           ; 1 bytes @ 0x1
   268                           
   269                           
   270                           ; 1 bytes @ 0x1
   271  0071                     	ds	2
   272  0073                     cmd@c:	
   273  0073                     write_letter@c:	
   274                           ; 1 bytes @ 0x3
   275                           
   276                           
   277                           ; 1 bytes @ 0x3
   278  0073                     	ds	1
   279  0074                     ??_init_LCD:	
   280  0074                     ?_cursor:	
   281                           ; 1 bytes @ 0x4
   282                           
   283  0074                     ?_write_words:	
   284                           ; 1 bytes @ 0x4
   285                           
   286  0074                     cursor@b:	
   287                           ; 1 bytes @ 0x4
   288                           
   289  0074                     write_words@c:	
   290                           ; 1 bytes @ 0x4
   291                           
   292                           
   293                           ; 2 bytes @ 0x4
   294  0074                     	ds	1
   295  0075                     ??_cursor:	
   296  0075                     cursor@a:	
   297                           ; 1 bytes @ 0x5
   298                           
   299                           
   300                           ; 1 bytes @ 0x5
   301  0075                     	ds	1
   302  0076                     ??_init:	
   303  0076                     ??_write_words:	
   304                           ; 1 bytes @ 0x6
   305                           
   306                           
   307                           ; 1 bytes @ 0x6
   308  0076                     	ds	1
   309  0077                     write_words@j:	
   310                           
   311                           ; 2 bytes @ 0x7
   312  0077                     	ds	2
   313  0079                     ??_main:	
   314                           
   315                           ; 1 bytes @ 0x9
   316  0079                     	ds	3
   317                           
   318                           	psect	maintext
   319  0785                     __pmaintext:	
   320 ;;
   321 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   322 ;;
   323 ;; *************** function _main *****************
   324 ;; Defined at:
   325 ;;		line 145 in file "lcd.c"
   326 ;; Parameters:    Size  Location     Type
   327 ;;		None
   328 ;; Auto vars:     Size  Location     Type
   329 ;;		None
   330 ;; Return value:  Size  Location     Type
   331 ;;                  1    wreg      void 
   332 ;; Registers used:
   333 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   334 ;; Tracked objects:
   335 ;;		On entry : B1F/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   339 ;;      Params:         0       0       0       0       0       0
   340 ;;      Locals:         0       0       0       0       0       0
   341 ;;      Temps:          3       0       0       0       0       0
   342 ;;      Totals:         3       0       0       0       0       0
   343 ;;Total ram usage:        3 bytes
   344 ;; Hardware stack levels required when called:    4
   345 ;; This function calls:
   346 ;;		_cursor
   347 ;;		_init
   348 ;;		_write_words
   349 ;; This function is called by:
   350 ;;		Startup code after reset
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           
   355                           ;psect for function _main
   356  0785                     _main:	
   357                           
   358                           ;lcd.c: 147: init();
   359                           
   360                           ;incstack = 0
   361                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   362  0785  3186  26F6  3187   	fcall	_init
   363  0788                     l91:	
   364                           ;lcd.c: 149: while (1) {
   365                           
   366                           
   367                           ;lcd.c: 151: cursor(1, 0);
   368  0788  01F4               	clrf	cursor@b
   369  0789  3001               	movlw	1
   370  078A  3187  2705  3187   	fcall	_cursor
   371                           
   372                           ;lcd.c: 152: write_words("Guten Appetit");
   373  078D  3000               	movlw	low (STR_1| (0+32768))
   374  078E  00F4               	movwf	write_words@c
   375  078F  3088               	movlw	high (STR_1| (0+32768))
   376  0790  00F5               	movwf	write_words@c+1
   377  0791  3187  273F  3187   	fcall	_write_words
   378                           
   379                           ;lcd.c: 153: _delay((unsigned long)((2000)*(4000000/4000.0)));
   380  0794  300B               	movlw	11
   381  0795  00FB               	movwf	??_main+2
   382  0796  3026               	movlw	38
   383  0797  00FA               	movwf	??_main+1
   384  0798  3066               	movlw	102
   385  0799  00F9               	movwf	??_main
   386  079A                     u157:	
   387  079A  0BF9               	decfsz	??_main,f
   388  079B  2F9A               	goto	u157
   389  079C  0BFA               	decfsz	??_main+1,f
   390  079D  2F9A               	goto	u157
   391  079E  0BFB               	decfsz	??_main+2,f
   392  079F  2F9A               	goto	u157
   393  07A0  3200               	nop2
   394                           
   395                           ;lcd.c: 156: cursor(2, 0);
   396  07A1  01F4               	clrf	cursor@b
   397  07A2  3002               	movlw	2
   398  07A3  3187  2705  3187   	fcall	_cursor
   399                           
   400                           ;lcd.c: 157: nickname = "Hovi";
   401  07A6  300E               	movlw	low (STR_2| (0+32768))
   402  07A7  00FC               	movwf	_nickname
   403  07A8  3088               	movlw	high (STR_2| (0+32768))
   404  07A9  00FD               	movwf	_nickname+1
   405                           
   406                           ;lcd.c: 158: write_words(nickname);
   407  07AA  087D               	movf	_nickname+1,w
   408  07AB  00F5               	movwf	write_words@c+1
   409  07AC  087C               	movf	_nickname,w
   410  07AD  00F4               	movwf	write_words@c
   411  07AE  3187  273F  3187   	fcall	_write_words
   412                           
   413                           ;lcd.c: 159: _delay((unsigned long)((2000)*(4000000/4000.0)));
   414  07B1  300B               	movlw	11
   415  07B2  00FB               	movwf	??_main+2
   416  07B3  3026               	movlw	38
   417  07B4  00FA               	movwf	??_main+1
   418  07B5  3066               	movlw	102
   419  07B6  00F9               	movwf	??_main
   420  07B7                     u167:	
   421  07B7  0BF9               	decfsz	??_main,f
   422  07B8  2FB7               	goto	u167
   423  07B9  0BFA               	decfsz	??_main+1,f
   424  07BA  2FB7               	goto	u167
   425  07BB  0BFB               	decfsz	??_main+2,f
   426  07BC  2FB7               	goto	u167
   427  07BD  3200               	nop2
   428  07BE  2F88               	goto	l91
   429  07BF                     __end_of_main:	
   430                           ;lcd.c: 160: }
   431                           ;lcd.c: 162: return;
   432                           
   433                           
   434                           	psect	text1
   435  073F                     __ptext1:	
   436 ;; *************** function _write_words *****************
   437 ;; Defined at:
   438 ;;		line 139 in file "lcd.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;  c               2    4[COMMON] PTR unsigned char 
   441 ;;		 -> NULL(0), STR_2(5), STR_1(14), 
   442 ;; Auto vars:     Size  Location     Type
   443 ;;  j               2    7[COMMON] int 
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   453 ;;      Params:         2       0       0       0       0       0
   454 ;;      Locals:         2       0       0       0       0       0
   455 ;;      Temps:          1       0       0       0       0       0
   456 ;;      Totals:         5       0       0       0       0       0
   457 ;;Total ram usage:        5 bytes
   458 ;; Hardware stack levels used:    1
   459 ;; Hardware stack levels required when called:    2
   460 ;; This function calls:
   461 ;;		_write_letter
   462 ;; This function is called by:
   463 ;;		_main
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           
   468                           ;psect for function _write_words
   469  073F                     _write_words:	
   470                           
   471                           ;lcd.c: 140: int j;
   472                           ;lcd.c: 141: for (j = 0; c[j] != '\0'; j++)
   473                           
   474                           ;incstack = 0
   475                           ; Regs used in _write_words: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   476  073F  01F7               	clrf	write_words@j
   477  0740  01F8               	clrf	write_words@j+1
   478  0741                     l668:	
   479  0741  0874               	movf	write_words@c,w
   480  0742  0777               	addwf	write_words@j,w
   481  0743  0084               	movwf	4
   482  0744  0875               	movf	write_words@c+1,w
   483  0745  3D78               	addwfc	write_words@j+1,w
   484  0746  0085               	movwf	5
   485  0747  0012               	moviw fsr0++
   486  0748  1903               	btfsc	3,2
   487  0749  0008               	return
   488                           
   489                           ;lcd.c: 142: write_letter(c[j]);
   490  074A  0874               	movf	write_words@c,w
   491  074B  0777               	addwf	write_words@j,w
   492  074C  0084               	movwf	4
   493  074D  0875               	movf	write_words@c+1,w
   494  074E  3D78               	addwfc	write_words@j+1,w
   495  074F  0085               	movwf	5
   496  0750  0800               	movf	0,w	;code access
   497  0751  3187  272B  3187   	fcall	_write_letter
   498  0754  3001               	movlw	1
   499  0755  07F7               	addwf	write_words@j,f
   500  0756  3000               	movlw	0
   501  0757  3DF8               	addwfc	write_words@j+1,f
   502  0758  2F41               	goto	l668
   503  0759                     __end_of_write_words:	
   504                           
   505                           	psect	text2
   506  072B                     __ptext2:	
   507 ;; *************** function _write_letter *****************
   508 ;; Defined at:
   509 ;;		line 131 in file "lcd.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;  c               1    wreg     unsigned char 
   512 ;; Auto vars:     Size  Location     Type
   513 ;;  c               1    3[COMMON] unsigned char 
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg, status,2, status,0, pclath, cstack
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   523 ;;      Params:         0       0       0       0       0       0
   524 ;;      Locals:         1       0       0       0       0       0
   525 ;;      Temps:          2       0       0       0       0       0
   526 ;;      Totals:         3       0       0       0       0       0
   527 ;;Total ram usage:        3 bytes
   528 ;; Hardware stack levels used:    1
   529 ;; Hardware stack levels required when called:    1
   530 ;; This function calls:
   531 ;;		_port
   532 ;; This function is called by:
   533 ;;		_write_words
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           
   538                           ;psect for function _write_letter
   539  072B                     _write_letter:	
   540                           
   541                           ;incstack = 0
   542                           ; Regs used in _write_letter: [wreg+status,2+status,0+pclath+cstack]
   543                           ;write_letter@c stored from wreg
   544  072B  00F3               	movwf	write_letter@c
   545                           
   546                           ;lcd.c: 132: RA0 = 1;
   547  072C  0020               	movlb	0	; select bank0
   548  072D  140C               	bsf	12,0	;volatile
   549                           
   550                           ;lcd.c: 133: port(c);
   551  072E  0873               	movf	write_letter@c,w
   552  072F  3187  2759  3187   	fcall	_port
   553                           
   554                           ;lcd.c: 134: RA2 = 1;
   555  0732  0020               	movlb	0	; select bank0
   556  0733  150C               	bsf	12,2	;volatile
   557                           
   558                           ;lcd.c: 135: _delay((unsigned long)((5)*(4000000/4000.0)));
   559  0734  3007               	movlw	7
   560  0735  00F2               	movwf	??_write_letter+1
   561  0736  307D               	movlw	125
   562  0737  00F1               	movwf	??_write_letter
   563  0738                     u177:	
   564  0738  0BF1               	decfsz	??_write_letter,f
   565  0739  2F38               	goto	u177
   566  073A  0BF2               	decfsz	??_write_letter+1,f
   567  073B  2F38               	goto	u177
   568                           
   569                           ;lcd.c: 136: RA2 = 0;
   570  073C  0020               	movlb	0	; select bank0
   571  073D  110C               	bcf	12,2	;volatile
   572  073E  0008               	return
   573  073F                     __end_of_write_letter:	
   574                           
   575                           	psect	text3
   576  06F6                     __ptext3:	
   577 ;; *************** function _init *****************
   578 ;; Defined at:
   579 ;;		line 73 in file "lcd.c"
   580 ;; Parameters:    Size  Location     Type
   581 ;;		None
   582 ;; Auto vars:     Size  Location     Type
   583 ;;		None
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      void 
   586 ;; Registers used:
   587 ;;		wreg, status,2, status,0, pclath, cstack
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   593 ;;      Params:         0       0       0       0       0       0
   594 ;;      Locals:         0       0       0       0       0       0
   595 ;;      Temps:          0       0       0       0       0       0
   596 ;;      Totals:         0       0       0       0       0       0
   597 ;;Total ram usage:        0 bytes
   598 ;; Hardware stack levels used:    1
   599 ;; Hardware stack levels required when called:    3
   600 ;; This function calls:
   601 ;;		_init_LCD
   602 ;; This function is called by:
   603 ;;		_main
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           
   608                           ;psect for function _init
   609  06F6                     _init:	
   610                           
   611                           ;lcd.c: 75: PORTA = 0;
   612                           
   613                           ;incstack = 0
   614                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
   615  06F6  0020               	movlb	0	; select bank0
   616  06F7  018C               	clrf	12	;volatile
   617                           
   618                           ;lcd.c: 76: PORTB = 0;
   619  06F8  018D               	clrf	13	;volatile
   620                           
   621                           ;lcd.c: 79: TRISA = 0;
   622  06F9  0021               	movlb	1	; select bank1
   623  06FA  018C               	clrf	12	;volatile
   624                           
   625                           ;lcd.c: 80: TRISB = 0;
   626  06FB  018D               	clrf	13	;volatile
   627                           
   628                           ;lcd.c: 83: ANSELA = 0;
   629  06FC  0023               	movlb	3	; select bank3
   630  06FD  018C               	clrf	12	;volatile
   631                           
   632                           ;lcd.c: 84: ANSELB = 0;
   633  06FE  018D               	clrf	13	;volatile
   634                           
   635                           ;lcd.c: 87: OSCCON = 0b01101011;
   636  06FF  306B               	movlw	107
   637  0700  0021               	movlb	1	; select bank1
   638  0701  0099               	movwf	25	;volatile
   639                           
   640                           ;lcd.c: 90: init_LCD();
   641  0702  3187  27BF         	fcall	_init_LCD
   642  0704  0008               	return
   643  0705                     __end_of_init:	
   644                           
   645                           	psect	text4
   646  07BF                     __ptext4:	
   647 ;; *************** function _init_LCD *****************
   648 ;; Defined at:
   649 ;;		line 58 in file "lcd.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;		None
   652 ;; Auto vars:     Size  Location     Type
   653 ;;		None
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg, status,2, status,0, pclath, cstack
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   663 ;;      Params:         0       0       0       0       0       0
   664 ;;      Locals:         0       0       0       0       0       0
   665 ;;      Temps:          2       0       0       0       0       0
   666 ;;      Totals:         2       0       0       0       0       0
   667 ;;Total ram usage:        2 bytes
   668 ;; Hardware stack levels used:    1
   669 ;; Hardware stack levels required when called:    2
   670 ;; This function calls:
   671 ;;		_cmd
   672 ;;		_port
   673 ;; This function is called by:
   674 ;;		_init
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           
   679                           ;psect for function _init_LCD
   680  07BF                     _init_LCD:	
   681                           
   682                           ;lcd.c: 59: port(0x00);
   683                           
   684                           ;incstack = 0
   685                           ; Regs used in _init_LCD: [wreg+status,2+status,0+pclath+cstack]
   686  07BF  3000               	movlw	0
   687  07C0  3187  2759  3187   	fcall	_port
   688                           
   689                           ;lcd.c: 60: RA0 = 0;
   690  07C3  0020               	movlb	0	; select bank0
   691  07C4  100C               	bcf	12,0	;volatile
   692                           
   693                           ;lcd.c: 61: _delay((unsigned long)((25)*(4000000/4000.0)));
   694  07C5  3021               	movlw	33
   695  07C6  00F5               	movwf	??_init_LCD+1
   696  07C7  3076               	movlw	118
   697  07C8  00F4               	movwf	??_init_LCD
   698  07C9                     u187:	
   699  07C9  0BF4               	decfsz	??_init_LCD,f
   700  07CA  2FC9               	goto	u187
   701  07CB  0BF5               	decfsz	??_init_LCD+1,f
   702  07CC  2FC9               	goto	u187
   703  07CD  0000               	nop
   704                           
   705                           ;lcd.c: 62: cmd(0x30);
   706  07CE  3030               	movlw	48
   707  07CF  3187  2717  3187   	fcall	_cmd
   708                           
   709                           ;lcd.c: 63: _delay((unsigned long)((5)*(4000000/4000.0)));
   710  07D2  3007               	movlw	7
   711  07D3  00F5               	movwf	??_init_LCD+1
   712  07D4  307D               	movlw	125
   713  07D5  00F4               	movwf	??_init_LCD
   714  07D6                     u197:	
   715  07D6  0BF4               	decfsz	??_init_LCD,f
   716  07D7  2FD6               	goto	u197
   717  07D8  0BF5               	decfsz	??_init_LCD+1,f
   718  07D9  2FD6               	goto	u197
   719                           
   720                           ;lcd.c: 64: cmd(0x30);
   721  07DA  3030               	movlw	48
   722  07DB  3187  2717  3187   	fcall	_cmd
   723                           
   724                           ;lcd.c: 65: _delay((unsigned long)((15)*(4000000/4000.0)));
   725  07DE  3014               	movlw	20
   726  07DF  00F5               	movwf	??_init_LCD+1
   727  07E0  3079               	movlw	121
   728  07E1  00F4               	movwf	??_init_LCD
   729  07E2                     u207:	
   730  07E2  0BF4               	decfsz	??_init_LCD,f
   731  07E3  2FE2               	goto	u207
   732  07E4  0BF5               	decfsz	??_init_LCD+1,f
   733  07E5  2FE2               	goto	u207
   734  07E6  3200               	nop2
   735                           
   736                           ;lcd.c: 66: cmd(0x30);
   737  07E7  3030               	movlw	48
   738  07E8  3187  2717  3187   	fcall	_cmd
   739                           
   740                           ;lcd.c: 67: cmd(0x38);
   741  07EB  3038               	movlw	56
   742  07EC  3187  2717  3187   	fcall	_cmd
   743                           
   744                           ;lcd.c: 68: cmd(0x0C);
   745  07EF  300C               	movlw	12
   746  07F0  3187  2717  3187   	fcall	_cmd
   747                           
   748                           ;lcd.c: 69: cmd(0x01);
   749  07F3  3001               	movlw	1
   750  07F4  3187  2717  3187   	fcall	_cmd
   751                           
   752                           ;lcd.c: 70: cmd(0x06);
   753  07F7  3006               	movlw	6
   754  07F8  3187  2717         	fcall	_cmd
   755  07FA  0008               	return
   756  07FB                     __end_of_init_LCD:	
   757                           
   758                           	psect	text5
   759  0705                     __ptext5:	
   760 ;; *************** function _cursor *****************
   761 ;; Defined at:
   762 ;;		line 124 in file "lcd.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;  a               1    wreg     unsigned char 
   765 ;;  b               1    4[COMMON] unsigned char 
   766 ;; Auto vars:     Size  Location     Type
   767 ;;  a               1    5[COMMON] unsigned char 
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      void 
   770 ;; Registers used:
   771 ;;		wreg, status,2, status,0, pclath, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   777 ;;      Params:         1       0       0       0       0       0
   778 ;;      Locals:         1       0       0       0       0       0
   779 ;;      Temps:          0       0       0       0       0       0
   780 ;;      Totals:         2       0       0       0       0       0
   781 ;;Total ram usage:        2 bytes
   782 ;; Hardware stack levels used:    1
   783 ;; Hardware stack levels required when called:    2
   784 ;; This function calls:
   785 ;;		_cmd
   786 ;; This function is called by:
   787 ;;		_main
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           
   792                           ;psect for function _cursor
   793  0705                     _cursor:	
   794                           
   795                           ;incstack = 0
   796                           ; Regs used in _cursor: [wreg+status,2+status,0+pclath+cstack]
   797                           ;cursor@a stored from wreg
   798  0705  00F5               	movwf	cursor@a
   799                           
   800                           ;lcd.c: 125: if (a == 1)
   801  0706  0375               	decf	cursor@a,w
   802  0707  1D03               	btfss	3,2
   803  0708  2F0E               	goto	l658
   804                           
   805                           ;lcd.c: 126: cmd(0x80 + b);
   806  0709  0874               	movf	cursor@b,w
   807  070A  3E80               	addlw	128
   808  070B  3187  2717         	fcall	_cmd
   809  070D  0008               	return
   810  070E                     l658:	
   811                           
   812                           ;lcd.c: 127: else if (a == 2)
   813  070E  3002               	movlw	2
   814  070F  0675               	xorwf	cursor@a,w
   815  0710  1D03               	btfss	3,2
   816  0711  0008               	return
   817                           
   818                           ;lcd.c: 128: cmd(0xC0 + b);
   819  0712  0874               	movf	cursor@b,w
   820  0713  3EC0               	addlw	192
   821  0714  3187  2717         	fcall	_cmd
   822  0716  0008               	return
   823  0717                     __end_of_cursor:	
   824                           
   825                           	psect	text6
   826  0717                     __ptext6:	
   827 ;; *************** function _cmd *****************
   828 ;; Defined at:
   829 ;;		line 112 in file "lcd.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;  c               1    wreg     unsigned char 
   832 ;; Auto vars:     Size  Location     Type
   833 ;;  c               1    3[COMMON] unsigned char 
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, status,2, status,0, pclath, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   843 ;;      Params:         0       0       0       0       0       0
   844 ;;      Locals:         1       0       0       0       0       0
   845 ;;      Temps:          2       0       0       0       0       0
   846 ;;      Totals:         3       0       0       0       0       0
   847 ;;Total ram usage:        3 bytes
   848 ;; Hardware stack levels used:    1
   849 ;; Hardware stack levels required when called:    1
   850 ;; This function calls:
   851 ;;		_port
   852 ;; This function is called by:
   853 ;;		_init_LCD
   854 ;;		_cursor
   855 ;;		_clear
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           
   860                           ;psect for function _cmd
   861  0717                     _cmd:	
   862                           
   863                           ;incstack = 0
   864                           ; Regs used in _cmd: [wreg+status,2+status,0+pclath+cstack]
   865                           ;cmd@c stored from wreg
   866  0717  00F3               	movwf	cmd@c
   867                           
   868                           ;lcd.c: 113: RA0 = 0;
   869  0718  0020               	movlb	0	; select bank0
   870  0719  100C               	bcf	12,0	;volatile
   871                           
   872                           ;lcd.c: 114: port(c);
   873  071A  0873               	movf	cmd@c,w
   874  071B  3187  2759  3187   	fcall	_port
   875                           
   876                           ;lcd.c: 115: RA2 = 1;
   877  071E  0020               	movlb	0	; select bank0
   878  071F  150C               	bsf	12,2	;volatile
   879                           
   880                           ;lcd.c: 116: _delay((unsigned long)((5)*(4000000/4000.0)));
   881  0720  3007               	movlw	7
   882  0721  00F2               	movwf	??_cmd+1
   883  0722  307D               	movlw	125
   884  0723  00F1               	movwf	??_cmd
   885  0724                     u217:	
   886  0724  0BF1               	decfsz	??_cmd,f
   887  0725  2F24               	goto	u217
   888  0726  0BF2               	decfsz	??_cmd+1,f
   889  0727  2F24               	goto	u217
   890                           
   891                           ;lcd.c: 117: RA2 = 0;
   892  0728  0020               	movlb	0	; select bank0
   893  0729  110C               	bcf	12,2	;volatile
   894  072A  0008               	return
   895  072B                     __end_of_cmd:	
   896                           
   897                           	psect	text7
   898  0759                     __ptext7:	
   899 ;; *************** function _port *****************
   900 ;; Defined at:
   901 ;;		line 93 in file "lcd.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;  c               1    wreg     unsigned char 
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  c               1    0[COMMON] unsigned char 
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   915 ;;      Params:         0       0       0       0       0       0
   916 ;;      Locals:         1       0       0       0       0       0
   917 ;;      Temps:          0       0       0       0       0       0
   918 ;;      Totals:         1       0       0       0       0       0
   919 ;;Total ram usage:        1 bytes
   920 ;; Hardware stack levels used:    1
   921 ;; This function calls:
   922 ;;		Nothing
   923 ;; This function is called by:
   924 ;;		_init_LCD
   925 ;;		_cmd
   926 ;;		_write_letter
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           
   931                           ;psect for function _port
   932  0759                     _port:	
   933                           
   934                           ;incstack = 0
   935                           ; Regs used in _port: [wreg]
   936                           ;port@c stored from wreg
   937  0759  00F0               	movwf	port@c
   938                           
   939                           ;lcd.c: 94: if (c & 1) RB0 = 1;
   940  075A  1C70               	btfss	port@c,0
   941  075B  2F5F               	goto	l51
   942  075C  0020               	movlb	0	; select bank0
   943  075D  140D               	bsf	13,0	;volatile
   944  075E  2F61               	goto	l558
   945  075F                     l51:	
   946                           
   947                           ;lcd.c: 95: else RB0 = 0;
   948  075F  0020               	movlb	0	; select bank0
   949  0760  100D               	bcf	13,0	;volatile
   950  0761                     l558:	
   951                           
   952                           ;lcd.c: 96: if (c & 2) RB1 = 1;
   953  0761  1CF0               	btfss	port@c,1
   954  0762  2F65               	goto	l53
   955  0763  148D               	bsf	13,1	;volatile
   956  0764  2F66               	goto	l562
   957  0765                     l53:	
   958                           
   959                           ;lcd.c: 97: else RB1 = 0;
   960  0765  108D               	bcf	13,1	;volatile
   961  0766                     l562:	
   962                           
   963                           ;lcd.c: 98: if (c & 4) RB2 = 1;
   964  0766  1D70               	btfss	port@c,2
   965  0767  2F6A               	goto	l55
   966  0768  150D               	bsf	13,2	;volatile
   967  0769  2F6B               	goto	l566
   968  076A                     l55:	
   969                           
   970                           ;lcd.c: 99: else RB2 = 0;
   971  076A  110D               	bcf	13,2	;volatile
   972  076B                     l566:	
   973                           
   974                           ;lcd.c: 100: if (c & 8) RB3 = 1;
   975  076B  1DF0               	btfss	port@c,3
   976  076C  2F6F               	goto	l57
   977  076D  158D               	bsf	13,3	;volatile
   978  076E  2F70               	goto	l570
   979  076F                     l57:	
   980                           
   981                           ;lcd.c: 101: else RB3 = 0;
   982  076F  118D               	bcf	13,3	;volatile
   983  0770                     l570:	
   984                           
   985                           ;lcd.c: 102: if (c & 16) RB4 = 1;
   986  0770  1E70               	btfss	port@c,4
   987  0771  2F74               	goto	l59
   988  0772  160D               	bsf	13,4	;volatile
   989  0773  2F75               	goto	l574
   990  0774                     l59:	
   991                           
   992                           ;lcd.c: 103: else RB4 = 0;
   993  0774  120D               	bcf	13,4	;volatile
   994  0775                     l574:	
   995                           
   996                           ;lcd.c: 104: if (c & 32) RB5 = 1;
   997  0775  1EF0               	btfss	port@c,5
   998  0776  2F79               	goto	l61
   999  0777  168D               	bsf	13,5	;volatile
  1000  0778  2F7A               	goto	l578
  1001  0779                     l61:	
  1002                           
  1003                           ;lcd.c: 105: else RB5 = 0;
  1004  0779  128D               	bcf	13,5	;volatile
  1005  077A                     l578:	
  1006                           
  1007                           ;lcd.c: 106: if (c & 64) RB6 = 1;
  1008  077A  1F70               	btfss	port@c,6
  1009  077B  2F7E               	goto	l63
  1010  077C  170D               	bsf	13,6	;volatile
  1011  077D  2F7F               	goto	l582
  1012  077E                     l63:	
  1013                           
  1014                           ;lcd.c: 107: else RB6 = 0;
  1015  077E  130D               	bcf	13,6	;volatile
  1016  077F                     l582:	
  1017                           
  1018                           ;lcd.c: 108: if (c & 128) RB7 = 1;
  1019  077F  1FF0               	btfss	port@c,7
  1020  0780  2F83               	goto	l65
  1021  0781  178D               	bsf	13,7	;volatile
  1022  0782  0008               	return
  1023  0783                     l65:	
  1024                           
  1025                           ;lcd.c: 109: else RB7 = 0;
  1026  0783  138D               	bcf	13,7	;volatile
  1027  0784  0008               	return
  1028  0785                     __end_of_port:	
  1029  007E                     btemp	set	126	;btemp
  1030  007E                     wtemp	set	126
  1031  007E                     wtemp0	set	126
  1032  0080                     wtemp1	set	128
  1033  0082                     wtemp2	set	130
  1034  0084                     wtemp3	set	132
  1035  0086                     wtemp4	set	134
  1036  0088                     wtemp5	set	136
  1037  007F                     wtemp6	set	127
  1038  007E                     ttemp	set	126
  1039  007E                     ttemp0	set	126
  1040  0081                     ttemp1	set	129
  1041  0084                     ttemp2	set	132
  1042  0087                     ttemp3	set	135
  1043  007F                     ttemp4	set	127
  1044  007E                     ltemp	set	126
  1045  007E                     ltemp0	set	126
  1046  0082                     ltemp1	set	130
  1047  0086                     ltemp2	set	134
  1048  0080                     ltemp3	set	128


Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    nickname	PTR unsigned char  size(2) Largest target is 5
		 -> NULL(NULL[0]), STR_2(CODE[5]), 

    write_words@c	PTR unsigned char  size(2) Largest target is 14
		 -> NULL(NULL[0]), STR_2(CODE[5]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_write_words
    _write_words->_write_letter
    _write_letter->_port
    _init->_init_LCD
    _init_LCD->_cmd
    _cursor->_cmd
    _cmd->_port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     915
                                              9 COMMON     3     3      0
                             _cursor
                               _init
                        _write_words
 ---------------------------------------------------------------------------------
 (1) _write_words                                          5     3      2     331
                                              4 COMMON     5     3      2
                       _write_letter
 ---------------------------------------------------------------------------------
 (2) _write_letter                                         3     3      0     135
                                              1 COMMON     3     3      0
                               _port
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     255
                           _init_LCD
 ---------------------------------------------------------------------------------
 (2) _init_LCD                                             2     2      0     255
                                              4 COMMON     2     2      0
                                _cmd
                               _port
 ---------------------------------------------------------------------------------
 (1) _cursor                                               2     1      1     329
                                              4 COMMON     2     1      1
                                _cmd
 ---------------------------------------------------------------------------------
 (3) _cmd                                                  3     3      0     135
                                              1 COMMON     3     3      0
                               _port
 ---------------------------------------------------------------------------------
 (3) _port                                                 1     1      0     120
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cursor
     _cmd
       _port
   _init
     _init_LCD
       _cmd
         _port
       _port
   _write_words
     _write_letter
       _port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0       E      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Thu Mar 31 14:42:03 2016

            __CFG_CP$OFF 0000                       l51 075F                       l61 0779  
                     l53 0765                       l63 077E                       l55 076A  
                     l65 0783                       l57 076F                       l59 0774  
                     l91 0788                      l570 0770                      l562 0766  
                    l582 077F                      l574 0775                      l566 076B  
                    l558 0761                      l578 077A                      l658 070E  
                    l668 0741                      _RA0 0060                      _RB0 0068  
                    _RA2 0062                      _RB1 0069                      _RB2 006A  
                    _RB3 006B                      _RB4 006C                      _RB5 006D  
                    _RB6 006E                      _RB7 006F                      u207 07E2  
                    u217 0724                      u157 079A                      u167 07B7  
                    u177 0738             __CFG_CPD$OFF 0000                      u187 07C9  
                    u197 07D6                      _cmd 0717             __CFG_BORV$LO 0000  
           __CFG_LVP$OFF 0000                     ?_cmd 0070                     STR_1 0800  
                   STR_2 080E             __CFG_WRT$OFF 0000                     cmd@c 0073  
                   _main 0785                     _init 06F6                     _port 0759  
                   fsr0h 0005                     fsr0l 0004                     indf0 0000  
                   btemp 007E                     ltemp 007E                     start 0002  
                   ttemp 007E                     wtemp 007E            __CFG_IESO$OFF 0000  
          write_letter@c 0073            __CFG_MCLRE$ON 0000                    ??_cmd 0071  
                  ?_main 0070                    ?_init 0070            __CFG_WDTE$OFF 0000  
                  ?_port 0070                    _PORTA 000C                    _PORTB 000D  
                  _TRISA 008C                    _TRISB 008D           __CFG_FCMEN$OFF 0000  
            _write_words 073F           __CFG_BOREN$OFF 0000                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  port@c 0070                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 07FB  
           __end_of_main 07BF             __end_of_init 0705             __end_of_port 0785  
  __size_of_write_letter 0014                   ??_main 0079                   ??_init 0076  
                 ??_port 0070           __CFG_PLLEN$OFF 0000                   _ANSELA 018C  
                 _ANSELB 018D                   _OSCCON 0099           __CFG_PWRTE$OFF 0000  
           _write_letter 072B         __end_of_init_LCD 07FB                   _cursor 0705  
__end_of__initialization 07FD           __pcstackCOMMON 0070               __pmaintext 0785  
                ?_cursor 0074             ?_write_words 0074                ?_init_LCD 0070  
        __CFG_STVREN$OFF 0000          __size_of_cursor 0012                  __ptext1 073F  
                __ptext2 072B                  __ptext3 06F6                  __ptext4 07BF  
                __ptext5 0705                  __ptext6 0717                  __ptext7 0759  
           __size_of_cmd 0014     end_of_initialization 07FD               ??_init_LCD 0074  
                cursor@a 0075                  cursor@b 0074             __pstringtext 0800  
       __CFG_FOSC$INTOSC 0000             write_words@c 0074             write_words@j 0077  
         __end_of_cursor 0717      start_initialization 07FB              __end_of_cmd 072B  
   __size_of_write_words 001A                 ??_cursor 0075              __pbssCOMMON 007C  
              ___latbits 0001        __size_of_init_LCD 003C            ?_write_letter 0070  
         ??_write_letter 0071                 _init_LCD 07BF            __size_of_main 003A  
          __size_of_init 000F                 _nickname 007C            __size_of_port 002C  
          ??_write_words 0076        __CFG_CLKOUTEN$OFF 0000     __end_of_write_letter 073F  
    __end_of_write_words 0759  
